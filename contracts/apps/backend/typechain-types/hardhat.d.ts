/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "PolicyBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PolicyBase__factory>;
    getContractFactory(
      name: "PolicyBaseMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PolicyBaseMock__factory>;
    getContractFactory(
      name: "HealthCareLite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HealthCareLite__factory>;
    getContractFactory(
      name: "LifeCareLite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LifeCareLite__factory>;
    getContractFactory(
      name: "InsuranceVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InsuranceVault__factory>;
    getContractFactory(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceOracle__factory>;

    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "PolicyBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PolicyBase>;
    getContractAt(
      name: "PolicyBaseMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PolicyBaseMock>;
    getContractAt(
      name: "HealthCareLite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HealthCareLite>;
    getContractAt(
      name: "LifeCareLite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LifeCareLite>;
    getContractAt(
      name: "InsuranceVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InsuranceVault>;
    getContractAt(
      name: "PriceOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceOracle>;

    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "PolicyBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PolicyBase>;
    deployContract(
      name: "PolicyBaseMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PolicyBaseMock>;
    deployContract(
      name: "HealthCareLite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HealthCareLite>;
    deployContract(
      name: "LifeCareLite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LifeCareLite>;
    deployContract(
      name: "InsuranceVault",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InsuranceVault>;
    deployContract(
      name: "PriceOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PriceOracle>;

    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "PolicyBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PolicyBase>;
    deployContract(
      name: "PolicyBaseMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PolicyBaseMock>;
    deployContract(
      name: "HealthCareLite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HealthCareLite>;
    deployContract(
      name: "LifeCareLite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LifeCareLite>;
    deployContract(
      name: "InsuranceVault",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InsuranceVault>;
    deployContract(
      name: "PriceOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PriceOracle>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}

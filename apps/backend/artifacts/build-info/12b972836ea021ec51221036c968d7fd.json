{"id":"12b972836ea021ec51221036c968d7fd","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/base/PolicyBase.sol":{"content":"\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport \"../utils/InsuranceVault.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n/// @title PolicyBase\n/// @notice Abstract base contract for insurance plans with signature verification\nabstract contract PolicyBase is AccessControl {\n    using MessageHashUtils for bytes32;\n    \n    // ReentrancyGuard implementation\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n    uint256 private _status;\n\n    // Define roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    \n    // Backend signer address\n    address public trustedSigner;\n    \n    // Vault address for managing funds\n    InsuranceVault public vault;\n    \n    // Claim request expiry period (7 days by default)\n    uint256 public claimExpiryPeriod = 7 days;\n\n    struct Policy {\n        bytes32 policyId;\n        address owner;\n        uint256 premium;\n        uint256 sumAssured;\n        uint256 expiry;\n        bool isActive;\n        bool isClaimed;\n        uint256 createdAt;\n    }\n\n    struct ClaimRequest {\n        bytes32 policyId;\n        uint256 amount;\n        bool isPending;\n        uint256 createdAt;\n        uint256 expiryTimestamp;\n    }\n\n    mapping(bytes32 => Policy) internal policies;\n    mapping(bytes32 => ClaimRequest) internal claims;\n    mapping(bytes32 => bool) internal usedSignatures;\n    \n    // Events\n    event PolicyPurchased(bytes32 indexed policyId, address indexed owner, uint256 premium, uint256 sumAssured, uint256 expiry);\n    event ClaimFiled(bytes32 indexed policyId, address indexed owner, uint256 amount);\n    event ClaimApproved(bytes32 indexed policyId, address indexed owner, uint256 amount);\n    event PolicyCancelled(bytes32 indexed policyId, address indexed owner, uint256 refundAmount);\n    event RefundIssued(bytes32 indexed policyId, address indexed owner, uint256 amount);\n    event AdminGranted(address indexed admin);\n    event TrustedSignerUpdated(address indexed oldSigner, address indexed newSigner);\n    event PolicyRenewed(bytes32 indexed policyId, address indexed owner, uint256 premium, uint256 newExpiry);\n    event PolicyExpired(bytes32 indexed policyId, address indexed owner);\n    event ClaimExpiryPeriodUpdated(uint256 oldPeriod, uint256 newPeriod);\n    event VaultUpdated(address indexed oldVault, address indexed newVault);\n\n    constructor(address _trustedSigner, address payable _vaultAddress) {\n        require(_trustedSigner != address(0), \"Invalid signer address\");\n        require(_vaultAddress != address(0), \"Invalid vault address\");\n        \n        // Grant the contract deployer the default admin role and admin role\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n        \n        // Set trusted signer address\n        trustedSigner = _trustedSigner;\n        \n        // Set vault address\n        vault = InsuranceVault(_vaultAddress);\n        \n        // Initialize reentrancy guard\n        _status = _NOT_ENTERED;\n    }\n\n    /// @notice Modifier to prevent reentrancy attacks\n    modifier nonReentrant() {\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n        _status = _ENTERED;\n        _;\n        _status = _NOT_ENTERED;\n    }\n\n    /// @notice Set the trusted signer address\n    /// @param newSigner Address of the backend that will sign premium and claim amounts\n    function setTrustedSigner(address newSigner) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(newSigner != address(0), \"Invalid signer address\");\n        address oldSigner = trustedSigner;\n        trustedSigner = newSigner;\n        emit TrustedSignerUpdated(oldSigner, newSigner);\n    }\n    \n    /// @notice Set the vault address\n    /// @param newVault Address of the new vault\n    function setVault(address payable newVault) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(newVault != address(0), \"Invalid vault address\");\n        address oldVault = address(vault);\n        vault = InsuranceVault(newVault);\n        emit VaultUpdated(oldVault, newVault);\n    }\n\n    /// @notice Set the claim expiry period\n    /// @param periodInDays Number of days a claim remains valid\n    function setClaimExpiryPeriod(uint256 periodInDays) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(periodInDays > 0, \"Period must be positive\");\n        uint256 oldPeriod = claimExpiryPeriod;\n        claimExpiryPeriod = periodInDays * 1 days;\n        emit ClaimExpiryPeriodUpdated(oldPeriod, claimExpiryPeriod);\n    }\n\n    /// @notice Grant admin role (only default admin can do this)\n    function grantAdminRole(address newAdmin) external virtual onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(newAdmin != address(0), \"Invalid admin address\");\n        _grantRole(ADMIN_ROLE, newAdmin);\n        emit AdminGranted(newAdmin);\n    }\n\n    /// @notice Revoke admin role (only default admin can do this)\n    function revokeAdminRole(address admin) external virtual onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(admin != address(0), \"Invalid admin address\");\n        require(admin != msg.sender, \"Cannot revoke self\");\n        _revokeRole(ADMIN_ROLE, admin);\n    }\n\n    /// @notice Modifier to check if policy is valid\n    modifier validPolicy(bytes32 policyId) {\n        require(policies[policyId].isActive, \"Policy not active\");\n        _;\n    }\n\n    /// @notice Generate a unique hashed policy ID\n    function generatePolicyId(address user, uint256 timestamp) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(user, timestamp));\n    }\n\n    /// @notice Verify a signature from the backend using ECDSA library (like FlightInsurance)\n    /// @param messageHash The message hash that was signed\n    /// @param signature The signature to verify\n    function verifySignature(bytes32 messageHash, bytes memory signature) internal view returns (bool) {\n        require(!usedSignatures[keccak256(signature)], \"Signature already used\");\n        bytes32 ethSignedMessageHash = messageHash.toEthSignedMessageHash();\n        address recoveredSigner = ECDSA.recover(ethSignedMessageHash, signature);\n        return recoveredSigner == trustedSigner;\n    }\n\n    /// @notice Purchase a new policy with backend-verified premium\n    /// @param owner Address of the policy owner\n    /// @param premium Premium amount calculated by backend\n    /// @param sumAssured Sum assured amount\n    /// @param duration Policy duration in seconds\n    /// @param signature Signature from the backend verifying the parameters\n    function purchasePolicy(\n        address owner,\n        uint256 premium,\n        uint256 sumAssured,\n        uint256 duration,\n        bytes memory signature\n    ) public payable virtual nonReentrant returns (bytes32) {  \n        require(owner != address(0), \"Invalid owner address\");\n        require(premium > 0, \"Premium must be positive\");\n        require(sumAssured > 0, \"Sum assured must be positive\");\n        require(duration > 0, \"Duration must be positive\");\n        require(msg.value == premium, \"Incorrect premium amount\");\n        \n        // Create hash of the policy parameters for signature verification\n        // Including blockchainId for extra security\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(\n                owner,\n                premium,\n                sumAssured,\n                duration,\n                block.chainid\n            )\n        );\n        \n        // Verify signature\n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        \n        // Mark signature as used\n        usedSignatures[keccak256(signature)] = true;\n        \n        // Generate a unique policy ID\n        bytes32 policyId = generatePolicyId(owner, block.timestamp);\n        require(!policies[policyId].isActive, \"Policy already exists\");\n\n        // Create the policy record first\n        policies[policyId] = Policy({\n            policyId: policyId,\n            owner: owner,\n            premium: premium,\n            sumAssured: sumAssured,\n            expiry: block.timestamp + duration,\n            isActive: true,\n            isClaimed: false,\n            createdAt: block.timestamp\n        });\n\n        // Handle policy-specific data processing\n        _processPolicyData(policyId);\n\n        // Forward the premium to the vault\n        (bool sent, ) = address(vault).call{value: premium}(\"\");\n        require(sent, \"Premium transfer to vault failed\");\n\n        emit PolicyPurchased(policyId, owner, premium, sumAssured, block.timestamp + duration);\n        \n        return policyId;  // Return the policy ID\n    }\n\n    /// @notice Process policy-specific data (to be implemented by derived contracts)\n    /// @param policyId The ID of the policy\n    function _processPolicyData(bytes32 policyId) internal virtual;\n\n    /// @notice File a claim for the insurance with signature verification\n    /// @param policyId The ID of the policy\n    /// @param amount Claim amount\n    /// @param signature Signature from the backend verifying the claim\n    function fileClaim(\n        bytes32 policyId,\n        uint256 amount,\n        bytes memory signature\n    ) public virtual nonReentrant validPolicy(policyId) {\n        Policy storage policy = policies[policyId];\n        require(policy.owner == msg.sender, \"Not the policy owner\");\n        require(amount <= policy.sumAssured, \"Claim exceeds sum assured\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        require(block.timestamp < policy.expiry, \"Policy expired\");\n        \n        // Create hash of the claim parameters for signature verification\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(\n                policyId,\n                amount,\n                block.chainid\n            )\n        );\n        \n        // Verify signature\n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        \n        // Mark signature as used\n        usedSignatures[keccak256(signature)] = true;\n\n        claims[policyId] = ClaimRequest({\n            policyId: policyId,\n            amount: amount,\n            isPending: true,\n            createdAt: block.timestamp,\n            expiryTimestamp: block.timestamp + claimExpiryPeriod\n        });\n\n        emit ClaimFiled(policyId, policy.owner, amount);\n    }\n\n    /// @notice Approve a claim after admin review\n    /// @param policyId The ID of the policy\n    function approveClaim(bytes32 policyId) \n        public \n        virtual \n        onlyRole(ADMIN_ROLE) \n        validPolicy(policyId) \n        nonReentrant \n        returns (uint256) \n    {\n        ClaimRequest storage claim = claims[policyId];\n        Policy storage policy = policies[policyId];\n\n        require(claim.isPending, \"No pending claim\");\n        require(block.timestamp <= claim.expiryTimestamp, \"Claim request expired\");\n\n        // Update status first to prevent reentrancy attacks\n        claim.isPending = false;\n        policy.isClaimed = true;\n        policy.isActive = false;\n\n        // Send payment to the policy owner through vault\n        vault.approveClaim(payable(policy.owner), claim.amount);\n\n        emit ClaimApproved(policyId, policy.owner, claim.amount);\n        return claim.amount;\n    }\n    \n    /// @notice Cancel the policy with backend verification\n    /// @param policyId The ID of the policy\n    /// @param refundAmount Refund amount\n    /// @param signature Signature from the backend verifying the refund amount\n    function cancelPolicy(\n        bytes32 policyId,\n        uint256 refundAmount,\n        bytes memory signature\n    ) public virtual onlyRole(ADMIN_ROLE) validPolicy(policyId) nonReentrant {\n        Policy storage policy = policies[policyId];\n        require(!policy.isClaimed, \"Policy already claimed\");\n        require(block.timestamp < policy.expiry, \"Policy expired\");\n        \n        // Create hash of the refund parameters for signature verification\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(\n                policyId,\n                refundAmount,\n                block.chainid\n            )\n        );\n        \n        // Verify signature\n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        \n        // Mark signature as used\n        usedSignatures[keccak256(signature)] = true;\n        \n        // Change state before transfer to prevent reentrancy\n        policy.isActive = false;\n\n        // Transfer the refund through vault\n        vault.sendRefund(payable(policy.owner), refundAmount);\n\n        emit PolicyCancelled(policyId, policy.owner, refundAmount);\n        emit RefundIssued(policyId, policy.owner, refundAmount);\n    }\n\n    /// @notice Get policy details\n    /// @param policyId The ID of the policy\n    function getPolicy(bytes32 policyId) external view virtual returns (Policy memory) {\n        return policies[policyId];\n    }\n\n    /// @notice Get claim details\n    /// @param policyId The ID of the policy\n    function getClaim(bytes32 policyId) external view virtual returns (ClaimRequest memory) {\n        return claims[policyId];\n    }\n\n    /// @notice Mark a policy as expired\n    /// @param policyId The ID of the policy\n    function markExpiredPolicy(bytes32 policyId) external {\n        Policy storage policy = policies[policyId];\n        require(policy.isActive, \"Policy not active\");\n        require(block.timestamp >= policy.expiry, \"Policy not expired yet\");\n        \n        policy.isActive = false;\n        \n        emit PolicyExpired(policyId, policy.owner);\n    }\n\n    /// @notice Renew an existing policy with backend-verified premium\n    /// @param policyId The ID of the policy\n    /// @param premium New premium amount\n    /// @param duration Additional duration in seconds\n    /// @param signature Signature from the backend verifying the renewal parameters\n    function renewPolicy(\n        bytes32 policyId,\n        uint256 premium,\n        uint256 duration,\n        bytes memory signature\n    ) external payable virtual nonReentrant validPolicy(policyId) {\n        Policy storage policy = policies[policyId];\n        require(policy.owner == msg.sender, \"Not the policy owner\");\n        require(msg.value == premium, \"Incorrect premium amount\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        \n        // Create hash of the renewal parameters for signature verification\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(\n                policyId,\n                premium,\n                duration,\n                block.chainid\n            )\n        );\n        \n        // Verify signature\n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        \n        // Mark signature as used\n        usedSignatures[keccak256(signature)] = true;\n        \n        // Update policy\n        policy.premium = premium;\n        policy.expiry = policy.expiry + duration;\n        \n        // Forward the premium to the vault\n        (bool sent, ) = address(vault).call{value: premium}(\"\");\n        require(sent, \"Premium transfer to vault failed\");\n        \n        emit PolicyRenewed(policyId, policy.owner, premium, policy.expiry);\n    }\n    \n    /// @notice Emergency withdraw function (only for admin)\n    /// @param amount Amount to withdraw\n    function emergencyWithdraw(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) nonReentrant {\n        // This now calls the vault's withdrawFunds function instead of direct transfer\n        vault.withdrawFunds(payable(msg.sender), amount);\n    }\n    \n    // Function to receive Ether - but now we forward it to vault\n    receive() external payable {\n        // Forward any received ETH to the vault\n        (bool sent, ) = address(vault).call{value: msg.value}(\"\");\n        require(sent, \"ETH forwarding to vault failed\");\n    }\n}"},"contracts/mock/PolicyBaseMock.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../base/PolicyBase.sol\";\nimport \"../utils/InsuranceVault.sol\";\n\n/// @title PolicyBaseMock\n/// @notice Mock implementation of PolicyBase for testing\ncontract PolicyBaseMock is PolicyBase {\n    struct MockPolicyData {\n        string metadata;\n        bool processed;\n    }\n    \n    mapping(bytes32 => MockPolicyData) private mockPolicyData;\n    address private mockVaultReceiver;\n\n    constructor(address _trustedSigner, address payable _vaultAddress) \n        PolicyBase(_trustedSigner, _vaultAddress) \n    {\n        mockVaultReceiver = address(this);\n    }\n\n    function _processPolicyData(bytes32 policyId) internal override {\n        mockPolicyData[policyId] = MockPolicyData({\n            metadata: \"Test Metadata\",\n            processed: true\n        });\n    }\n\n    /// @notice Mock function to directly purchase a policy without signature verification\n    function purchasePolicyWithoutSignature(\n        address owner,\n        uint256 premium,\n        uint256 sumAssured,\n        uint256 duration\n    ) public payable {\n        require(owner != address(0), \"Invalid owner address\");\n        require(premium > 0, \"Premium must be positive\");\n        require(sumAssured > 0, \"Sum assured must be positive\");\n        require(duration > 0, \"Duration must be positive\");\n        require(msg.value == premium, \"Incorrect premium amount\");\n        \n        bytes32 policyId = generatePolicyId(owner, block.timestamp);\n        require(!policies[policyId].isActive, \"Policy already exists\");\n\n        policies[policyId] = Policy({\n            policyId: policyId,\n            owner: owner,\n            premium: premium,\n            sumAssured: sumAssured,\n            expiry: block.timestamp + duration,\n            isActive: true,\n            isClaimed: false,\n            createdAt: block.timestamp\n        });\n\n        _processPolicyData(policyId);\n        (bool sent, ) = address(vault).call{value: premium}(\"\");\n        require(sent, \"Premium transfer to vault failed\");\n\n        emit PolicyPurchased(policyId, owner, premium, sumAssured, block.timestamp + duration);\n    }\n\n    /// @notice Test version of purchasePolicy with signature verification\n    function purchasePolicyWithSignature(\n        address owner,\n        uint256 premium,\n        uint256 sumAssured,\n        uint256 duration,\n        bytes memory signature\n    ) public payable nonReentrant {\n        require(owner != address(0), \"Invalid owner address\");\n        require(premium > 0, \"Premium must be positive\");\n        require(sumAssured > 0, \"Sum assured must be positive\");\n        require(duration > 0, \"Duration must be positive\");\n        require(msg.value == premium, \"Incorrect premium amount\");\n        \n        bytes32 messageHash = keccak256(\n            abi.encodePacked(\n                owner,\n                premium,\n                sumAssured,\n                duration,\n                block.chainid\n            )\n        );\n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        usedSignatures[keccak256(signature)] = true;\n        \n        bytes32 policyId = generatePolicyId(owner, block.timestamp);\n        require(!policies[policyId].isActive, \"Policy already exists\");\n\n        policies[policyId] = Policy({\n            policyId: policyId,\n            owner: owner,\n            premium: premium,\n            sumAssured: sumAssured,\n            expiry: block.timestamp + duration,\n            isActive: true,\n            isClaimed: false,\n            createdAt: block.timestamp\n        });\n\n        _processPolicyData(policyId);\n        (bool sent, ) = address(vault).call{value: premium}(\"\");\n        require(sent, \"Premium transfer to vault failed\");\n\n        emit PolicyPurchased(policyId, owner, premium, sumAssured, block.timestamp + duration);\n    }\n\n    function getMockPolicyData(bytes32 policyId) external view returns (MockPolicyData memory) {\n        return mockPolicyData[policyId];\n    }\n\n    function forceExpirePolicy(bytes32 policyId) external onlyRole(ADMIN_ROLE) {\n        Policy storage policy = policies[policyId];\n        require(policy.isActive, \"Policy not active\");\n\n        policy.isActive = false;\n        policy.expiry = block.timestamp - 1;\n\n        emit PolicyExpired(policyId, policy.owner);\n    }\n\n    function advanceTime(bytes32 policyId, uint256 timeToAdvance) external onlyRole(ADMIN_ROLE) {\n        Policy storage policy = policies[policyId];\n        require(policy.isActive, \"Policy not active\");\n        if (policy.expiry > timeToAdvance) {\n            policy.expiry -= timeToAdvance;\n        } else {\n            policy.expiry = 0;\n        }\n    }\n\n    /// @notice File a claim without signature verification (for testing only)\n    /// @param policyId The ID of the policy\n    /// @param amount Claim amount\n    function fileClaimWithoutSignature(\n        bytes32 policyId,\n        uint256 amount\n    ) public validPolicy(policyId) {\n        Policy storage policy = policies[policyId];\n        require(amount <= policy.sumAssured, \"Claim exceeds sum assured\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        require(block.timestamp < policy.expiry, \"Policy expired\");\n        \n        claims[policyId] = ClaimRequest({\n            policyId: policyId,\n            amount: amount,\n            isPending: true,\n            createdAt: block.timestamp,\n            expiryTimestamp: block.timestamp + claimExpiryPeriod\n        });\n\n        emit ClaimFiled(policyId, policy.owner, amount);\n    }\n\n    function setClaimState(\n        bytes32 policyId,\n        bool isPending,\n        bool isClaimed,\n        bool isActive\n    ) external onlyRole(ADMIN_ROLE) {\n        Policy storage policy = policies[policyId];\n        ClaimRequest storage claim = claims[policyId];\n        require(policy.policyId == policyId, \"Policy does not exist\");\n        claim.isPending = isPending;\n        policy.isClaimed = isClaimed;\n        policy.isActive = isActive;\n    }\n\n    function renewPolicyWithoutSignature(\n        bytes32 policyId,\n        uint256 premium,\n        uint256 duration\n    ) external payable validPolicy(policyId) {\n        Policy storage policy = policies[policyId];\n        require(policy.owner == msg.sender, \"Not the policy owner\");\n        require(msg.value == premium, \"Incorrect premium amount\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        policy.premium = premium;\n        policy.expiry = policy.expiry + duration;\n        (bool sent, ) = address(vault).call{value: premium}(\"\");\n        require(sent, \"Premium transfer to vault failed\");\n        emit PolicyRenewed(policyId, policy.owner, premium, policy.expiry);\n    }\n\n    function setExpiryTimestamp(\n        bytes32 policyId,\n        uint256 expiryTimestamp\n    ) external onlyRole(ADMIN_ROLE) {\n        Policy storage policy = policies[policyId];\n        require(policy.policyId == policyId, \"Policy does not exist\");\n        policy.expiry = expiryTimestamp;\n        if (expiryTimestamp <= block.timestamp && policy.isActive) {\n            policy.isActive = false;\n            emit PolicyExpired(policyId, policy.owner);\n        }\n    }\n    \n    function setTimeToNearExpiry(\n        bytes32 policyId,\n        uint256 daysBeforeExpiry\n    ) external onlyRole(ADMIN_ROLE) {\n        Policy storage policy = policies[policyId];\n        require(policy.policyId == policyId, \"Policy does not exist\");\n        require(policy.isActive, \"Policy not active\");\n        uint256 newExpiry = block.timestamp + (daysBeforeExpiry * 1 days);\n        require(newExpiry <= policy.expiry, \"New expiry exceeds original expiry\");\n        policy.expiry = newExpiry;\n    }\n\n    /// @notice Create a mock claim directly (for testing only)\n    /// @param policyId The ID of the policy\n    /// @param amount Claim amount\n    /// @param isPending Whether the claim is pending\n    function createMockClaim(\n        bytes32 policyId,\n        uint256 amount,\n        bool isPending\n    ) external onlyRole(ADMIN_ROLE) {\n        Policy storage policy = policies[policyId];\n        require(policy.policyId == policyId, \"Policy does not exist\");\n        claims[policyId] = ClaimRequest({\n            policyId: policyId,\n            amount: amount,\n            isPending: isPending,\n            createdAt: block.timestamp,\n            expiryTimestamp: block.timestamp + claimExpiryPeriod\n        });\n        emit ClaimFiled(policyId, policy.owner, amount);\n    }\n\n    function approveClaimWithoutVerification(\n        bytes32 policyId\n    ) external onlyRole(ADMIN_ROLE) validPolicy(policyId) returns (uint256) {\n        ClaimRequest storage claim = claims[policyId];\n        Policy storage policy = policies[policyId];\n        require(claim.isPending, \"No pending claim\");\n        claim.isPending = false;\n        policy.isClaimed = true;\n        policy.isActive = false;\n        vault.approveClaim(payable(policy.owner), claim.amount);\n        emit ClaimApproved(policyId, policy.owner, claim.amount);\n        return claim.amount;\n    }\n    \n    function setMockVaultReceiver(address newReceiver) external onlyRole(ADMIN_ROLE) {\n        mockVaultReceiver = newReceiver;\n    }\n    \n    function simulateVaultTransfer(address payable to, uint256 amount) external onlyRole(ADMIN_ROLE) {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        (bool sent, ) = to.call{value: amount}(\"\");\n        require(sent, \"Transfer failed\");\n    }\n\n    function cancelPolicyWithoutTransfer(\n        bytes32 policyId\n    ) external onlyRole(ADMIN_ROLE) validPolicy(policyId) {\n        Policy storage policy = policies[policyId];\n        policy.isActive = false;\n        emit PolicyCancelled(policyId, policy.owner, 0);\n    }\n}"},"contracts/plans/HealthCareLite.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../base/PolicyBase.sol\";\nimport \"../utils/InsuranceVault.sol\";\n\n/// @title HealthCareLite\n/// @notice Entry-level health insurance contract with annual maximum coverage and basic hospitalization benefits\n/// @dev Extends PolicyBase for core functionality with signature verification and vault integration\ncontract HealthCareLite is PolicyBase {\n    // Standard policy duration (1 year)\n    uint256 private constant DURATION = 365 days;\n    \n    // Additional storage for health policy specific data\n    mapping(bytes32 => uint256) private claimAmounts; // Track claim amounts separately\n    \n    // Events\n    event PremiumCalculated(bytes32 indexed policyId, address indexed user, uint256 premium);\n    event ClaimTransferred(bytes32 indexed policyId, address indexed beneficiary, uint256 amount);\n    event PolicyRefunded(bytes32 indexed policyId, address indexed owner, uint256 refundAmount);\n  \n    \n    /// @dev Constructor passes parameters to PolicyBase\n    constructor(address _trustedSigner, address payable _vaultAddress) \n        PolicyBase(_trustedSigner, _vaultAddress) \n    {\n        // No additional initialization needed\n    }\n    \n    /// @notice Process policy-specific data (minimal implementation)\n    function _processPolicyData(bytes32 policyId) internal override {\n        claimAmounts[policyId] = 0;\n    }\n    \n    /// @notice Purchase policy with ETH payment and backend signature verification\n    function purchaseHealthPolicy(\n        address owner,\n        uint256 premium,\n        uint256 sumAssured,\n        uint256 /* duration */,  \n        bytes memory signature\n    ) public payable {\n        uint256 actualDuration = DURATION;\n        bytes32 policyId = super.purchasePolicy(owner, premium, sumAssured, actualDuration, signature);\n        // ไม่ต้องโอนเงินซ้ำ เพราะ PolicyBase.purchasePolicy จะโอนให้แล้ว\n        emit PremiumCalculated(policyId, owner, premium);\n    }\n    \n    /// @notice Admin approves claim and transfers funds from vault\n    function approveClaim(bytes32 policyId) \n        public \n        override\n        onlyRole(ADMIN_ROLE) \n        validPolicy(policyId)\n        returns (uint256) \n    {\n        ClaimRequest storage claim = claims[policyId];\n        Policy storage policy = policies[policyId];\n        require(claim.isPending, \"No pending claim\");\n        require(block.timestamp <= claim.expiryTimestamp, \"Claim request expired\");\n        \n        claim.isPending = false;\n        claimAmounts[policyId] += claim.amount;\n        \n        if (claimAmounts[policyId] >= policy.sumAssured) {\n            policy.isActive = false;\n            policy.isClaimed = true;\n        }\n        \n        // เรียกใช้ vault ที่ได้รับมาจาก PolicyBase\n        vault.approveClaim(payable(policy.owner), claim.amount);\n        \n        emit ClaimApproved(policyId, policy.owner, claim.amount);\n        emit ClaimTransferred(policyId, policy.owner, claim.amount);\n        return claim.amount;\n    }\n    \n    /// @notice Get remaining coverage for a policy\n    function getRemainingCoverage(bytes32 policyId) public view returns (uint256) {\n        Policy memory policy = policies[policyId];\n        if (!policy.isActive) return 0;\n        uint256 claimed = claimAmounts[policyId];\n        if (claimed >= policy.sumAssured) return 0;\n        return policy.sumAssured - claimed;\n    }\n    \n    /// @notice Calculate refund based on unused duration\n    function calculateRefund(bytes32 policyId) public view returns (uint256) {\n        Policy memory p = policies[policyId];\n        if (!p.isActive || block.timestamp >= p.expiry) return 0;\n        uint256 unusedDuration = p.expiry - block.timestamp;\n        uint256 totalDuration = p.expiry - p.createdAt;\n        if (totalDuration == 0) return 0;\n        return (p.premium * unusedDuration) / totalDuration;\n    }\n    \n    /// @notice HealthCareLite supports yearly renewals\n    function renewPolicy(\n        bytes32 policyId,\n        uint256 premium,\n        uint256 /* duration */,\n        bytes memory signature\n    ) external payable override {\n        Policy storage policy = policies[policyId];\n        require(policy.owner == msg.sender, \"Not the policy owner\");\n        require(policy.isActive, \"Policy not active\");\n        require(!policy.isClaimed, \"Policy fully claimed\");\n        require(msg.value == premium, \"Incorrect premium amount\");\n        require(\n            block.timestamp >= policy.expiry || policy.expiry - block.timestamp <= 30 days,\n            \"Too early to renew\"\n        );\n        \n        uint256 actualDuration = DURATION;\n        \n        // Consistent parameter ordering for messageHash\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(policyId, policy.owner, premium, actualDuration, block.chainid)\n        );\n        \n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        usedSignatures[keccak256(signature)] = true;\n        \n        // เรียกใช้ vault ที่ได้รับมาจาก PolicyBase\n        (bool sent,) = address(vault).call{value: msg.value}(\"\");\n        require(sent, \"Vault transfer failed\");\n        \n        policy.premium = premium;\n        claimAmounts[policyId] = 0;\n        policy.expiry = block.timestamp + actualDuration;\n        \n        emit PolicyRenewed(policyId, policy.owner, policy.premium, policy.expiry);\n    }\n    \n    /// @notice Cancel policy with refund\n    function cancelPolicy(\n        bytes32 policyId,\n        uint256 refundAmount,\n        bytes memory signature\n    ) public override onlyRole(ADMIN_ROLE) validPolicy(policyId) {\n        Policy storage policy = policies[policyId];\n        require(policy.isActive, \"Policy not active\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        \n        // Consistent parameter ordering for messageHash\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(policyId, policy.owner, refundAmount, uint256(0), block.chainid)\n        );\n        \n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        usedSignatures[keccak256(signature)] = true;\n        \n        policy.isActive = false;\n        \n        // เรียกใช้ vault ที่ได้รับมาจาก PolicyBase\n        vault.sendRefund(payable(policy.owner), refundAmount);\n        \n        emit PolicyCancelled(policyId, policy.owner, refundAmount);\n        emit PolicyRefunded(policyId, policy.owner, refundAmount);\n    }\n}"},"contracts/plans/LifeCareLite.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"../base/PolicyBase.sol\";\nimport \"../utils/InsuranceVault.sol\";\n\n/// @title LifeCareLite\n/// @notice Life insurance plan with fixed maturity and admin-verified premium structure\n/// @dev Extends PolicyBase for core functionality with signature verification and vault integration\ncontract LifeCareLite is PolicyBase {\n    // Maximum policy duration (80 years)\n    uint256 private constant MAX_DURATION = 80 * 365 days;\n    \n    // Events\n    event PremiumCalculated(bytes32 indexed policyId, address indexed user, uint256 premium);\n    event ClaimTransferred(bytes32 indexed policyId, address indexed beneficiary, uint256 amount);\n    event PolicyRefunded(bytes32 indexed policyId, address indexed owner, uint256 refundAmount);\n    event RenewalAttemptRejected(bytes32 indexed policyId, address indexed owner);\n    \n    constructor(address _trustedSigner, address payable _vaultAddress) \n        PolicyBase(_trustedSigner, _vaultAddress) \n    {\n        // No additional initialization needed - vault is now managed by PolicyBase\n    }\n\n    /// @notice Process policy-specific data (minimal implementation)\n    /// @param policyId The ID of the policy\n    function _processPolicyData(bytes32 policyId) internal override {\n        // Minimal implementation - data is processed off-chain\n        // Placeholder for potential future off-chain data integrations\n    }\n    \n    /// @notice Purchase policy with ETH payment and backend signature verification\n    /// @param owner Address of the policy owner\n    /// @param premium Premium amount calculated by backend\n    /// @param sumAssured Sum assured amount\n    /// @param duration Policy duration in seconds\n    /// @param signature Signature from the backend verifying the parameters\n    function purchasePolicy(\n        address owner,\n        uint256 premium,\n        uint256 sumAssured,\n        uint256 duration,\n        bytes memory signature\n    ) public payable override returns (bytes32) {\n        require(duration <= MAX_DURATION, \"Exceeds maximum duration\");\n        \n        // Call parent implementation to verify signature, create policy, and transfer premium to vault\n        bytes32 policyId = super.purchasePolicy(\n            owner,\n            premium,\n            sumAssured,\n            duration,\n            signature\n        );\n        \n        // No need to transfer premium to vault again - it's handled in the parent method\n        \n        // Use the actual policy ID returned from the parent contract\n        emit PremiumCalculated(\n            policyId, \n            owner, \n            premium\n        );\n        \n        return policyId;  // Return the policy ID\n    }\n    \n    /// @notice Admin approves claim and transfers funds from vault\n    /// @param policyId The ID of the policy\n    function approveClaim(bytes32 policyId) \n        public \n        override\n        onlyRole(ADMIN_ROLE) \n        validPolicy(policyId)\n        returns (uint256) \n    {\n        // Get claim information\n        ClaimRequest storage claim = claims[policyId];\n        Policy storage policy = policies[policyId];\n        \n        require(claim.isPending, \"No pending claim\");\n        require(block.timestamp <= claim.expiryTimestamp, \"Claim request expired\");\n        \n        // Mark claim as processed\n        claim.isPending = false;\n        policy.isClaimed = true;\n        policy.isActive = false;\n        \n        // Use vault from PolicyBase\n        vault.approveClaim(payable(policy.owner), claim.amount);\n        \n        emit ClaimApproved(policyId, policy.owner, claim.amount);\n        emit ClaimTransferred(policyId, policy.owner, claim.amount);\n        \n        return claim.amount;\n    }\n    \n    /// @notice Calculate refund based on unused duration (pure calculation)\n    /// @param policyId ID of the policy\n    /// @return Refund amount\n    function calculateRefund(bytes32 policyId) public view returns (uint256) {\n        Policy memory p = policies[policyId];\n        if (!p.isActive || block.timestamp >= p.expiry) return 0;\n        \n        // Calculate unused duration as a fraction\n        uint256 unusedDuration = p.expiry - block.timestamp;\n        uint256 totalDuration = p.expiry - p.createdAt;\n        \n        if (totalDuration == 0) return 0; // Avoid division by zero if policy created and expires in same block\n\n        // Calculate refund proportional to unused duration\n        return (p.premium * unusedDuration) / totalDuration;\n    }\n    \n    /// @notice This plan does not support renewal (parameters intentionally unused)\n    function renewPolicy(\n        bytes32 /*policyId*/,\n        uint256 /*premium*/,\n        uint256 /*duration*/,\n        bytes memory /*signature*/\n    ) external payable override {\n        emit RenewalAttemptRejected(keccak256(abi.encodePacked(msg.sender, block.timestamp)), msg.sender);\n        revert(\"LifeCareLite does not support renewals\");\n    }\n    \n    /// @notice Override cancelPolicy to use the vault for refunds \n    /// @param policyId ID of the policy \n    /// @param refundAmount Amount to refund \n    /// @param signature Signature from trusted signer approving the refund\n    function cancelPolicy(\n        bytes32 policyId,\n        uint256 refundAmount,\n        bytes memory signature\n    ) public override onlyRole(ADMIN_ROLE) validPolicy(policyId) {\n        // Get the policy from storage first\n        Policy storage policy = policies[policyId];\n        \n        require(policy.isActive, \"Policy not active\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        \n        // Consistent parameter ordering for messageHash with explicit type conversion\n        bytes32 messageHash = keccak256(\n            abi.encodePacked(policyId, policy.owner, refundAmount, uint256(0), block.chainid)\n        );\n        \n        // Use the verifySignature method from the parent contract\n        require(verifySignature(messageHash, signature), \"Invalid signature\");\n        \n        // Mark policy as inactive\n        policy.isActive = false;\n        \n        // Use the vault from PolicyBase\n        vault.sendRefund(payable(policy.owner), refundAmount);\n        \n        emit PolicyCancelled(policyId, policy.owner, refundAmount);\n        emit PolicyRefunded(policyId, policy.owner, refundAmount);\n    }\n}"},"contracts/utils/InsuranceVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title InsuranceVault\n/// @notice Holds and manages ETH funds for insurance premiums, claims, and refunds\n/// @dev Acts as the central treasury for all insurance plans.\n/// Only the contract owner can approve payouts or issue refunds.\n/// Incoming ETH (premiums) are logged via events.\n/// Does not implement business logic—only handles secure fund transfers.\ncontract InsuranceVault is Ownable {\n    event PremiumPaid(address indexed user, uint256 amount);\n    event ClaimPaid(address indexed to, uint256 amount);\n    event RefundIssued(address indexed user, uint256 amount);\n    event FundWithdrawn(address indexed to, uint256 amount);\n    \n    constructor(address initialOwner) Ownable(initialOwner) {}\n    \n    /// @notice Accept premium payments (ETH)\n    receive() external payable {\n        require(msg.value > 0, \"Premium must be greater than zero\");\n        emit PremiumPaid(msg.sender, msg.value);\n    }\n    \n    /// @notice Approve and send a claim payout to a policyholder\n    /// @param to The address of the policyholder\n    /// @param amount The amount to be paid out\n    function approveClaim(address payable to, uint256 amount) external onlyOwner {\n        require(address(this).balance >= amount, \"Insufficient balance in vault\");\n        require(amount > 0, \"Claim amount must be greater than zero\");\n        (bool sent, ) = to.call{value: amount}(\"\");\n        require(sent, \"Claim transfer failed\");\n        emit ClaimPaid(to, amount);\n    }\n    \n    /// @notice Issue a refund to a policyholder\n    /// @param to The address of the policyholder\n    /// @param amount The amount to be refunded\n    function sendRefund(address payable to, uint256 amount) external onlyOwner {\n        require(address(this).balance >= amount, \"Insufficient balance in vault\");\n        require(amount > 0, \"Refund amount must be greater than zero\");\n        (bool sent, ) = to.call{value: amount}(\"\");\n        require(sent, \"Refund transfer failed\");\n        emit RefundIssued(to, amount);\n    }\n    \n    /// @notice Withdraw funds from the vault (Admin Only)\n    /// @param to The address to withdraw funds to\n    /// @param amount The amount to withdraw\n    function withdrawFunds(address payable to, uint256 amount) external onlyOwner {\n        require(address(this).balance >= amount, \"Insufficient balance in vault\");\n        require(amount > 0, \"Withdraw amount must be greater than zero\");\n        (bool sent, ) = to.call{value: amount}(\"\");\n        require(sent, \"Withdraw transfer failed\");\n        emit FundWithdrawn(to, amount);\n    }\n    \n    /// @notice Get the current balance of the vault\n    /// @return The current balance of the vault\n    function getVaultBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[556],"ERC165":[2468],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":557,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2469,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":556,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,2468,2480,378,556],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2467],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2467,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[556],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":557,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":556,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,556],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[556]},"id":557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"127:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":556,"linearizedBaseContracts":[556],"name":"Context","nameLocation":"642:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":537,"nodeType":"Block","src":"718:34:3","statements":[{"expression":{"expression":{"id":534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:3","memberName":"sender","nodeType":"MemberAccess","src":"735:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":533,"id":536,"nodeType":"Return","src":"728:17:3"}]},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:3","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"675:2:3"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":538,"src":"709:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:3"},"scope":556,"src":"656:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":546,"nodeType":"Block","src":"825:32:3","statements":[{"expression":{"expression":{"id":543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:3","memberName":"data","nodeType":"MemberAccess","src":"842:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":542,"id":545,"nodeType":"Return","src":"835:15:3"}]},"id":547,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:3","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[],"src":"775:2:3"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":547,"src":"809:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:3"},"scope":556,"src":"758:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"935:25:3","statements":[{"expression":{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":551,"id":553,"nodeType":"Return","src":"945:8:3"}]},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:3","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"892:2:3"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:3"},"scope":556,"src":"863:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":557,"src":"624:338:3","usedErrors":[],"usedEvents":[]}],"src":"101:862:3"},"id":3},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[608]},"id":609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":558,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"125:489:4","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":608,"linearizedBaseContracts":[608],"name":"Panic","nameLocation":"665:5:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"677:36:4","text":"@dev generic / unspecified error"},"id":563,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:4","nodeType":"VariableDeclaration","scope":608,"src":"718:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"764:37:4","text":"@dev used by the assert() builtin"},"id":567,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:4","nodeType":"VariableDeclaration","scope":608,"src":"806:39:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"851:41:4","text":"@dev arithmetic underflow or overflow"},"id":571,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:4","nodeType":"VariableDeclaration","scope":608,"src":"897:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:4","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":572,"nodeType":"StructuredDocumentation","src":"950:35:4","text":"@dev division or modulo by zero"},"id":575,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:4","nodeType":"VariableDeclaration","scope":608,"src":"990:49:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"1045:30:4","text":"@dev enum conversion error"},"id":579,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:4","nodeType":"VariableDeclaration","scope":608,"src":"1080:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:4","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1140:36:4","text":"@dev invalid encoding in storage"},"id":583,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:4","nodeType":"VariableDeclaration","scope":608,"src":"1181:55:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1242:24:4","text":"@dev empty array pop"},"id":587,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:4","nodeType":"VariableDeclaration","scope":608,"src":"1271:48:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:4","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"1325:35:4","text":"@dev array out of bounds access"},"id":591,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:4","nodeType":"VariableDeclaration","scope":608,"src":"1365:52:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:4","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"1423:65:4","text":"@dev resource error (too large allocation or too large array)"},"id":595,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:4","nodeType":"VariableDeclaration","scope":608,"src":"1493:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"1546:42:4","text":"@dev calling invalid internal function"},"id":599,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:4","nodeType":"VariableDeclaration","scope":608,"src":"1593:58:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:4","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":606,"nodeType":"Block","src":"1819:151:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:4","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:4","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:4"},"nodeType":"YulFunctionCall","src":"1868:24:4"},"nodeType":"YulExpressionStatement","src":"1868:24:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:4","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:4"},"nodeType":"YulFunctionCall","src":"1905:18:4"},"nodeType":"YulExpressionStatement","src":"1905:18:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:4","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:4"},"nodeType":"YulFunctionCall","src":"1936:18:4"},"nodeType":"YulExpressionStatement","src":"1936:18:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":602,"isOffset":false,"isSlot":false,"src":"1918:4:4","valueSize":1}],"flags":["memory-safe"],"id":605,"nodeType":"InlineAssembly","src":"1829:135:4"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"1658:113:4","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":607,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:4","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"code","nameLocation":"1799:4:4","nodeType":"VariableDeclaration","scope":607,"src":"1791:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:4"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"1819:0:4"},"scope":608,"src":"1776:194:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":609,"src":"657:1315:4","usedErrors":[],"usedEvents":[]}],"src":"99:1874:4"},"id":4},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4101],"SafeCast":[5866],"SignedMath":[6010],"Strings":[2010]},"id":2011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2011,"sourceUnit":4102,"src":"127:37:5","symbolAliases":[{"foreign":{"id":611,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"135:4:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2011,"sourceUnit":5867,"src":"165:45:5","symbolAliases":[{"foreign":{"id":613,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"173:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2011,"sourceUnit":6011,"src":"211:49:5","symbolAliases":[{"foreign":{"id":615,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"219:10:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"262:34:5","text":" @dev String operations."},"fullyImplemented":true,"id":2010,"linearizedBaseContracts":[2010],"name":"Strings","nameLocation":"305:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":619,"libraryName":{"id":618,"name":"SafeCast","nameLocations":["325:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":5866,"src":"325:8:5"},"nodeType":"UsingForDirective","src":"319:21:5"},{"constant":true,"id":622,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:5","nodeType":"VariableDeclaration","scope":2010,"src":"346:56:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":620,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":625,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:5","nodeType":"VariableDeclaration","scope":2010,"src":"408:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":623,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":661,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:5","nodeType":"VariableDeclaration","scope":2010,"src":"456:302:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:5","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:5","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:5","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:5","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:5","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:5","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:5","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:5","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:5","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:5","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:5","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:5","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:5","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:5","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:5","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:5","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"778:81:5","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":668,"name":"StringsInsufficientHexLength","nameLocation":"870:28:5","nodeType":"ErrorDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"value","nameLocation":"907:5:5","nodeType":"VariableDeclaration","scope":668,"src":"899:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"length","nameLocation":"922:6:5","nodeType":"VariableDeclaration","scope":668,"src":"914:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:5"},"src":"864:66:5"},{"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"936:108:5","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":671,"name":"StringsInvalidChar","nameLocation":"1055:18:5","nodeType":"ErrorDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"1073:2:5"},"src":"1049:27:5"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"1082:84:5","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":674,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:5","nodeType":"ErrorDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"1204:2:5"},"src":"1171:36:5"},{"body":{"id":721,"nodeType":"Block","src":"1379:561:5","statements":[{"id":720,"nodeType":"UncheckedBlock","src":"1389:545:5","statements":[{"assignments":[683],"declarations":[{"constant":false,"id":683,"mutability":"mutable","name":"length","nameLocation":"1421:6:5","nodeType":"VariableDeclaration","scope":720,"src":"1413:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":690,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"1441:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":684,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"1430:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4101_$","typeString":"type(library Math)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:5","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3933,"src":"1430:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:5"},{"assignments":[692],"declarations":[{"constant":false,"id":692,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:5","nodeType":"VariableDeclaration","scope":720,"src":"1465:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":691,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":697,"initialValue":{"arguments":[{"id":695,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"1499:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":693,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:5"},{"assignments":[699],"declarations":[{"constant":false,"id":699,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:5","nodeType":"VariableDeclaration","scope":720,"src":"1520:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":700,"nodeType":"VariableDeclarationStatement","src":"1520:11:5"},{"AST":{"nodeType":"YulBlock","src":"1570:67:5","statements":[{"nodeType":"YulAssignment","src":"1588:35:5","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:5","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:5"},"nodeType":"YulFunctionCall","src":"1607:15:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:5"},"nodeType":"YulFunctionCall","src":"1595:28:5"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":692,"isOffset":false,"isSlot":false,"src":"1599:6:5","valueSize":1},{"declaration":683,"isOffset":false,"isSlot":false,"src":"1615:6:5","valueSize":1},{"declaration":699,"isOffset":false,"isSlot":false,"src":"1588:3:5","valueSize":1}],"flags":["memory-safe"],"id":701,"nodeType":"InlineAssembly","src":"1545:92:5"},{"body":{"id":716,"nodeType":"Block","src":"1663:234:5","statements":[{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:5","subExpression":{"id":703,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1681:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":705,"nodeType":"ExpressionStatement","src":"1681:5:5"},{"AST":{"nodeType":"YulBlock","src":"1729:86:5","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:5"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:5","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:5"},"nodeType":"YulFunctionCall","src":"1769:14:5"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:5"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:5"},"nodeType":"YulFunctionCall","src":"1764:32:5"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:5"},"nodeType":"YulFunctionCall","src":"1751:46:5"},"nodeType":"YulExpressionStatement","src":"1751:46:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":622,"isOffset":false,"isSlot":false,"src":"1785:10:5","valueSize":1},{"declaration":699,"isOffset":false,"isSlot":false,"src":"1759:3:5","valueSize":1},{"declaration":677,"isOffset":false,"isSlot":false,"src":"1773:5:5","valueSize":1}],"flags":["memory-safe"],"id":706,"nodeType":"InlineAssembly","src":"1704:111:5"},{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"1832:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"1832:11:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"1865:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":715,"nodeType":"IfStatement","src":"1861:21:5","trueBody":{"id":714,"nodeType":"Break","src":"1877:5:5"}}]},"condition":{"hexValue":"74727565","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":717,"nodeType":"WhileStatement","src":"1650:247:5"},{"expression":{"id":718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1917:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":681,"id":719,"nodeType":"Return","src":"1910:13:5"}]}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"1213:90:5","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:5","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"value","nameLocation":"1334:5:5","nodeType":"VariableDeclaration","scope":722,"src":"1326:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:5"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"1364:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:5"},"scope":2010,"src":"1308:632:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"2116:92:5","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2147:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:5","trueExpression":{"hexValue":"2d","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"2193:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":740,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"2178:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6010_$","typeString":"type(library SignedMath)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:5","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6009,"src":"2178:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":739,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"2169:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":730,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:5","typeDescriptions":{}}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:5","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":729,"id":746,"nodeType":"Return","src":"2126:75:5"}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1946:89:5","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:5","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"value","nameLocation":"2071:5:5","nodeType":"VariableDeclaration","scope":748,"src":"2064:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":724,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:5"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"2101:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":727,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:5"},"scope":2010,"src":"2040:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":767,"nodeType":"Block","src":"2387:100:5","statements":[{"id":766,"nodeType":"UncheckedBlock","src":"2397:84:5","statements":[{"expression":{"arguments":[{"id":757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"2440:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"2459:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":758,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"2447:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4101_$","typeString":"type(library Math)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:5","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4044,"src":"2447:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":756,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[768,851,871],"referencedDeclaration":851,"src":"2428:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":755,"id":765,"nodeType":"Return","src":"2421:49:5"}]}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"2214:94:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":768,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:5","nodeType":"FunctionDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"value","nameLocation":"2342:5:5","nodeType":"VariableDeclaration","scope":768,"src":"2334:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:5"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"2372:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":753,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:5"},"scope":2010,"src":"2313:174:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":850,"nodeType":"Block","src":"2700:435:5","statements":[{"assignments":[779],"declarations":[{"constant":false,"id":779,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:5","nodeType":"VariableDeclaration","scope":850,"src":"2710:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":781,"initialValue":{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2731:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:5"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:5","nodeType":"VariableDeclaration","scope":850,"src":"2746:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":782,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":792,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":787,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":784,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:5"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":793,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2803:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":795,"indexExpression":{"hexValue":"30","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":798,"nodeType":"ExpressionStatement","src":"2803:15:5"},{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":799,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2828:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":801,"indexExpression":{"hexValue":"31","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":804,"nodeType":"ExpressionStatement","src":"2828:15:5"},{"body":{"id":833,"nodeType":"Block","src":"2898:95:5","statements":[{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":819,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2912:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":821,"indexExpression":{"id":820,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2919:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":822,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"2924:10:5","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":826,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2935:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":828,"nodeType":"ExpressionStatement","src":"2912:40:5"},{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":829,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2966:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"2966:16:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2886:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"initializationExpression":{"assignments":[806],"declarations":[{"constant":false,"id":806,"mutability":"mutable","name":"i","nameLocation":"2866:1:5","nodeType":"VariableDeclaration","scope":834,"src":"2858:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":808,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"2874:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:5"},"loopExpression":{"expression":{"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:5","subExpression":{"id":816,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"2895:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ExpressionStatement","src":"2893:3:5"},"nodeType":"ForStatement","src":"2853:140:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":835,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3006:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":844,"nodeType":"IfStatement","src":"3002:96:5","trueBody":{"id":843,"nodeType":"Block","src":"3023:75:5","statements":[{"errorCall":{"arguments":[{"id":839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3073:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":840,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"3080:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":838,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3044:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":842,"nodeType":"RevertStatement","src":"3037:50:5"}]}},{"expression":{"arguments":[{"id":847,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"3121:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":845,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:5","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":777,"id":849,"nodeType":"Return","src":"3107:21:5"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"2493:112:5","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":851,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:5","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"value","nameLocation":"2639:5:5","nodeType":"VariableDeclaration","scope":851,"src":"2631:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"length","nameLocation":"2654:6:5","nodeType":"VariableDeclaration","scope":851,"src":"2646:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:5"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"2685:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":775,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:5"},"scope":2010,"src":"2610:525:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"3367:75:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":864,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"3412:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":862,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:5","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:5","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":867,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"3420:14:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":859,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[768,851,871],"referencedDeclaration":851,"src":"3384:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":858,"id":869,"nodeType":"Return","src":"3377:58:5"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"3141:148:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:5","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"addr","nameLocation":"3323:4:5","nodeType":"VariableDeclaration","scope":871,"src":"3315:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:5"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":871,"src":"3352:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":856,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:5"},"scope":2010,"src":"3294:148:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"3699:642:5","statements":[{"assignments":[880],"declarations":[{"constant":false,"id":880,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:5","nodeType":"VariableDeclaration","scope":935,"src":"3709:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"arguments":[{"id":884,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3749:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":883,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[768,851,871],"referencedDeclaration":871,"src":"3737:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":881,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:5","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:5"},{"assignments":[889],"declarations":[{"constant":false,"id":889,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:5","nodeType":"VariableDeclaration","scope":935,"src":"3840:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":890,"nodeType":"VariableDeclarationStatement","src":"3840:17:5"},{"AST":{"nodeType":"YulBlock","src":"3892:78:5","statements":[{"nodeType":"YulAssignment","src":"3906:54:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:5","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:5","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:5"},"nodeType":"YulFunctionCall","src":"3937:17:5"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:5","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:5"},"nodeType":"YulFunctionCall","src":"3927:32:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:5"},"nodeType":"YulFunctionCall","src":"3919:41:5"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":880,"isOffset":false,"isSlot":false,"src":"3941:6:5","valueSize":1},{"declaration":889,"isOffset":false,"isSlot":false,"src":"3906:9:5","valueSize":1}],"flags":["memory-safe"],"id":891,"nodeType":"InlineAssembly","src":"3867:103:5"},{"body":{"id":928,"nodeType":"Block","src":"4013:291:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":902,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"4119:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:5","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":909,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4148:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":911,"indexExpression":{"id":910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4155:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":907,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:5","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":923,"nodeType":"IfStatement","src":"4115:150:5","trueBody":{"id":922,"nodeType":"Block","src":"4165:100:5","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":916,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4233:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":918,"indexExpression":{"id":917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4240:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":921,"nodeType":"ExpressionStatement","src":"4233:17:5"}]}},{"expression":{"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":924,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"4278:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":927,"nodeType":"ExpressionStatement","src":"4278:15:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4001:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":929,"initializationExpression":{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"i","nameLocation":"3993:1:5","nodeType":"VariableDeclaration","scope":929,"src":"3985:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":895,"initialValue":{"hexValue":"3431","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:5","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:5"},"loopExpression":{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:5","subExpression":{"id":899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4010:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":901,"nodeType":"ExpressionStatement","src":"4008:3:5"},"nodeType":"ForStatement","src":"3980:324:5"},{"expression":{"arguments":[{"id":932,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"4327:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":930,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:5","typeDescriptions":{}}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":878,"id":934,"nodeType":"Return","src":"4313:21:5"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"3448:165:5","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:5","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"addr","nameLocation":"3655:4:5","nodeType":"VariableDeclaration","scope":936,"src":"3647:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:5"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"3684:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":876,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:5"},"scope":2010,"src":"3618:723:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":972,"nodeType":"Block","src":"4496:104:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4519:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":946,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:5","typeDescriptions":{}}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:5","memberName":"length","nodeType":"MemberAccess","src":"4513:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4538:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":951,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:5","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:5","memberName":"length","nodeType":"MemberAccess","src":"4532:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":960,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4567:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":958,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:5","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4590:1:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":964,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:5","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":963,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":945,"id":971,"nodeType":"Return","src":"4506:87:5"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"4347:66:5","text":" @dev Returns true if the two strings are equal."},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:5","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"a","nameLocation":"4447:1:5","nodeType":"VariableDeclaration","scope":973,"src":"4433:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":938,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"b","nameLocation":"4464:1:5","nodeType":"VariableDeclaration","scope":973,"src":"4450:15:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":940,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:5"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"4490:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":943,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:5"},"scope":2010,"src":"4418:182:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":991,"nodeType":"Block","src":"4897:64:5","statements":[{"expression":{"arguments":[{"id":982,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"4924:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":986,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"4940:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":984,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:5","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:5","memberName":"length","nodeType":"MemberAccess","src":"4934:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[992,1023],"referencedDeclaration":1023,"src":"4914:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":980,"id":990,"nodeType":"Return","src":"4907:47:5"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"4606:214:5","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":992,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:5","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"input","nameLocation":"4858:5:5","nodeType":"VariableDeclaration","scope":992,"src":"4844:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":975,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:5"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"4888:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:5"},"scope":2010,"src":"4825:136:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1022,"nodeType":"Block","src":"5366:153:5","statements":[{"assignments":[1005,1007],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"success","nameLocation":"5382:7:5","nodeType":"VariableDeclaration","scope":1022,"src":"5377:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1004,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"value","nameLocation":"5399:5:5","nodeType":"VariableDeclaration","scope":1022,"src":"5391:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1013,"initialValue":{"arguments":[{"id":1009,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5421:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1010,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"5428:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1011,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"5435:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1008,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1044,1081],"referencedDeclaration":1081,"src":"5408:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:5"},{"condition":{"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:5","subExpression":{"id":1014,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"5454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1019,"nodeType":"IfStatement","src":"5449:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1016,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5470:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"RevertStatement","src":"5463:27:5"}},{"expression":{"id":1020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"5507:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1003,"id":1021,"nodeType":"Return","src":"5500:12:5"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"4967:294:5","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1023,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:5","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"input","nameLocation":"5299:5:5","nodeType":"VariableDeclaration","scope":1023,"src":"5285:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":994,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"begin","nameLocation":"5314:5:5","nodeType":"VariableDeclaration","scope":1023,"src":"5306:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"end","nameLocation":"5329:3:5","nodeType":"VariableDeclaration","scope":1023,"src":"5321:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:5"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1023,"src":"5357:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:5"},"scope":2010,"src":"5266:253:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1043,"nodeType":"Block","src":"5840:83:5","statements":[{"expression":{"arguments":[{"id":1034,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"5886:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1038,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"5902:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:5","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:5","memberName":"length","nodeType":"MemberAccess","src":"5896:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"5857:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1032,"id":1042,"nodeType":"Return","src":"5850:66:5"}]},"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"5525:215:5","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1044,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:5","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"input","nameLocation":"5781:5:5","nodeType":"VariableDeclaration","scope":1044,"src":"5767:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1025,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:5"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"success","nameLocation":"5816:7:5","nodeType":"VariableDeclaration","scope":1044,"src":"5811:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1028,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"value","nameLocation":"5833:5:5","nodeType":"VariableDeclaration","scope":1044,"src":"5825:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:5"},"scope":2010,"src":"5745:178:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1080,"nodeType":"Block","src":"6325:144:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1058,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6339:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1061,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6351:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1059,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:5","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:5","memberName":"length","nodeType":"MemberAccess","src":"6345:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"6368:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1066,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6376:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1073,"nodeType":"IfStatement","src":"6335:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1057,"id":1072,"nodeType":"Return","src":"6381:17:5"}},{"expression":{"arguments":[{"id":1075,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"6444:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1076,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"6451:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1077,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6458:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1074,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"6415:28:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1057,"id":1079,"nodeType":"Return","src":"6408:54:5"}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"5929:238:5","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:5","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"input","nameLocation":"6217:5:5","nodeType":"VariableDeclaration","scope":1081,"src":"6203:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1046,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"begin","nameLocation":"6240:5:5","nodeType":"VariableDeclaration","scope":1081,"src":"6232:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"end","nameLocation":"6263:3:5","nodeType":"VariableDeclaration","scope":1081,"src":"6255:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:5"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"success","nameLocation":"6301:7:5","nodeType":"VariableDeclaration","scope":1081,"src":"6296:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1053,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"value","nameLocation":"6318:5:5","nodeType":"VariableDeclaration","scope":1081,"src":"6310:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:5"},"scope":2010,"src":"6172:297:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"6872:347:5","statements":[{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:5","nodeType":"VariableDeclaration","scope":1150,"src":"6882:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1095,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1101,"initialValue":{"arguments":[{"id":1099,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"6910:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1097,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:5","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:5"},{"assignments":[1103],"declarations":[{"constant":false,"id":1103,"mutability":"mutable","name":"result","nameLocation":"6935:6:5","nodeType":"VariableDeclaration","scope":1150,"src":"6927:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1105,"initialValue":{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:5"},{"body":{"id":1144,"nodeType":"Block","src":"6993:189:5","statements":[{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"chr","nameLocation":"7013:3:5","nodeType":"VariableDeclaration","scope":1144,"src":"7007:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1116,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1127,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1122,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"7062:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"7070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1121,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"7039:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1119,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:5","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1118,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"7019:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7092:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"nodeType":"IfStatement","src":"7088:30:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1094,"id":1134,"nodeType":"Return","src":"7101:17:5"}},{"expression":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"7132:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ExpressionStatement","src":"7132:12:5"},{"expression":{"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"7158:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1141,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"7168:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1143,"nodeType":"ExpressionStatement","src":"7158:13:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"6979:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1111,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6983:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"initializationExpression":{"assignments":[1107],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"i","nameLocation":"6968:1:5","nodeType":"VariableDeclaration","scope":1145,"src":"6960:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1109,"initialValue":{"id":1108,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"6972:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:5"},"loopExpression":{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:5","subExpression":{"id":1113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"6990:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"6988:3:5"},"nodeType":"ForStatement","src":"6955:227:5"},{"expression":{"components":[{"hexValue":"74727565","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1147,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"7205:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1094,"id":1149,"nodeType":"Return","src":"7191:21:5"}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"6475:224:5","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:5","nodeType":"FunctionDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"input","nameLocation":"6765:5:5","nodeType":"VariableDeclaration","scope":1151,"src":"6751:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1083,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"begin","nameLocation":"6788:5:5","nodeType":"VariableDeclaration","scope":1151,"src":"6780:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"end","nameLocation":"6811:3:5","nodeType":"VariableDeclaration","scope":1151,"src":"6803:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:5"},"returnParameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"success","nameLocation":"6848:7:5","nodeType":"VariableDeclaration","scope":1151,"src":"6843:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1090,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"value","nameLocation":"6865:5:5","nodeType":"VariableDeclaration","scope":1151,"src":"6857:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:5"},"scope":2010,"src":"6704:515:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1169,"nodeType":"Block","src":"7516:63:5","statements":[{"expression":{"arguments":[{"id":1160,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"7542:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1164,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"7558:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1162,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:5","typeDescriptions":{}}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:5","memberName":"length","nodeType":"MemberAccess","src":"7552:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1159,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1170,1201],"referencedDeclaration":1201,"src":"7533:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1158,"id":1168,"nodeType":"Return","src":"7526:46:5"}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"7225:216:5","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:5","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"input","nameLocation":"7478:5:5","nodeType":"VariableDeclaration","scope":1170,"src":"7464:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1153,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:5"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"7508:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1156,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:5"},"scope":2010,"src":"7446:133:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1200,"nodeType":"Block","src":"7984:151:5","statements":[{"assignments":[1183,1185],"declarations":[{"constant":false,"id":1183,"mutability":"mutable","name":"success","nameLocation":"8000:7:5","nodeType":"VariableDeclaration","scope":1200,"src":"7995:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"value","nameLocation":"8016:5:5","nodeType":"VariableDeclaration","scope":1200,"src":"8009:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1184,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1191,"initialValue":{"arguments":[{"id":1187,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"8037:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1188,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"8044:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1189,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"8051:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1186,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1222,1264],"referencedDeclaration":1264,"src":"8025:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:5"},{"condition":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:5","subExpression":{"id":1192,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"8070:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"IfStatement","src":"8065:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1194,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8086:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"RevertStatement","src":"8079:27:5"}},{"expression":{"id":1198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"8123:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1181,"id":1199,"nodeType":"Return","src":"8116:12:5"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"7585:296:5","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:5","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"input","nameLocation":"7918:5:5","nodeType":"VariableDeclaration","scope":1201,"src":"7904:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1172,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"begin","nameLocation":"7933:5:5","nodeType":"VariableDeclaration","scope":1201,"src":"7925:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"end","nameLocation":"7948:3:5","nodeType":"VariableDeclaration","scope":1201,"src":"7940:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:5"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"7976:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1179,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:5"},"scope":2010,"src":"7886:249:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"8526:82:5","statements":[{"expression":{"arguments":[{"id":1212,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8571:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1216,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"8587:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1214,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:5","typeDescriptions":{}}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:5","memberName":"length","nodeType":"MemberAccess","src":"8581:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1211,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"8543:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1210,"id":1220,"nodeType":"Return","src":"8536:65:5"}]},"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"8141:287:5","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:5","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"input","nameLocation":"8468:5:5","nodeType":"VariableDeclaration","scope":1222,"src":"8454:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1203,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:5"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"success","nameLocation":"8503:7:5","nodeType":"VariableDeclaration","scope":1222,"src":"8498:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"value","nameLocation":"8519:5:5","nodeType":"VariableDeclaration","scope":1222,"src":"8512:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1208,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:5"},"scope":2010,"src":"8433:175:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1227,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:5","nodeType":"VariableDeclaration","scope":2010,"src":"8614:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:5","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1263,"nodeType":"Block","src":"9130:143:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9144:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1244,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9156:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1242,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:5","typeDescriptions":{}}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:5","memberName":"length","nodeType":"MemberAccess","src":"9150:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1248,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"9173:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1249,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9181:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1256,"nodeType":"IfStatement","src":"9140:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1240,"id":1255,"nodeType":"Return","src":"9186:17:5"}},{"expression":{"arguments":[{"id":1258,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9248:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1259,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"9255:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1260,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"9262:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1257,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"9220:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1240,"id":1262,"nodeType":"Return","src":"9213:53:5"}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"8671:303:5","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:5","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"input","nameLocation":"9023:5:5","nodeType":"VariableDeclaration","scope":1264,"src":"9009:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1229,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"begin","nameLocation":"9046:5:5","nodeType":"VariableDeclaration","scope":1264,"src":"9038:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"end","nameLocation":"9069:3:5","nodeType":"VariableDeclaration","scope":1264,"src":"9061:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:5"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"success","nameLocation":"9107:7:5","nodeType":"VariableDeclaration","scope":1264,"src":"9102:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"value","nameLocation":"9123:5:5","nodeType":"VariableDeclaration","scope":1264,"src":"9116:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1238,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:5"},"scope":2010,"src":"8979:294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"9673:812:5","statements":[{"assignments":[1279],"declarations":[{"constant":false,"id":1279,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:5","nodeType":"VariableDeclaration","scope":1384,"src":"9683:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1284,"initialValue":{"arguments":[{"id":1282,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"9711:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1280,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:5","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:5"},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"sign","nameLocation":"9781:4:5","nodeType":"VariableDeclaration","scope":1384,"src":"9774:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1285,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1302,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9788:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1288,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"9797:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1297,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"9845:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1298,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"9853:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1296,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"9822:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1294,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:5","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:5","trueExpression":{"arguments":[{"hexValue":"30","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1290,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:5","typeDescriptions":{}}},"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:5"},{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:5","nodeType":"VariableDeclaration","scope":1384,"src":"9941:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1303,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1311,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"9961:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1306,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:5","typeDescriptions":{}}},"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:5"},{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:5","nodeType":"VariableDeclaration","scope":1384,"src":"9990:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1312,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1320,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1314,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10010:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1315,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:5","typeDescriptions":{}}},"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:5"},{"assignments":[1322],"declarations":[{"constant":false,"id":1322,"mutability":"mutable","name":"offset","nameLocation":"10047:6:5","nodeType":"VariableDeclaration","scope":1384,"src":"10039:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1329,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"10057:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1324,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"10073:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"10056:37:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:5"},{"assignments":[1331,1333],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:5","nodeType":"VariableDeclaration","scope":1384,"src":"10107:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1330,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:5","nodeType":"VariableDeclaration","scope":1384,"src":"10124:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1341,"initialValue":{"arguments":[{"id":1335,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"10157:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"10164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1337,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"10172:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"10180:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1044,1081],"referencedDeclaration":1081,"src":"10144:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10199:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10213:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1344,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"10224:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1362,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"10341:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1363,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"10355:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10371:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1366,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"10383:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1277,"id":1381,"nodeType":"Return","src":"10461:17:5"},"id":1382,"nodeType":"IfStatement","src":"10337:141:5","trueBody":{"id":1377,"nodeType":"Block","src":"10399:56:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1371,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1370,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:5","memberName":"min","nodeType":"MemberAccess","src":"10427:16:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1277,"id":1376,"nodeType":"Return","src":"10413:31:5"}]}},"id":1383,"nodeType":"IfStatement","src":"10195:283:5","trueBody":{"id":1361,"nodeType":"Block","src":"10240:91:5","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1348,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"10268:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1356,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10310:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1354,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:5","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:5","trueExpression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:5","subExpression":{"arguments":[{"id":1351,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10291:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1349,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:5","typeDescriptions":{}}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1277,"id":1360,"nodeType":"Return","src":"10254:66:5"}]}}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"9279:223:5","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:5","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"input","nameLocation":"9567:5:5","nodeType":"VariableDeclaration","scope":1385,"src":"9553:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1266,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"begin","nameLocation":"9590:5:5","nodeType":"VariableDeclaration","scope":1385,"src":"9582:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"end","nameLocation":"9613:3:5","nodeType":"VariableDeclaration","scope":1385,"src":"9605:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:5"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"success","nameLocation":"9650:7:5","nodeType":"VariableDeclaration","scope":1385,"src":"9645:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1273,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"9666:5:5","nodeType":"VariableDeclaration","scope":1385,"src":"9659:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1275,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:5"},"scope":2010,"src":"9507:978:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1403,"nodeType":"Block","src":"10830:67:5","statements":[{"expression":{"arguments":[{"id":1394,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"10860:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1398,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"10876:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1396,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:5","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:5","memberName":"length","nodeType":"MemberAccess","src":"10870:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1393,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1404,1435],"referencedDeclaration":1435,"src":"10847:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1392,"id":1402,"nodeType":"Return","src":"10840:50:5"}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"10491:259:5","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:5","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"input","nameLocation":"10791:5:5","nodeType":"VariableDeclaration","scope":1404,"src":"10777:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1387,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:5"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"10821:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:5"},"scope":2010,"src":"10755:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1434,"nodeType":"Block","src":"11318:156:5","statements":[{"assignments":[1417,1419],"declarations":[{"constant":false,"id":1417,"mutability":"mutable","name":"success","nameLocation":"11334:7:5","nodeType":"VariableDeclaration","scope":1434,"src":"11329:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1416,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"value","nameLocation":"11351:5:5","nodeType":"VariableDeclaration","scope":1434,"src":"11343:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1425,"initialValue":{"arguments":[{"id":1421,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"11376:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1422,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"11383:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1423,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"11390:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1456,1493],"referencedDeclaration":1493,"src":"11360:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:5"},{"condition":{"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:5","subExpression":{"id":1426,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"11409:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1431,"nodeType":"IfStatement","src":"11404:41:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1428,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"11425:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"RevertStatement","src":"11418:27:5"}},{"expression":{"id":1432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"11462:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1415,"id":1433,"nodeType":"Return","src":"11455:12:5"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"10903:307:5","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:5","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"input","nameLocation":"11251:5:5","nodeType":"VariableDeclaration","scope":1435,"src":"11237:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"begin","nameLocation":"11266:5:5","nodeType":"VariableDeclaration","scope":1435,"src":"11258:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"end","nameLocation":"11281:3:5","nodeType":"VariableDeclaration","scope":1435,"src":"11273:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:5"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1435,"src":"11309:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:5"},"scope":2010,"src":"11215:259:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"11801:86:5","statements":[{"expression":{"arguments":[{"id":1446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"11850:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1450,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"11866:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1448,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:5","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:5","memberName":"length","nodeType":"MemberAccess","src":"11860:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1445,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"11818:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1444,"id":1454,"nodeType":"Return","src":"11811:69:5"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"11480:218:5","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:5","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"input","nameLocation":"11742:5:5","nodeType":"VariableDeclaration","scope":1456,"src":"11728:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1437,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:5"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"success","nameLocation":"11777:7:5","nodeType":"VariableDeclaration","scope":1456,"src":"11772:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1440,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"value","nameLocation":"11794:5:5","nodeType":"VariableDeclaration","scope":1456,"src":"11786:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1442,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:5"},"scope":2010,"src":"11703:184:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"12295:147:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1470,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12309:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1473,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"12321:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1471,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:5","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:5","memberName":"length","nodeType":"MemberAccess","src":"12315:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1477,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"12338:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1478,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12346:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1485,"nodeType":"IfStatement","src":"12305:63:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1469,"id":1484,"nodeType":"Return","src":"12351:17:5"}},{"expression":{"arguments":[{"id":1487,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"12417:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1488,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"12424:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1489,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12431:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"12385:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1469,"id":1491,"nodeType":"Return","src":"12378:57:5"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"11893:241:5","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:5","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"input","nameLocation":"12187:5:5","nodeType":"VariableDeclaration","scope":1493,"src":"12173:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"begin","nameLocation":"12210:5:5","nodeType":"VariableDeclaration","scope":1493,"src":"12202:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"end","nameLocation":"12233:3:5","nodeType":"VariableDeclaration","scope":1493,"src":"12225:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:5"},"returnParameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"success","nameLocation":"12271:7:5","nodeType":"VariableDeclaration","scope":1493,"src":"12266:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1465,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"value","nameLocation":"12288:5:5","nodeType":"VariableDeclaration","scope":1493,"src":"12280:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:5"},"scope":2010,"src":"12139:303:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1595,"nodeType":"Block","src":"12851:881:5","statements":[{"assignments":[1508],"declarations":[{"constant":false,"id":1508,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:5","nodeType":"VariableDeclaration","scope":1595,"src":"12861:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1507,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1513,"initialValue":{"arguments":[{"id":1511,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"12889:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1509,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:5","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:5"},{"assignments":[1515],"declarations":[{"constant":false,"id":1515,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:5","nodeType":"VariableDeclaration","scope":1595,"src":"12943:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1514,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1535,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1516,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"12961:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"12967:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1525,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"13011:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1526,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"13019:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1524,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"12988:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1522,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:5","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1529,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:5","typeDescriptions":{}}},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:5"},{"assignments":[1537],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"offset","nameLocation":"13131:6:5","nodeType":"VariableDeclaration","scope":1595,"src":"13123:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1543,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1538,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"13140:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"13140:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:5"},{"assignments":[1545],"declarations":[{"constant":false,"id":1545,"mutability":"mutable","name":"result","nameLocation":"13181:6:5","nodeType":"VariableDeclaration","scope":1595,"src":"13173:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1547,"initialValue":{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:5"},{"body":{"id":1589,"nodeType":"Block","src":"13248:447:5","statements":[{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"chr","nameLocation":"13268:3:5","nodeType":"VariableDeclaration","scope":1589,"src":"13262:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1560,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1571,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1566,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"13317:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"13325:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"13294:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1563,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:5","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1562,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"13274:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"13347:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1579,"nodeType":"IfStatement","src":"13343:31:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1506,"id":1578,"nodeType":"Return","src":"13357:17:5"}},{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"13388:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"13388:12:5"},{"id":1588,"nodeType":"UncheckedBlock","src":"13414:271:5","statements":[{"expression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"13657:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1585,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"13667:3:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ExpressionStatement","src":"13657:13:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"13234:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1555,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"13238:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1590,"initializationExpression":{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"i","nameLocation":"13214:1:5","nodeType":"VariableDeclaration","scope":1590,"src":"13206:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1553,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"13218:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1551,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"13226:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:5"},"loopExpression":{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:5","subExpression":{"id":1557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"13245:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1559,"nodeType":"ExpressionStatement","src":"13243:3:5"},"nodeType":"ForStatement","src":"13201:494:5"},{"expression":{"components":[{"hexValue":"74727565","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"13718:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1506,"id":1594,"nodeType":"Return","src":"13704:21:5"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"12448:227:5","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1596,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:5","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"input","nameLocation":"12744:5:5","nodeType":"VariableDeclaration","scope":1596,"src":"12730:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1495,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"begin","nameLocation":"12767:5:5","nodeType":"VariableDeclaration","scope":1596,"src":"12759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"end","nameLocation":"12790:3:5","nodeType":"VariableDeclaration","scope":1596,"src":"12782:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:5"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"success","nameLocation":"12827:7:5","nodeType":"VariableDeclaration","scope":1596,"src":"12822:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1502,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"value","nameLocation":"12844:5:5","nodeType":"VariableDeclaration","scope":1596,"src":"12836:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:5"},"scope":2010,"src":"12680:1052:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1614,"nodeType":"Block","src":"14030:67:5","statements":[{"expression":{"arguments":[{"id":1605,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"14060:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1609,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"14076:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1607,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:5","typeDescriptions":{}}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:5","memberName":"length","nodeType":"MemberAccess","src":"14070:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1604,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1615,1646],"referencedDeclaration":1646,"src":"14047:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1603,"id":1613,"nodeType":"Return","src":"14040:50:5"}]},"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"13738:212:5","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:5","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"input","nameLocation":"13991:5:5","nodeType":"VariableDeclaration","scope":1615,"src":"13977:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1598,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:5"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"14021:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:5"},"scope":2010,"src":"13955:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"14470:165:5","statements":[{"assignments":[1628,1630],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"success","nameLocation":"14486:7:5","nodeType":"VariableDeclaration","scope":1645,"src":"14481:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1627,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"value","nameLocation":"14503:5:5","nodeType":"VariableDeclaration","scope":1645,"src":"14495:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1636,"initialValue":{"arguments":[{"id":1632,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"14528:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1633,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"14535:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1634,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"14542:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1631,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1667,1771],"referencedDeclaration":1771,"src":"14512:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:5"},{"condition":{"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:5","subExpression":{"id":1637,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"14561:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1642,"nodeType":"IfStatement","src":"14556:50:5","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1639,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"14577:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"RevertStatement","src":"14570:36:5"}},{"expression":{"id":1643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"14623:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1626,"id":1644,"nodeType":"Return","src":"14616:12:5"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"14103:259:5","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:5","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"input","nameLocation":"14403:5:5","nodeType":"VariableDeclaration","scope":1646,"src":"14389:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1617,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"begin","nameLocation":"14418:5:5","nodeType":"VariableDeclaration","scope":1646,"src":"14410:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"end","nameLocation":"14433:3:5","nodeType":"VariableDeclaration","scope":1646,"src":"14425:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:5"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1646,"src":"14461:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:5"},"scope":2010,"src":"14367:268:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"14942:70:5","statements":[{"expression":{"arguments":[{"id":1657,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"14975:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1661,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"14991:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:5","typeDescriptions":{}}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:5","memberName":"length","nodeType":"MemberAccess","src":"14985:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1656,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1667,1771],"referencedDeclaration":1771,"src":"14959:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1655,"id":1665,"nodeType":"Return","src":"14952:53:5"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"14641:198:5","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:5","nodeType":"FunctionDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"input","nameLocation":"14883:5:5","nodeType":"VariableDeclaration","scope":1667,"src":"14869:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1648,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:5"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"success","nameLocation":"14918:7:5","nodeType":"VariableDeclaration","scope":1667,"src":"14913:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1651,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"value","nameLocation":"14935:5:5","nodeType":"VariableDeclaration","scope":1667,"src":"14927:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:5"},"scope":2010,"src":"14844:168:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1770,"nodeType":"Block","src":"15405:733:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"15419:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1684,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"15431:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:5","typeDescriptions":{}}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:5","memberName":"length","nodeType":"MemberAccess","src":"15425:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"15448:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1689,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"15456:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"15415:72:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:5","typeDescriptions":{}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1680,"id":1698,"nodeType":"Return","src":"15461:26:5"}},{"assignments":[1701],"declarations":[{"constant":false,"id":1701,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:5","nodeType":"VariableDeclaration","scope":1770,"src":"15498:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1700,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1724,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1702,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"15516:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"15522:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1713,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"15572:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1711,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:5","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1715,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"15580:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1710,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"15543:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1708,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:5","typeDescriptions":{}}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1718,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:5","typeDescriptions":{}}},"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:5"},{"assignments":[1726],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:5","nodeType":"VariableDeclaration","scope":1770,"src":"15684:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1734,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:5","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1728,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"15714:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"15714:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1735,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"15801:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1736,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"15807:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1738,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"15816:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1768,"nodeType":"Block","src":"16081:51:5","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:5","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1680,"id":1767,"nodeType":"Return","src":"16095:26:5"}]},"id":1769,"nodeType":"IfStatement","src":"15797:335:5","trueBody":{"id":1760,"nodeType":"Block","src":"15832:243:5","statements":[{"assignments":[1741,1743],"declarations":[{"constant":false,"id":1741,"mutability":"mutable","name":"s","nameLocation":"15953:1:5","nodeType":"VariableDeclaration","scope":1760,"src":"15948:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1740,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"v","nameLocation":"15964:1:5","nodeType":"VariableDeclaration","scope":1760,"src":"15956:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1749,"initialValue":{"arguments":[{"id":1745,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"16001:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1746,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"16008:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1747,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"16015:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1744,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"15969:31:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:5"},{"expression":{"components":[{"id":1750,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"16041:1:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1755,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"16060:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1753,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:5","typeDescriptions":{}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:5","typeDescriptions":{}}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1680,"id":1759,"nodeType":"Return","src":"16033:31:5"}]}}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"15018:226:5","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:5","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"input","nameLocation":"15297:5:5","nodeType":"VariableDeclaration","scope":1771,"src":"15283:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1669,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"begin","nameLocation":"15320:5:5","nodeType":"VariableDeclaration","scope":1771,"src":"15312:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"end","nameLocation":"15343:3:5","nodeType":"VariableDeclaration","scope":1771,"src":"15335:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:5"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"success","nameLocation":"15381:7:5","nodeType":"VariableDeclaration","scope":1771,"src":"15376:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1676,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"value","nameLocation":"15398:5:5","nodeType":"VariableDeclaration","scope":1771,"src":"15390:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:5"},"scope":2010,"src":"15249:889:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1830,"nodeType":"Block","src":"16207:461:5","statements":[{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"value","nameLocation":"16223:5:5","nodeType":"VariableDeclaration","scope":1830,"src":"16217:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1778,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1784,"initialValue":{"arguments":[{"id":1782,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"16237:3:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1780,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:5","typeDescriptions":{}}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:5"},{"id":1827,"nodeType":"UncheckedBlock","src":"16401:238:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16429:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:5","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16443:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:5","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16489:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16503:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:5","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16550:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16564:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:5","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1819,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1818,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:5","memberName":"max","nodeType":"MemberAccess","src":"16613:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1777,"id":1823,"nodeType":"Return","src":"16606:22:5"},"id":1824,"nodeType":"IfStatement","src":"16546:82:5","trueBody":{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16576:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:5","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1817,"nodeType":"ExpressionStatement","src":"16576:11:5"}},"id":1825,"nodeType":"IfStatement","src":"16485:143:5","trueBody":{"expression":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16516:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:5","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1806,"nodeType":"ExpressionStatement","src":"16516:11:5"}},"id":1826,"nodeType":"IfStatement","src":"16425:203:5","trueBody":{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16455:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:5","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1795,"nodeType":"ExpressionStatement","src":"16455:11:5"}}]},{"expression":{"id":1828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"16656:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1777,"id":1829,"nodeType":"Return","src":"16649:12:5"}]},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:5","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"chr","nameLocation":"16173:3:5","nodeType":"VariableDeclaration","scope":1831,"src":"16166:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1772,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:5"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"16200:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1775,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:5"},"scope":2010,"src":"16144:524:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1996,"nodeType":"Block","src":"17334:1331:5","statements":[{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:5","nodeType":"VariableDeclaration","scope":1996,"src":"17344:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1839,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1845,"initialValue":{"arguments":[{"id":1843,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"17372:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1841,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:5","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:5"},{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"output","nameLocation":"17401:6:5","nodeType":"VariableDeclaration","scope":1996,"src":"17388:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1855,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1851,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"17424:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:5","memberName":"length","nodeType":"MemberAccess","src":"17424:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1848,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:5"},{"assignments":[1857],"declarations":[{"constant":false,"id":1857,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:5","nodeType":"VariableDeclaration","scope":1996,"src":"17471:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1859,"initialValue":{"hexValue":"30","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:5"},{"body":{"id":1988,"nodeType":"Block","src":"17546:854:5","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"char","nameLocation":"17567:4:5","nodeType":"VariableDeclaration","scope":1988,"src":"17560:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1870,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1879,"initialValue":{"arguments":[{"arguments":[{"id":1875,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"17604:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"17612:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1874,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"17581:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1872,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:5","typeDescriptions":{}}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:5"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"17635:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":1884,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"17670:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1882,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:5","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"18328:62:5","statements":[{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1979,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"18346:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1982,"indexExpression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:5","subExpression":{"id":1980,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"18353:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1983,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"18371:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1985,"nodeType":"ExpressionStatement","src":"18346:29:5"}]},"id":1987,"nodeType":"IfStatement","src":"17629:761:5","trueBody":{"id":1978,"nodeType":"Block","src":"17685:637:5","statements":[{"expression":{"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1893,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"17703:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1896,"indexExpression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:5","subExpression":{"id":1894,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"17710:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1899,"nodeType":"ExpressionStatement","src":"17703:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"17754:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"17823:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:5","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"17892:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1930,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"17961:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"18030:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:5","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"18099:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:5","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"18169:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1971,"nodeType":"IfStatement","src":"18165:143:5","trueBody":{"id":1970,"nodeType":"Block","src":"18183:125:5","statements":[{"expression":{"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1963,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"18261:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1966,"indexExpression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:5","subExpression":{"id":1964,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"18268:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1969,"nodeType":"ExpressionStatement","src":"18261:28:5"}]}},"id":1972,"nodeType":"IfStatement","src":"18095:213:5","trueBody":{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1953,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"18113:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1956,"indexExpression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:5","subExpression":{"id":1954,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"18120:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1959,"nodeType":"ExpressionStatement","src":"18113:29:5"}},"id":1973,"nodeType":"IfStatement","src":"18026:282:5","trueBody":{"expression":{"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1943,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"18044:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1946,"indexExpression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:5","subExpression":{"id":1944,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"18051:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1949,"nodeType":"ExpressionStatement","src":"18044:28:5"}},"id":1974,"nodeType":"IfStatement","src":"17957:351:5","trueBody":{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1933,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"17975:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1936,"indexExpression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:5","subExpression":{"id":1934,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"17982:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1939,"nodeType":"ExpressionStatement","src":"17975:28:5"}},"id":1975,"nodeType":"IfStatement","src":"17888:420:5","trueBody":{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1923,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"17906:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1926,"indexExpression":{"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:5","subExpression":{"id":1924,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"17913:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1929,"nodeType":"ExpressionStatement","src":"17906:28:5"}},"id":1976,"nodeType":"IfStatement","src":"17819:489:5","trueBody":{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1913,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"17837:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1916,"indexExpression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:5","subExpression":{"id":1914,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"17844:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1919,"nodeType":"ExpressionStatement","src":"17837:28:5"}},"id":1977,"nodeType":"IfStatement","src":"17750:558:5","trueBody":{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1903,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"17768:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1906,"indexExpression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:5","subExpression":{"id":1904,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"17775:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1909,"nodeType":"ExpressionStatement","src":"17768:28:5"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"17522:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1864,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"17526:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:5","memberName":"length","nodeType":"MemberAccess","src":"17526:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1989,"initializationExpression":{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"i","nameLocation":"17519:1:5","nodeType":"VariableDeclaration","scope":1989,"src":"17511:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1862,"nodeType":"VariableDeclarationStatement","src":"17511:9:5"},"loopExpression":{"expression":{"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:5","subExpression":{"id":1867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"17543:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"nodeType":"ExpressionStatement","src":"17541:3:5"},"nodeType":"ForStatement","src":"17506:894:5"},{"AST":{"nodeType":"YulBlock","src":"18498:129:5","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:5"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:5"},"nodeType":"YulFunctionCall","src":"18512:28:5"},"nodeType":"YulExpressionStatement","src":"18512:28:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:5","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:5","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:5","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:5"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:5","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:5"},"nodeType":"YulFunctionCall","src":"18592:21:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:5"},"nodeType":"YulFunctionCall","src":"18585:29:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:5"},"nodeType":"YulFunctionCall","src":"18578:37:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:5"},"nodeType":"YulFunctionCall","src":"18566:50:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:5"},"nodeType":"YulFunctionCall","src":"18553:64:5"},"nodeType":"YulExpressionStatement","src":"18553:64:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1847,"isOffset":false,"isSlot":false,"src":"18519:6:5","valueSize":1},{"declaration":1847,"isOffset":false,"isSlot":false,"src":"18570:6:5","valueSize":1},{"declaration":1857,"isOffset":false,"isSlot":false,"src":"18527:12:5","valueSize":1},{"declaration":1857,"isOffset":false,"isSlot":false,"src":"18596:12:5","valueSize":1}],"flags":["memory-safe"],"id":1990,"nodeType":"InlineAssembly","src":"18473:154:5"},{"expression":{"arguments":[{"id":1993,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"18651:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1991,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:5","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1838,"id":1995,"nodeType":"Return","src":"18637:21:5"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"16674:576:5","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:5","nodeType":"FunctionDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"input","nameLocation":"17289:5:5","nodeType":"VariableDeclaration","scope":1997,"src":"17275:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1833,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:5"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"17319:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:5"},"scope":2010,"src":"17255:1410:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2008,"nodeType":"Block","src":"19050:225:5","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:5","statements":[{"nodeType":"YulAssignment","src":"19213:46:5","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:5","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:5"},"nodeType":"YulFunctionCall","src":"19240:17:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:5"},"nodeType":"YulFunctionCall","src":"19228:30:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:5"},"nodeType":"YulFunctionCall","src":"19222:37:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2000,"isOffset":false,"isSlot":false,"src":"19232:6:5","valueSize":1},{"declaration":2002,"isOffset":false,"isSlot":false,"src":"19250:6:5","valueSize":1},{"declaration":2005,"isOffset":false,"isSlot":false,"src":"19213:5:5","valueSize":1}],"flags":["memory-safe"],"id":2007,"nodeType":"InlineAssembly","src":"19174:95:5"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"18671:268:5","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:5","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:5","nodeType":"VariableDeclaration","scope":2009,"src":"18976:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"offset","nameLocation":"19005:6:5","nodeType":"VariableDeclaration","scope":2009,"src":"18997:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:5"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"value","nameLocation":"19043:5:5","nodeType":"VariableDeclaration","scope":2009,"src":"19035:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:5"},"scope":2010,"src":"18944:331:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2011,"src":"297:18980:5","usedErrors":[668,671,674],"usedEvents":[]}],"src":"101:19177:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2358]},"id":2359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2012,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"138:205:6","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2358,"linearizedBaseContracts":[2358],"name":"ECDSA","nameLocation":"352:5:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2018,"members":[{"id":2014,"name":"NoError","nameLocation":"392:7:6","nodeType":"EnumValue","src":"392:7:6"},{"id":2015,"name":"InvalidSignature","nameLocation":"409:16:6","nodeType":"EnumValue","src":"409:16:6"},{"id":2016,"name":"InvalidSignatureLength","nameLocation":"435:22:6","nodeType":"EnumValue","src":"435:22:6"},{"id":2017,"name":"InvalidSignatureS","nameLocation":"467:17:6","nodeType":"EnumValue","src":"467:17:6"}],"name":"RecoverError","nameLocation":"369:12:6","nodeType":"EnumDefinition","src":"364:126:6"},{"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"496:63:6","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2021,"name":"ECDSAInvalidSignature","nameLocation":"570:21:6","nodeType":"ErrorDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[],"src":"591:2:6"},"src":"564:30:6"},{"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"600:60:6","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2026,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:6","nodeType":"ErrorDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"length","nameLocation":"707:6:6","nodeType":"VariableDeclaration","scope":2026,"src":"699:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:6"},"src":"665:50:6"},{"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"721:85:6","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2031,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:6","nodeType":"ErrorDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"s","nameLocation":"848:1:6","nodeType":"VariableDeclaration","scope":2031,"src":"840:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:6"},"src":"811:40:6"},{"body":{"id":2083,"nodeType":"Block","src":"2285:622:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2046,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2299:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:6","memberName":"length","nodeType":"MemberAccess","src":"2299:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2081,"nodeType":"Block","src":"2793:108:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:6","typeDescriptions":{}}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2072,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"2827:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:6","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"2827:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2076,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2872:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:6","memberName":"length","nodeType":"MemberAccess","src":"2872:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:6","typeDescriptions":{}}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2045,"id":2080,"nodeType":"Return","src":"2807:83:6"}]},"id":2082,"nodeType":"IfStatement","src":"2295:606:6","trueBody":{"id":2067,"nodeType":"Block","src":"2323:464:6","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"r","nameLocation":"2345:1:6","nodeType":"VariableDeclaration","scope":2067,"src":"2337:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2052,"nodeType":"VariableDeclarationStatement","src":"2337:9:6"},{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"s","nameLocation":"2368:1:6","nodeType":"VariableDeclaration","scope":2067,"src":"2360:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2055,"nodeType":"VariableDeclarationStatement","src":"2360:9:6"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"v","nameLocation":"2389:1:6","nodeType":"VariableDeclaration","scope":2067,"src":"2383:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2056,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2058,"nodeType":"VariableDeclarationStatement","src":"2383:7:6"},{"AST":{"nodeType":"YulBlock","src":"2560:171:6","statements":[{"nodeType":"YulAssignment","src":"2578:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:6"},"nodeType":"YulFunctionCall","src":"2589:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:6"},"nodeType":"YulFunctionCall","src":"2583:27:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:6"}]},{"nodeType":"YulAssignment","src":"2627:32:6","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:6"},"nodeType":"YulFunctionCall","src":"2638:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:6"},"nodeType":"YulFunctionCall","src":"2632:27:6"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:6"}]},{"nodeType":"YulAssignment","src":"2676:41:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:6","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:6"},"nodeType":"YulFunctionCall","src":"2695:20:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:6"},"nodeType":"YulFunctionCall","src":"2689:27:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:6"},"nodeType":"YulFunctionCall","src":"2681:36:6"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2051,"isOffset":false,"isSlot":false,"src":"2578:1:6","valueSize":1},{"declaration":2054,"isOffset":false,"isSlot":false,"src":"2627:1:6","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"2593:9:6","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"2642:9:6","valueSize":1},{"declaration":2036,"isOffset":false,"isSlot":false,"src":"2699:9:6","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"2676:1:6","valueSize":1}],"flags":["memory-safe"],"id":2059,"nodeType":"InlineAssembly","src":"2535:196:6"},{"expression":{"arguments":[{"id":2061,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"2762:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2062,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"2768:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2063,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2771:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2064,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2774:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2060,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2084,2164,2272],"referencedDeclaration":2272,"src":"2751:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2045,"id":2066,"nodeType":"Return","src":"2744:32:6"}]}}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"857:1267:6","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2084,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:6","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"hash","nameLocation":"2166:4:6","nodeType":"VariableDeclaration","scope":2084,"src":"2158:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"signature","nameLocation":"2193:9:6","nodeType":"VariableDeclaration","scope":2084,"src":"2180:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:6"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:6","nodeType":"VariableDeclaration","scope":2084,"src":"2232:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"err","nameLocation":"2264:3:6","nodeType":"VariableDeclaration","scope":2084,"src":"2251:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2041,"nodeType":"UserDefinedTypeName","pathNode":{"id":2040,"name":"RecoverError","nameLocations":["2251:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"2251:12:6"},"referencedDeclaration":2018,"src":"2251:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2044,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:6","nodeType":"VariableDeclaration","scope":2084,"src":"2269:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:6"},"scope":2358,"src":"2129:778:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2113,"nodeType":"Block","src":"3801:168:6","statements":[{"assignments":[2095,2098,2100],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:6","nodeType":"VariableDeclaration","scope":2113,"src":"3812:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"error","nameLocation":"3844:5:6","nodeType":"VariableDeclaration","scope":2113,"src":"3831:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2097,"nodeType":"UserDefinedTypeName","pathNode":{"id":2096,"name":"RecoverError","nameLocations":["3831:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"3831:12:6"},"referencedDeclaration":2018,"src":"3831:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:6","nodeType":"VariableDeclaration","scope":2113,"src":"3851:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2105,"initialValue":{"arguments":[{"id":2102,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"3882:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2103,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"3888:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2101,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2084,2164,2272],"referencedDeclaration":2084,"src":"3871:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:6"},{"expression":{"arguments":[{"id":2107,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"3920:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"id":2108,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3927:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2106,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3908:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2018_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"ExpressionStatement","src":"3908:28:6"},{"expression":{"id":2111,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"3953:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2093,"id":2112,"nodeType":"Return","src":"3946:16:6"}]},"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"2913:796:6","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2114,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:6","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"hash","nameLocation":"3739:4:6","nodeType":"VariableDeclaration","scope":2114,"src":"3731:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"signature","nameLocation":"3758:9:6","nodeType":"VariableDeclaration","scope":2114,"src":"3745:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2088,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:6"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2114,"src":"3792:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:6"},"scope":2358,"src":"3714:255:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"4348:342:6","statements":[{"id":2162,"nodeType":"UncheckedBlock","src":"4358:326:6","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"s","nameLocation":"4390:1:6","nodeType":"VariableDeclaration","scope":2162,"src":"4382:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2139,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4394:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:6","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:6"},{"assignments":[2141],"declarations":[{"constant":false,"id":2141,"mutability":"mutable","name":"v","nameLocation":"4591:1:6","nodeType":"VariableDeclaration","scope":2162,"src":"4585:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2140,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2154,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2146,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4610:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:6","typeDescriptions":{}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:6","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2142,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:6","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:6"},{"expression":{"arguments":[{"id":2156,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4659:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2157,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"4665:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2158,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"4668:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2159,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"4671:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2155,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2084,2164,2272],"referencedDeclaration":2272,"src":"4648:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2130,"id":2161,"nodeType":"Return","src":"4641:32:6"}]}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"3975:205:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:6","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"hash","nameLocation":"4222:4:6","nodeType":"VariableDeclaration","scope":2164,"src":"4214:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"r","nameLocation":"4244:1:6","nodeType":"VariableDeclaration","scope":2164,"src":"4236:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"vs","nameLocation":"4263:2:6","nodeType":"VariableDeclaration","scope":2164,"src":"4255:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:6"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:6","nodeType":"VariableDeclaration","scope":2164,"src":"4295:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"err","nameLocation":"4327:3:6","nodeType":"VariableDeclaration","scope":2164,"src":"4314:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2126,"nodeType":"UserDefinedTypeName","pathNode":{"id":2125,"name":"RecoverError","nameLocations":["4314:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"4314:12:6"},"referencedDeclaration":2018,"src":"4314:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:6","nodeType":"VariableDeclaration","scope":2164,"src":"4332:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:6"},"scope":2358,"src":"4185:505:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2196,"nodeType":"Block","src":"4903:164:6","statements":[{"assignments":[2177,2180,2182],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:6","nodeType":"VariableDeclaration","scope":2196,"src":"4914:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"error","nameLocation":"4946:5:6","nodeType":"VariableDeclaration","scope":2196,"src":"4933:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2179,"nodeType":"UserDefinedTypeName","pathNode":{"id":2178,"name":"RecoverError","nameLocations":["4933:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"4933:12:6"},"referencedDeclaration":2018,"src":"4933:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:6","nodeType":"VariableDeclaration","scope":2196,"src":"4953:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2188,"initialValue":{"arguments":[{"id":2184,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4984:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2185,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"4990:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2186,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4993:2:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2183,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2084,2164,2272],"referencedDeclaration":2164,"src":"4973:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:6"},{"expression":{"arguments":[{"id":2190,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"5018:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"id":2191,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5025:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2189,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5006:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2018_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2193,"nodeType":"ExpressionStatement","src":"5006:28:6"},{"expression":{"id":2194,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"5051:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2175,"id":2195,"nodeType":"Return","src":"5044:16:6"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"4696:116:6","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2197,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:6","nodeType":"FunctionDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"hash","nameLocation":"4842:4:6","nodeType":"VariableDeclaration","scope":2197,"src":"4834:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"r","nameLocation":"4856:1:6","nodeType":"VariableDeclaration","scope":2197,"src":"4848:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"vs","nameLocation":"4867:2:6","nodeType":"VariableDeclaration","scope":2197,"src":"4859:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:6"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2197,"src":"4894:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:6"},"scope":2358,"src":"4817:250:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"5382:1372:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2218,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6278:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:6","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:6","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"6266:164:6","trueBody":{"id":2231,"nodeType":"Block","src":"6351:79:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:6","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2226,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"6385:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:6","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"6385:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"id":2228,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6417:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2215,"id":2230,"nodeType":"Return","src":"6365:54:6"}]}},{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"signer","nameLocation":"6532:6:6","nodeType":"VariableDeclaration","scope":2271,"src":"6524:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2241,"initialValue":{"arguments":[{"id":2236,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"6551:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2237,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"6557:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2238,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"6560:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2239,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6563:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2235,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:6","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6579:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:6","typeDescriptions":{}}},"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2261,"nodeType":"IfStatement","src":"6575:113:6","trueBody":{"id":2260,"nodeType":"Block","src":"6601:87:6","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:6","typeDescriptions":{}}},"id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2252,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"6635:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:6","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"6635:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:6","typeDescriptions":{}}},"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2215,"id":2259,"nodeType":"Return","src":"6615:62:6"}]}},{"expression":{"components":[{"id":2262,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6706:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2263,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"6714:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:6","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"6714:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:6","typeDescriptions":{}}},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2215,"id":2270,"nodeType":"Return","src":"6698:49:6"}]},"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"5073:125:6","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:6","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"hash","nameLocation":"5240:4:6","nodeType":"VariableDeclaration","scope":2272,"src":"5232:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"v","nameLocation":"5260:1:6","nodeType":"VariableDeclaration","scope":2272,"src":"5254:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2201,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"r","nameLocation":"5279:1:6","nodeType":"VariableDeclaration","scope":2272,"src":"5271:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"s","nameLocation":"5298:1:6","nodeType":"VariableDeclaration","scope":2272,"src":"5290:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:6"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:6","nodeType":"VariableDeclaration","scope":2272,"src":"5329:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"err","nameLocation":"5361:3:6","nodeType":"VariableDeclaration","scope":2272,"src":"5348:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"RecoverError","nameLocations":["5348:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"5348:12:6"},"referencedDeclaration":2018,"src":"5348:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:6","nodeType":"VariableDeclaration","scope":2272,"src":"5366:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:6"},"scope":2358,"src":"5203:1551:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"6981:166:6","statements":[{"assignments":[2287,2290,2292],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:6","nodeType":"VariableDeclaration","scope":2307,"src":"6992:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"error","nameLocation":"7024:5:6","nodeType":"VariableDeclaration","scope":2307,"src":"7011:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2289,"nodeType":"UserDefinedTypeName","pathNode":{"id":2288,"name":"RecoverError","nameLocations":["7011:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"7011:12:6"},"referencedDeclaration":2018,"src":"7011:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2292,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:6","nodeType":"VariableDeclaration","scope":2307,"src":"7031:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2299,"initialValue":{"arguments":[{"id":2294,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"7062:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2295,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"7068:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2296,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"7071:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2297,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7074:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2293,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2084,2164,2272],"referencedDeclaration":2272,"src":"7051:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2018_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:6"},{"expression":{"arguments":[{"id":2301,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"7098:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},{"id":2302,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"7105:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2300,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7086:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2018_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"7086:28:6"},{"expression":{"id":2305,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"7131:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2285,"id":2306,"nodeType":"Return","src":"7124:16:6"}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"6760:122:6","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:6","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"hash","nameLocation":"6912:4:6","nodeType":"VariableDeclaration","scope":2308,"src":"6904:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"v","nameLocation":"6924:1:6","nodeType":"VariableDeclaration","scope":2308,"src":"6918:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2276,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"r","nameLocation":"6935:1:6","nodeType":"VariableDeclaration","scope":2308,"src":"6927:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"s","nameLocation":"6946:1:6","nodeType":"VariableDeclaration","scope":2308,"src":"6938:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:6"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"6972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:6"},"scope":2358,"src":"6887:260:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2356,"nodeType":"Block","src":"7352:460:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"7366:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2318,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"7375:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:6","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"7375:20:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"7462:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2324,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"7471:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:6","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2015,"src":"7471:29:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"7567:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2332,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"7576:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:6","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2016,"src":"7576:35:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"7701:5:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2344,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"7710:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2018_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:6","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"7710:30:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2352,"nodeType":"IfStatement","src":"7697:109:6","trueBody":{"id":2351,"nodeType":"Block","src":"7742:64:6","statements":[{"errorCall":{"arguments":[{"id":2348,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"7786:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2347,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"7763:22:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"RevertStatement","src":"7756:39:6"}]}},"id":2353,"nodeType":"IfStatement","src":"7563:243:6","trueBody":{"id":2342,"nodeType":"Block","src":"7613:78:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2338,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"7670:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:6","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2335,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"7634:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2341,"nodeType":"RevertStatement","src":"7627:53:6"}]}},"id":2354,"nodeType":"IfStatement","src":"7458:348:6","trueBody":{"id":2330,"nodeType":"Block","src":"7502:55:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2327,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"7523:21:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2329,"nodeType":"RevertStatement","src":"7516:30:6"}]}},"id":2355,"nodeType":"IfStatement","src":"7362:444:6","trueBody":{"id":2322,"nodeType":"Block","src":"7397:55:6","statements":[{"functionReturnParameters":2316,"id":2321,"nodeType":"Return","src":"7411:7:6"}]}}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"7153:122:6","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2357,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:6","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"error","nameLocation":"7314:5:6","nodeType":"VariableDeclaration","scope":2357,"src":"7301:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2311,"nodeType":"UserDefinedTypeName","pathNode":{"id":2310,"name":"RecoverError","nameLocations":["7301:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":2018,"src":"7301:12:6"},"referencedDeclaration":2018,"src":"7301:12:6","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2018","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:6","nodeType":"VariableDeclaration","scope":2357,"src":"7321:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:6"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[],"src":"7352:0:6"},"scope":2358,"src":"7280:532:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2359,"src":"344:7470:6","usedErrors":[2021,2026,2031],"usedEvents":[]}],"src":"112:7703:6"},"id":6},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2444],"Strings":[2010]},"id":2445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2360,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2445,"sourceUnit":2011,"src":"149:39:7","symbolAliases":[{"foreign":{"id":2361,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"157:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"190:330:7","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2444,"linearizedBaseContracts":[2444],"name":"MessageHashUtils","nameLocation":"529:16:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":2372,"nodeType":"Block","src":"1339:341:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:7","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:7","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:7"},"nodeType":"YulFunctionCall","src":"1388:48:7"},"nodeType":"YulExpressionStatement","src":"1388:48:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:7","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:7"},"nodeType":"YulFunctionCall","src":"1490:25:7"},"nodeType":"YulExpressionStatement","src":"1490:25:7"},{"nodeType":"YulAssignment","src":"1569:31:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:7","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:7"},"nodeType":"YulFunctionCall","src":"1579:21:7"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2369,"isOffset":false,"isSlot":false,"src":"1569:6:7","valueSize":1},{"declaration":2366,"isOffset":false,"isSlot":false,"src":"1503:11:7","valueSize":1}],"flags":["memory-safe"],"id":2371,"nodeType":"InlineAssembly","src":"1349:325:7"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"552:690:7","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:7","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:7","nodeType":"VariableDeclaration","scope":2373,"src":"1279:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:7"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"digest","nameLocation":"1331:6:7","nodeType":"VariableDeclaration","scope":2373,"src":"1323:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:7"},"scope":2444,"src":"1247:433:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2398,"nodeType":"Block","src":"2257:143:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2390,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2366:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:7","memberName":"length","nodeType":"MemberAccess","src":"2366:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2388,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"2349:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2010_$","typeString":"type(library Strings)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":722,"src":"2349:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2386,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:7","typeDescriptions":{}}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2394,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"2384:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2382,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:7","typeDescriptions":{}}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:7","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2381,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2380,"id":2397,"nodeType":"Return","src":"2267:126:7"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"1686:480:7","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:7","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"message","nameLocation":"2216:7:7","nodeType":"VariableDeclaration","scope":2399,"src":"2203:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2375,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:7"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2399,"src":"2248:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:7"},"scope":2444,"src":"2171:229:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2418,"nodeType":"Block","src":"2854:80:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2413,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"2910:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2414,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"2921:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2410,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2409,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2408,"id":2417,"nodeType":"Return","src":"2864:63:7"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"2406:332:7","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:7","nodeType":"FunctionDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"validator","nameLocation":"2792:9:7","nodeType":"VariableDeclaration","scope":2419,"src":"2784:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"data","nameLocation":"2816:4:7","nodeType":"VariableDeclaration","scope":2419,"src":"2803:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:7"},"returnParameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"2845:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:7"},"scope":2444,"src":"2743:191:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2430,"nodeType":"Block","src":"3216:216:7","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:7","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:7","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:7"},"nodeType":"YulFunctionCall","src":"3265:24:7"},"nodeType":"YulExpressionStatement","src":"3265:24:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:7","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:7","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:7"},"nodeType":"YulFunctionCall","src":"3315:18:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:7"},"nodeType":"YulFunctionCall","src":"3302:32:7"},"nodeType":"YulExpressionStatement","src":"3302:32:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:7","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:7"},"nodeType":"YulFunctionCall","src":"3347:25:7"},"nodeType":"YulExpressionStatement","src":"3347:25:7"},{"nodeType":"YulAssignment","src":"3385:31:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:7","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:7"},"nodeType":"YulFunctionCall","src":"3395:21:7"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2427,"isOffset":false,"isSlot":false,"src":"3385:6:7","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"3360:11:7","valueSize":1},{"declaration":2422,"isOffset":false,"isSlot":false,"src":"3323:9:7","valueSize":1}],"flags":["memory-safe"],"id":2429,"nodeType":"InlineAssembly","src":"3226:200:7"}]},"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"2940:129:7","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":2431,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:7","nodeType":"FunctionDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"validator","nameLocation":"3132:9:7","nodeType":"VariableDeclaration","scope":2431,"src":"3124:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:7","nodeType":"VariableDeclaration","scope":2431,"src":"3151:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:7"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"digest","nameLocation":"3208:6:7","nodeType":"VariableDeclaration","scope":2431,"src":"3200:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:7"},"scope":2444,"src":"3074:358:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"3983:265:7","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:7"},"nodeType":"YulFunctionCall","src":"4043:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:7"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:7","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:7"},"nodeType":"YulFunctionCall","src":"4067:23:7"},"nodeType":"YulExpressionStatement","src":"4067:23:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:7","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:7"},"nodeType":"YulFunctionCall","src":"4110:14:7"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:7"},"nodeType":"YulFunctionCall","src":"4103:39:7"},"nodeType":"YulExpressionStatement","src":"4103:39:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:7","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:7"},"nodeType":"YulFunctionCall","src":"4162:14:7"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:7"},"nodeType":"YulFunctionCall","src":"4155:34:7"},"nodeType":"YulExpressionStatement","src":"4155:34:7"},{"nodeType":"YulAssignment","src":"4202:30:7","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:7","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:7"},"nodeType":"YulFunctionCall","src":"4212:20:7"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2439,"isOffset":false,"isSlot":false,"src":"4202:6:7","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"4126:15:7","valueSize":1},{"declaration":2436,"isOffset":false,"isSlot":false,"src":"4178:10:7","valueSize":1}],"flags":["memory-safe"],"id":2441,"nodeType":"InlineAssembly","src":"3993:249:7"}]},"documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"3438:431:7","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:7","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:7","nodeType":"VariableDeclaration","scope":2443,"src":"3899:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:7","nodeType":"VariableDeclaration","scope":2443,"src":"3924:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:7"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"digest","nameLocation":"3975:6:7","nodeType":"VariableDeclaration","scope":2443,"src":"3967:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:7"},"scope":2444,"src":"3874:374:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2445,"src":"521:3729:7","usedErrors":[],"usedEvents":[]}],"src":"123:4128:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2468],"IERC165":[2480]},"id":2469,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2446,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2469,"sourceUnit":2481,"src":"140:38:8","symbolAliases":[{"foreign":{"id":2447,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"148:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2450,"name":"IERC165","nameLocations":["688:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"688:7:8"},"id":2451,"nodeType":"InheritanceSpecifier","src":"688:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"180:479:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2468,"linearizedBaseContracts":[2468,2480],"name":"ERC165","nameLocation":"678:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2479],"body":{"id":2466,"nodeType":"Block","src":"845:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"862:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2461,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"882:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2480_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2480_$","typeString":"type(contract IERC165)"}],"id":2460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2480","typeString":"type(contract IERC165)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2458,"id":2465,"nodeType":"Return","src":"855:47:8"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"702:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:8","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:8","nodeType":"VariableDeclaration","scope":2467,"src":"790:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2453,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:8"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2467,"src":"839:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2456,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:8"},"scope":2468,"src":"763:146:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2469,"src":"660:251:8","usedErrors":[],"usedEvents":[]}],"src":"114:798:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2480]},"id":2481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2470,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"141:280:9","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2480,"linearizedBaseContracts":[2480],"name":"IERC165","nameLocation":"432:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"446:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2479,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:9","nodeType":"FunctionDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:9","nodeType":"VariableDeclaration","scope":2479,"src":"818:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2473,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:9"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"861:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2476,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:9"},"scope":2480,"src":"791:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2481,"src":"422:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:755:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4101],"Panic":[608],"SafeCast":[5866]},"id":4102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2482,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4102,"sourceUnit":609,"src":"129:35:10","symbolAliases":[{"foreign":{"id":2483,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"137:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4102,"sourceUnit":5867,"src":"165:40:10","symbolAliases":[{"foreign":{"id":2485,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2487,"nodeType":"StructuredDocumentation","src":"207:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4101,"linearizedBaseContracts":[4101],"name":"Math","nameLocation":"289:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2492,"members":[{"id":2488,"name":"Floor","nameLocation":"324:5:10","nodeType":"EnumValue","src":"324:5:10"},{"id":2489,"name":"Ceil","nameLocation":"367:4:10","nodeType":"EnumValue","src":"367:4:10"},{"id":2490,"name":"Trunc","nameLocation":"409:5:10","nodeType":"EnumValue","src":"409:5:10"},{"id":2491,"name":"Expand","nameLocation":"439:6:10","nodeType":"EnumValue","src":"439:6:10"}],"name":"Rounding","nameLocation":"305:8:10","nodeType":"EnumDefinition","src":"300:169:10"},{"body":{"id":2505,"nodeType":"Block","src":"731:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:10","statements":[{"nodeType":"YulAssignment","src":"780:16:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:10"},"nodeType":"YulFunctionCall","src":"787:9:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:10"}]},{"nodeType":"YulAssignment","src":"809:18:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:10"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:10"},"nodeType":"YulFunctionCall","src":"817:10:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2495,"isOffset":false,"isSlot":false,"src":"791:1:10","valueSize":1},{"declaration":2495,"isOffset":false,"isSlot":false,"src":"825:1:10","valueSize":1},{"declaration":2497,"isOffset":false,"isSlot":false,"src":"794:1:10","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"809:4:10","valueSize":1},{"declaration":2502,"isOffset":false,"isSlot":false,"src":"780:3:10","valueSize":1},{"declaration":2502,"isOffset":false,"isSlot":false,"src":"820:3:10","valueSize":1}],"flags":["memory-safe"],"id":2504,"nodeType":"InlineAssembly","src":"741:96:10"}]},"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"475:163:10","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:10","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"a","nameLocation":"667:1:10","nodeType":"VariableDeclaration","scope":2506,"src":"659:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"b","nameLocation":"678:1:10","nodeType":"VariableDeclaration","scope":2506,"src":"670:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:10"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"high","nameLocation":"712:4:10","nodeType":"VariableDeclaration","scope":2506,"src":"704:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"low","nameLocation":"726:3:10","nodeType":"VariableDeclaration","scope":2506,"src":"718:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:10"},"scope":4101,"src":"643:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2519,"nodeType":"Block","src":"1115:462:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:10"},"nodeType":"YulFunctionCall","src":"1474:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:10"},"nodeType":"YulFunctionCall","src":"1461:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:10","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:10"},"nodeType":"YulFunctionCall","src":"1501:9:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:10"}]},{"nodeType":"YulAssignment","src":"1523:38:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:10"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:10"},"nodeType":"YulFunctionCall","src":"1535:12:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:10"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:10"},"nodeType":"YulFunctionCall","src":"1549:11:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:10"},"nodeType":"YulFunctionCall","src":"1531:30:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2509,"isOffset":false,"isSlot":false,"src":"1468:1:10","valueSize":1},{"declaration":2509,"isOffset":false,"isSlot":false,"src":"1505:1:10","valueSize":1},{"declaration":2511,"isOffset":false,"isSlot":false,"src":"1471:1:10","valueSize":1},{"declaration":2511,"isOffset":false,"isSlot":false,"src":"1508:1:10","valueSize":1},{"declaration":2514,"isOffset":false,"isSlot":false,"src":"1523:4:10","valueSize":1},{"declaration":2516,"isOffset":false,"isSlot":false,"src":"1494:3:10","valueSize":1},{"declaration":2516,"isOffset":false,"isSlot":false,"src":"1543:3:10","valueSize":1},{"declaration":2516,"isOffset":false,"isSlot":false,"src":"1556:3:10","valueSize":1}],"flags":["memory-safe"],"id":2518,"nodeType":"InlineAssembly","src":"1412:159:10"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"849:173:10","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:10","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"a","nameLocation":"1051:1:10","nodeType":"VariableDeclaration","scope":2520,"src":"1043:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"b","nameLocation":"1062:1:10","nodeType":"VariableDeclaration","scope":2520,"src":"1054:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:10"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"high","nameLocation":"1096:4:10","nodeType":"VariableDeclaration","scope":2520,"src":"1088:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"low","nameLocation":"1110:3:10","nodeType":"VariableDeclaration","scope":2520,"src":"1102:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:10"},"scope":4101,"src":"1027:550:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2554,"nodeType":"Block","src":"1784:149:10","statements":[{"id":2553,"nodeType":"UncheckedBlock","src":"1794:133:10","statements":[{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"c","nameLocation":"1826:1:10","nodeType":"VariableDeclaration","scope":2553,"src":"1818:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2537,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1830:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2535,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"1834:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:10"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2538,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1849:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"1859:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"1864:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2543,"nodeType":"ExpressionStatement","src":"1849:16:10"},{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"1879:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"1888:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2548,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1908:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"1892:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"1892:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"1879:37:10"}]}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"1583:105:10","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2555,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:10","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"a","nameLocation":"1717:1:10","nodeType":"VariableDeclaration","scope":2555,"src":"1709:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"b","nameLocation":"1728:1:10","nodeType":"VariableDeclaration","scope":2555,"src":"1720:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:10"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"success","nameLocation":"1759:7:10","nodeType":"VariableDeclaration","scope":2555,"src":"1754:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"result","nameLocation":"1776:6:10","nodeType":"VariableDeclaration","scope":2555,"src":"1768:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:10"},"scope":4101,"src":"1693:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"2143:149:10","statements":[{"id":2588,"nodeType":"UncheckedBlock","src":"2153:133:10","statements":[{"assignments":[2568],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"c","nameLocation":"2185:1:10","nodeType":"VariableDeclaration","scope":2588,"src":"2177:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2572,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"2189:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"2193:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:10"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2573,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2208:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2218:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"2223:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2578,"nodeType":"ExpressionStatement","src":"2208:16:10"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2238:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"2247:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2267:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2581,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"2251:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"2251:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"2238:37:10"}]}]},"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"1939:108:10","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:10","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"a","nameLocation":"2076:1:10","nodeType":"VariableDeclaration","scope":2590,"src":"2068:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"b","nameLocation":"2087:1:10","nodeType":"VariableDeclaration","scope":2590,"src":"2079:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:10"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"success","nameLocation":"2118:7:10","nodeType":"VariableDeclaration","scope":2590,"src":"2113:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2562,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"result","nameLocation":"2135:6:10","nodeType":"VariableDeclaration","scope":2590,"src":"2127:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:10"},"scope":4101,"src":"2052:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"2505:391:10","statements":[{"id":2618,"nodeType":"UncheckedBlock","src":"2515:375:10","statements":[{"assignments":[2603],"declarations":[{"constant":false,"id":2603,"mutability":"mutable","name":"c","nameLocation":"2547:1:10","nodeType":"VariableDeclaration","scope":2618,"src":"2539:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2607,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2555:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:10"},{"AST":{"nodeType":"YulBlock","src":"2595:188:10","statements":[{"nodeType":"YulAssignment","src":"2727:42:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:10"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:10"},"nodeType":"YulFunctionCall","src":"2744:9:10"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:10"},"nodeType":"YulFunctionCall","src":"2741:16:10"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:10"},"nodeType":"YulFunctionCall","src":"2759:9:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:10"},"nodeType":"YulFunctionCall","src":"2738:31:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2593,"isOffset":false,"isSlot":false,"src":"2751:1:10","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"2766:1:10","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"2755:1:10","valueSize":1},{"declaration":2603,"isOffset":false,"isSlot":false,"src":"2748:1:10","valueSize":1},{"declaration":2598,"isOffset":false,"isSlot":false,"src":"2727:7:10","valueSize":1}],"flags":["memory-safe"],"id":2608,"nodeType":"InlineAssembly","src":"2570:213:10"},{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"2842:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"2851:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2613,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"2871:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2611,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"2855:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"2855:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2617,"nodeType":"ExpressionStatement","src":"2842:37:10"}]}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"2298:111:10","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:10","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"a","nameLocation":"2438:1:10","nodeType":"VariableDeclaration","scope":2620,"src":"2430:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"b","nameLocation":"2449:1:10","nodeType":"VariableDeclaration","scope":2620,"src":"2441:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:10"},"returnParameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"success","nameLocation":"2480:7:10","nodeType":"VariableDeclaration","scope":2620,"src":"2475:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2597,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"result","nameLocation":"2497:6:10","nodeType":"VariableDeclaration","scope":2620,"src":"2489:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:10"},"scope":4101,"src":"2414:482:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"3111:231:10","statements":[{"id":2639,"nodeType":"UncheckedBlock","src":"3121:215:10","statements":[{"expression":{"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2632,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3145:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"3155:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2637,"nodeType":"ExpressionStatement","src":"3145:15:10"},{"AST":{"nodeType":"YulBlock","src":"3199:127:10","statements":[{"nodeType":"YulAssignment","src":"3293:19:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:10"},"nodeType":"YulFunctionCall","src":"3303:9:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2623,"isOffset":false,"isSlot":false,"src":"3307:1:10","valueSize":1},{"declaration":2625,"isOffset":false,"isSlot":false,"src":"3310:1:10","valueSize":1},{"declaration":2630,"isOffset":false,"isSlot":false,"src":"3293:6:10","valueSize":1}],"flags":["memory-safe"],"id":2638,"nodeType":"InlineAssembly","src":"3174:152:10"}]}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"2902:113:10","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2641,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:10","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"a","nameLocation":"3044:1:10","nodeType":"VariableDeclaration","scope":2641,"src":"3036:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"b","nameLocation":"3055:1:10","nodeType":"VariableDeclaration","scope":2641,"src":"3047:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:10"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"success","nameLocation":"3086:7:10","nodeType":"VariableDeclaration","scope":2641,"src":"3081:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2627,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"result","nameLocation":"3103:6:10","nodeType":"VariableDeclaration","scope":2641,"src":"3095:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:10"},"scope":4101,"src":"3020:322:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2661,"nodeType":"Block","src":"3567:231:10","statements":[{"id":2660,"nodeType":"UncheckedBlock","src":"3577:215:10","statements":[{"expression":{"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2653,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"3601:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"3611:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2658,"nodeType":"ExpressionStatement","src":"3601:15:10"},{"AST":{"nodeType":"YulBlock","src":"3655:127:10","statements":[{"nodeType":"YulAssignment","src":"3749:19:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:10"},"nodeType":"YulFunctionCall","src":"3759:9:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2644,"isOffset":false,"isSlot":false,"src":"3763:1:10","valueSize":1},{"declaration":2646,"isOffset":false,"isSlot":false,"src":"3766:1:10","valueSize":1},{"declaration":2651,"isOffset":false,"isSlot":false,"src":"3749:6:10","valueSize":1}],"flags":["memory-safe"],"id":2659,"nodeType":"InlineAssembly","src":"3630:152:10"}]}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"3348:123:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:10","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"a","nameLocation":"3500:1:10","nodeType":"VariableDeclaration","scope":2662,"src":"3492:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"b","nameLocation":"3511:1:10","nodeType":"VariableDeclaration","scope":2662,"src":"3503:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:10"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"success","nameLocation":"3542:7:10","nodeType":"VariableDeclaration","scope":2662,"src":"3537:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2648,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"result","nameLocation":"3559:6:10","nodeType":"VariableDeclaration","scope":2662,"src":"3551:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:10"},"scope":4101,"src":"3476:322:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2691,"nodeType":"Block","src":"3989:122:10","statements":[{"assignments":[2673,2675],"declarations":[{"constant":false,"id":2673,"mutability":"mutable","name":"success","nameLocation":"4005:7:10","nodeType":"VariableDeclaration","scope":2691,"src":"4000:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2672,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"result","nameLocation":"4022:6:10","nodeType":"VariableDeclaration","scope":2691,"src":"4014:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2680,"initialValue":{"arguments":[{"id":2677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"4039:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2678,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"4042:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"4032:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:10"},{"expression":{"arguments":[{"id":2682,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4069:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"4078:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:10","memberName":"max","nodeType":"MemberAccess","src":"4086:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2681,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"4061:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2671,"id":2690,"nodeType":"Return","src":"4054:50:10"}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"3804:103:10","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2692,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:10","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"a","nameLocation":"3943:1:10","nodeType":"VariableDeclaration","scope":2692,"src":"3935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2667,"mutability":"mutable","name":"b","nameLocation":"3954:1:10","nodeType":"VariableDeclaration","scope":2692,"src":"3946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:10"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2692,"src":"3980:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:10"},"scope":4101,"src":"3912:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2711,"nodeType":"Block","src":"4294:73:10","statements":[{"assignments":[null,2703],"declarations":[null,{"constant":false,"id":2703,"mutability":"mutable","name":"result","nameLocation":"4315:6:10","nodeType":"VariableDeclaration","scope":2711,"src":"4307:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2708,"initialValue":{"arguments":[{"id":2705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"4332:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2706,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"4335:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"4325:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:10"},{"expression":{"id":2709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4354:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2701,"id":2710,"nodeType":"Return","src":"4347:13:10"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"4117:95:10","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":2712,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:10","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"a","nameLocation":"4248:1:10","nodeType":"VariableDeclaration","scope":2712,"src":"4240:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"b","nameLocation":"4259:1:10","nodeType":"VariableDeclaration","scope":2712,"src":"4251:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:10"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2712,"src":"4285:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:10"},"scope":4101,"src":"4217:150:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2741,"nodeType":"Block","src":"4564:122:10","statements":[{"assignments":[2723,2725],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"success","nameLocation":"4580:7:10","nodeType":"VariableDeclaration","scope":2741,"src":"4575:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2722,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"result","nameLocation":"4597:6:10","nodeType":"VariableDeclaration","scope":2741,"src":"4589:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2730,"initialValue":{"arguments":[{"id":2727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"4614:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2728,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"4617:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2726,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"4607:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:10"},{"expression":{"arguments":[{"id":2732,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"4644:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"4653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:10","memberName":"max","nodeType":"MemberAccess","src":"4661:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"4636:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2721,"id":2740,"nodeType":"Return","src":"4629:50:10"}]},"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"4373:109:10","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:10","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"a","nameLocation":"4518:1:10","nodeType":"VariableDeclaration","scope":2742,"src":"4510:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"b","nameLocation":"4529:1:10","nodeType":"VariableDeclaration","scope":2742,"src":"4521:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:10"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2742,"src":"4555:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:10"},"scope":4101,"src":"4487:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"5158:207:10","statements":[{"id":2767,"nodeType":"UncheckedBlock","src":"5168:191:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"5306:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"5312:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"5316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2761,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"5337:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2759,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5321:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"5321:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2753,"id":2766,"nodeType":"Return","src":"5299:49:10"}]}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"4692:374:10","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:10","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"condition","nameLocation":"5093:9:10","nodeType":"VariableDeclaration","scope":2769,"src":"5088:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2744,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"a","nameLocation":"5112:1:10","nodeType":"VariableDeclaration","scope":2769,"src":"5104:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"b","nameLocation":"5123:1:10","nodeType":"VariableDeclaration","scope":2769,"src":"5115:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:10"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"5149:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:10"},"scope":4101,"src":"5071:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2787,"nodeType":"Block","src":"5502:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"5527:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"5531:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2783,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"5534:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"5537:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"5519:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2778,"id":2786,"nodeType":"Return","src":"5512:27:10"}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"5371:59:10","text":" @dev Returns the largest of two numbers."},"id":2788,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:10","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"a","nameLocation":"5456:1:10","nodeType":"VariableDeclaration","scope":2788,"src":"5448:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"b","nameLocation":"5467:1:10","nodeType":"VariableDeclaration","scope":2788,"src":"5459:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:10"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2788,"src":"5493:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:10"},"scope":4101,"src":"5435:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2806,"nodeType":"Block","src":"5684:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"5709:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2800,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"5713:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"5716:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2803,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"5719:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2798,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2797,"id":2805,"nodeType":"Return","src":"5694:27:10"}]},"documentation":{"id":2789,"nodeType":"StructuredDocumentation","src":"5552:60:10","text":" @dev Returns the smallest of two numbers."},"id":2807,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:10","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"a","nameLocation":"5638:1:10","nodeType":"VariableDeclaration","scope":2807,"src":"5630:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"b","nameLocation":"5649:1:10","nodeType":"VariableDeclaration","scope":2807,"src":"5641:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:10"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2807,"src":"5675:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:10"},"scope":4101,"src":"5617:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"5912:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"5967:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2818,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"5971:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"5977:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"5981:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2816,"id":2828,"nodeType":"Return","src":"5959:28:10"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"5734:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:10","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"a","nameLocation":"5866:1:10","nodeType":"VariableDeclaration","scope":2830,"src":"5858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"b","nameLocation":"5877:1:10","nodeType":"VariableDeclaration","scope":2830,"src":"5869:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:10"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"5903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:10"},"scope":4101,"src":"5841:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"6286:633:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"6300:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2851,"nodeType":"IfStatement","src":"6296:150:10","trueBody":{"id":2850,"nodeType":"Block","src":"6308:138:10","statements":[{"expression":{"arguments":[{"expression":{"id":2846,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6412:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":575,"src":"6412:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2843,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6400:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":607,"src":"6400:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2849,"nodeType":"ExpressionStatement","src":"6400:35:10"}]}},{"id":2869,"nodeType":"UncheckedBlock","src":"6829:84:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"6876:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2852,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"6860:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"6860:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"6887:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2862,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"6896:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2839,"id":2868,"nodeType":"Return","src":"6853:49:10"}]}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"6000:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:10","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"a","nameLocation":"6240:1:10","nodeType":"VariableDeclaration","scope":2871,"src":"6232:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"b","nameLocation":"6251:1:10","nodeType":"VariableDeclaration","scope":2871,"src":"6243:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:10"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2871,"src":"6277:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:10"},"scope":4101,"src":"6215:704:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"7340:3585:10","statements":[{"id":3005,"nodeType":"UncheckedBlock","src":"7350:3569:10","statements":[{"assignments":[2884,2886],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"high","nameLocation":"7383:4:10","nodeType":"VariableDeclaration","scope":3005,"src":"7375:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"low","nameLocation":"7397:3:10","nodeType":"VariableDeclaration","scope":3005,"src":"7389:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2891,"initialValue":{"arguments":[{"id":2888,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"7411:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2889,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"7414:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2887,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"7404:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7498:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"7494:365:10","trueBody":{"id":2899,"nodeType":"Block","src":"7509:350:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"7827:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2896,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"7833:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2882,"id":2898,"nodeType":"Return","src":"7820:24:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"7969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2902,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"7984:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"7965:142:10","trueBody":{"id":2918,"nodeType":"Block","src":"7990:117:10","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8028:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2911,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"8046:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":575,"src":"8046:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2913,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"8070:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":571,"src":"8070:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"8020:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2904,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"8008:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":607,"src":"8008:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"8008:84:10"}]}},{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:10","nodeType":"VariableDeclaration","scope":3005,"src":"8359:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2922,"nodeType":"VariableDeclarationStatement","src":"8359:17:10"},{"AST":{"nodeType":"YulBlock","src":"8415:283:10","statements":[{"nodeType":"YulAssignment","src":"8484:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:10"},"nodeType":"YulFunctionCall","src":"8497:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:10"}]},{"nodeType":"YulAssignment","src":"8604:37:10","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:10"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:10"},"nodeType":"YulFunctionCall","src":"8622:18:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:10"},"nodeType":"YulFunctionCall","src":"8612:29:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:10"}]},{"nodeType":"YulAssignment","src":"8658:26:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:10"},"nodeType":"YulFunctionCall","src":"8665:19:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2878,"isOffset":false,"isSlot":false,"src":"8510:11:10","valueSize":1},{"declaration":2884,"isOffset":false,"isSlot":false,"src":"8604:4:10","valueSize":1},{"declaration":2884,"isOffset":false,"isSlot":false,"src":"8616:4:10","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"8636:3:10","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"8658:3:10","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"8669:3:10","valueSize":1},{"declaration":2921,"isOffset":false,"isSlot":false,"src":"8484:9:10","valueSize":1},{"declaration":2921,"isOffset":false,"isSlot":false,"src":"8625:9:10","valueSize":1},{"declaration":2921,"isOffset":false,"isSlot":false,"src":"8674:9:10","valueSize":1},{"declaration":2874,"isOffset":false,"isSlot":false,"src":"8504:1:10","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"8507:1:10","valueSize":1}],"flags":["memory-safe"],"id":2923,"nodeType":"InlineAssembly","src":"8390:308:10"},{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"twos","nameLocation":"8910:4:10","nodeType":"VariableDeclaration","scope":3005,"src":"8902:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8917:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2928,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"8936:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:10"},{"AST":{"nodeType":"YulBlock","src":"8987:359:10","statements":[{"nodeType":"YulAssignment","src":"9052:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:10"},"nodeType":"YulFunctionCall","src":"9067:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:10"}]},{"nodeType":"YulAssignment","src":"9153:21:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:10"},"nodeType":"YulFunctionCall","src":"9160:14:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:10"}]},{"nodeType":"YulAssignment","src":"9293:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:10"},"nodeType":"YulFunctionCall","src":"9309:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:10"},"nodeType":"YulFunctionCall","src":"9305:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:10"},"nodeType":"YulFunctionCall","src":"9301:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2878,"isOffset":false,"isSlot":false,"src":"9052:11:10","valueSize":1},{"declaration":2878,"isOffset":false,"isSlot":false,"src":"9071:11:10","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"9153:3:10","valueSize":1},{"declaration":2886,"isOffset":false,"isSlot":false,"src":"9164:3:10","valueSize":1},{"declaration":2925,"isOffset":false,"isSlot":false,"src":"9084:4:10","valueSize":1},{"declaration":2925,"isOffset":false,"isSlot":false,"src":"9169:4:10","valueSize":1},{"declaration":2925,"isOffset":false,"isSlot":false,"src":"9293:4:10","valueSize":1},{"declaration":2925,"isOffset":false,"isSlot":false,"src":"9316:4:10","valueSize":1},{"declaration":2925,"isOffset":false,"isSlot":false,"src":"9323:4:10","valueSize":1}],"flags":["memory-safe"],"id":2933,"nodeType":"InlineAssembly","src":"8962:384:10"},{"expression":{"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"9409:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"9416:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2936,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"9423:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2939,"nodeType":"ExpressionStatement","src":"9409:18:10"},{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:10","nodeType":"VariableDeclaration","scope":3005,"src":"9762:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2948,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2943,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"9785:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:10"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2949,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10033:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2952,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"10018:36:10"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10103:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2960,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"10088:36:10"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10175:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"10160:36:10"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10246:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2976,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"10231:36:10"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2981,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10304:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10319:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2984,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"10304:36:10"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10393:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2992,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"10378:36:10"},{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10859:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2998,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"10868:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2999,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"10874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3002,"nodeType":"ExpressionStatement","src":"10859:22:10"},{"expression":{"id":3003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"10902:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2882,"id":3004,"nodeType":"Return","src":"10895:13:10"}]}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"6925:312:10","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:10","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"x","nameLocation":"7266:1:10","nodeType":"VariableDeclaration","scope":3007,"src":"7258:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"y","nameLocation":"7277:1:10","nodeType":"VariableDeclaration","scope":3007,"src":"7269:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:10","nodeType":"VariableDeclaration","scope":3007,"src":"7280:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:10"},"returnParameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"result","nameLocation":"7332:6:10","nodeType":"VariableDeclaration","scope":3007,"src":"7324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2880,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:10"},"scope":4101,"src":"7242:3683:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3043,"nodeType":"Block","src":"11164:128:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11188:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3024,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"11191:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11194:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3022,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3007,3044],"referencedDeclaration":3007,"src":"11181:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3030,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"11242:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":3029,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"11225:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2492_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"11262:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3034,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"11265:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"11268:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"11209:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"11209:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3021,"id":3042,"nodeType":"Return","src":"11174:111:10"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"10931:118:10","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3044,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:10","nodeType":"FunctionDefinition","parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"x","nameLocation":"11078:1:10","nodeType":"VariableDeclaration","scope":3044,"src":"11070:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"y","nameLocation":"11089:1:10","nodeType":"VariableDeclaration","scope":3044,"src":"11081:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:10","nodeType":"VariableDeclaration","scope":3044,"src":"11092:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:10","nodeType":"VariableDeclaration","scope":3044,"src":"11113:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":3016,"nodeType":"UserDefinedTypeName","pathNode":{"id":3015,"name":"Rounding","nameLocations":["11113:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"11113:8:10"},"referencedDeclaration":2492,"src":"11113:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:10"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3044,"src":"11155:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:10"},"scope":4101,"src":"11054:238:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"11500:245:10","statements":[{"id":3092,"nodeType":"UncheckedBlock","src":"11510:229:10","statements":[{"assignments":[3057,3059],"declarations":[{"constant":false,"id":3057,"mutability":"mutable","name":"high","nameLocation":"11543:4:10","nodeType":"VariableDeclaration","scope":3092,"src":"11535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"low","nameLocation":"11557:3:10","nodeType":"VariableDeclaration","scope":3092,"src":"11549:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3064,"initialValue":{"arguments":[{"id":3061,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"11571:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3062,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3060,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"11564:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"11594:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3067,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11607:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3078,"nodeType":"IfStatement","src":"11590:86:10","trueBody":{"id":3077,"nodeType":"Block","src":"11610:66:10","statements":[{"expression":{"arguments":[{"expression":{"id":3073,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"11640:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":571,"src":"11640:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3070,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"11628:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":607,"src":"11628:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3076,"nodeType":"ExpressionStatement","src":"11628:33:10"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"11697:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3081,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11712:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"11719:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3087,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11726:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3055,"id":3091,"nodeType":"Return","src":"11689:39:10"}]}]},"documentation":{"id":3045,"nodeType":"StructuredDocumentation","src":"11298:111:10","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:10","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"x","nameLocation":"11438:1:10","nodeType":"VariableDeclaration","scope":3094,"src":"11430:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"y","nameLocation":"11449:1:10","nodeType":"VariableDeclaration","scope":3094,"src":"11441:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"n","nameLocation":"11458:1:10","nodeType":"VariableDeclaration","scope":3094,"src":"11452:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3050,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:10"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"result","nameLocation":"11492:6:10","nodeType":"VariableDeclaration","scope":3094,"src":"11484:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:10"},"scope":4101,"src":"11414:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3132,"nodeType":"Block","src":"11963:113:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3110,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"11987:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3111,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"11990:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3112,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"11993:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3109,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3094,3133],"referencedDeclaration":3094,"src":"11980:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3117,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"12031:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":3116,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"12014:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2492_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3120,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"12051:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3121,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"12054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3123,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"12062:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3119,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3114,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"11998:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"11998:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3108,"id":3131,"nodeType":"Return","src":"11973:96:10"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"11751:109:10","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:10","nodeType":"FunctionDefinition","parameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"x","nameLocation":"11889:1:10","nodeType":"VariableDeclaration","scope":3133,"src":"11881:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"y","nameLocation":"11900:1:10","nodeType":"VariableDeclaration","scope":3133,"src":"11892:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"n","nameLocation":"11909:1:10","nodeType":"VariableDeclaration","scope":3133,"src":"11903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3100,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:10","nodeType":"VariableDeclaration","scope":3133,"src":"11912:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"Rounding","nameLocations":["11912:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"11912:8:10"},"referencedDeclaration":2492,"src":"11912:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:10"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"11954:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:10"},"scope":4101,"src":"11865:211:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3229,"nodeType":"Block","src":"12710:1849:10","statements":[{"id":3228,"nodeType":"UncheckedBlock","src":"12720:1833:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"12748:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"12744:20:10","trueBody":{"expression":{"hexValue":"30","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3142,"id":3147,"nodeType":"Return","src":"12756:8:10"}},{"assignments":[3150],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:10","nodeType":"VariableDeclaration","scope":3228,"src":"13235:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"13255:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3152,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"13259:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:10"},{"assignments":[3156],"declarations":[{"constant":false,"id":3156,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:10","nodeType":"VariableDeclaration","scope":3228,"src":"13274:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3158,"initialValue":{"id":3157,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"13288:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:10"},{"assignments":[3160],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"x","nameLocation":"13432:1:10","nodeType":"VariableDeclaration","scope":3228,"src":"13425:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3159,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3162,"initialValue":{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:10"},{"assignments":[3164],"declarations":[{"constant":false,"id":3164,"mutability":"mutable","name":"y","nameLocation":"13458:1:10","nodeType":"VariableDeclaration","scope":3228,"src":"13451:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3163,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3166,"initialValue":{"hexValue":"31","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:10"},{"body":{"id":3203,"nodeType":"Block","src":"13501:882:10","statements":[{"assignments":[3171],"declarations":[{"constant":false,"id":3171,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:10","nodeType":"VariableDeclaration","scope":3203,"src":"13519:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3175,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"13538:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3173,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"13544:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:10"},{"expression":{"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3176,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"13573:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3177,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"13578:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3178,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3179,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"13678:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3180,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"13923:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3181,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"13929:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3182,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"13941:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3187,"nodeType":"ExpressionStatement","src":"13572:395:10"},{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3188,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"13987:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3189,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"13990:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3191,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"14072:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"14326:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"14330:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3196,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"14341:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3194,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:10","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3202,"nodeType":"ExpressionStatement","src":"13986:382:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"13485:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3204,"nodeType":"WhileStatement","src":"13478:905:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"14401:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3210,"nodeType":"IfStatement","src":"14397:22:10","trueBody":{"expression":{"hexValue":"30","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3142,"id":3209,"nodeType":"Return","src":"14411:8:10"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"14470:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"14477:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:10","subExpression":{"id":3218,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"14490:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:10","typeDescriptions":{}}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3224,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"14502:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:10","typeDescriptions":{}}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3211,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"14462:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3142,"id":3227,"nodeType":"Return","src":"14455:50:10"}]}]},"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"12082:553:10","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3230,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:10","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"a","nameLocation":"12664:1:10","nodeType":"VariableDeclaration","scope":3230,"src":"12656:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"n","nameLocation":"12675:1:10","nodeType":"VariableDeclaration","scope":3230,"src":"12667:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:10"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3230,"src":"12701:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:10"},"scope":4101,"src":"12640:1919:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3250,"nodeType":"Block","src":"15159:82:10","statements":[{"id":3249,"nodeType":"UncheckedBlock","src":"15169:66:10","statements":[{"expression":{"arguments":[{"id":3242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"15212:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3243,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"15215:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3246,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"15222:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3240,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"15200:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4101_$","typeString":"type(library Math)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:10","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"15200:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3239,"id":3248,"nodeType":"Return","src":"15193:31:10"}]}]},"documentation":{"id":3231,"nodeType":"StructuredDocumentation","src":"14565:514:10","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:10","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"a","nameLocation":"15113:1:10","nodeType":"VariableDeclaration","scope":3251,"src":"15105:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"p","nameLocation":"15124:1:10","nodeType":"VariableDeclaration","scope":3251,"src":"15116:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:10"},"returnParameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"15150:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:10"},"scope":4101,"src":"15084:157:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"16011:174:10","statements":[{"assignments":[3264,3266],"declarations":[{"constant":false,"id":3264,"mutability":"mutable","name":"success","nameLocation":"16027:7:10","nodeType":"VariableDeclaration","scope":3286,"src":"16022:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3263,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"result","nameLocation":"16044:6:10","nodeType":"VariableDeclaration","scope":3286,"src":"16036:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3272,"initialValue":{"arguments":[{"id":3268,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"16064:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3269,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"16067:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3270,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"16070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3267,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3311,3393],"referencedDeclaration":3311,"src":"16054:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:10"},{"condition":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:10","subExpression":{"id":3273,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"16087:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"16082:74:10","trueBody":{"id":3282,"nodeType":"Block","src":"16096:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":3278,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"16122:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":575,"src":"16122:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3275,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"16110:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":607,"src":"16110:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"ExpressionStatement","src":"16110:35:10"}]}},{"expression":{"id":3284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"16172:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3262,"id":3285,"nodeType":"Return","src":"16165:13:10"}]},"documentation":{"id":3252,"nodeType":"StructuredDocumentation","src":"15247:678:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:10","nodeType":"FunctionDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"b","nameLocation":"15954:1:10","nodeType":"VariableDeclaration","scope":3287,"src":"15946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"e","nameLocation":"15965:1:10","nodeType":"VariableDeclaration","scope":3287,"src":"15957:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"m","nameLocation":"15976:1:10","nodeType":"VariableDeclaration","scope":3287,"src":"15968:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3257,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:10"},"returnParameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"16002:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:10"},"scope":4101,"src":"15930:255:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3310,"nodeType":"Block","src":"17039:1493:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"17053:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3308,"nodeType":"IfStatement","src":"17049:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3300,"id":3307,"nodeType":"Return","src":"17061:17:10"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:10"},"nodeType":"YulFunctionCall","src":"17138:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:10"},"nodeType":"YulFunctionCall","src":"18050:17:10"},"nodeType":"YulExpressionStatement","src":"18050:17:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:10"},"nodeType":"YulFunctionCall","src":"18087:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:10"},"nodeType":"YulFunctionCall","src":"18080:28:10"},"nodeType":"YulExpressionStatement","src":"18080:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:10"},"nodeType":"YulFunctionCall","src":"18128:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:10"},"nodeType":"YulFunctionCall","src":"18121:28:10"},"nodeType":"YulExpressionStatement","src":"18121:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:10"},"nodeType":"YulFunctionCall","src":"18169:14:10"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:10"},"nodeType":"YulFunctionCall","src":"18162:25:10"},"nodeType":"YulExpressionStatement","src":"18162:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:10"},"nodeType":"YulFunctionCall","src":"18207:14:10"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:10"},"nodeType":"YulFunctionCall","src":"18200:25:10"},"nodeType":"YulExpressionStatement","src":"18200:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:10"},"nodeType":"YulFunctionCall","src":"18245:14:10"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:10"},"nodeType":"YulFunctionCall","src":"18238:25:10"},"nodeType":"YulExpressionStatement","src":"18238:25:10"},{"nodeType":"YulAssignment","src":"18425:57:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:10"},"nodeType":"YulFunctionCall","src":"18447:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:10","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:10","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:10"},"nodeType":"YulFunctionCall","src":"18436:46:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:10"}]},{"nodeType":"YulAssignment","src":"18495:21:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:10","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:10"},"nodeType":"YulFunctionCall","src":"18505:11:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3290,"isOffset":false,"isSlot":false,"src":"18185:1:10","valueSize":1},{"declaration":3292,"isOffset":false,"isSlot":false,"src":"18223:1:10","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"18261:1:10","valueSize":1},{"declaration":3299,"isOffset":false,"isSlot":false,"src":"18495:6:10","valueSize":1},{"declaration":3297,"isOffset":false,"isSlot":false,"src":"18425:7:10","valueSize":1}],"flags":["memory-safe"],"id":3309,"nodeType":"InlineAssembly","src":"17088:1438:10"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"16191:738:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:10","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"b","nameLocation":"16961:1:10","nodeType":"VariableDeclaration","scope":3311,"src":"16953:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"e","nameLocation":"16972:1:10","nodeType":"VariableDeclaration","scope":3311,"src":"16964:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"m","nameLocation":"16983:1:10","nodeType":"VariableDeclaration","scope":3311,"src":"16975:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:10"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"success","nameLocation":"17014:7:10","nodeType":"VariableDeclaration","scope":3311,"src":"17009:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3296,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"result","nameLocation":"17031:6:10","nodeType":"VariableDeclaration","scope":3311,"src":"17023:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:10"},"scope":4101,"src":"16934:1598:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"18729:179:10","statements":[{"assignments":[3324,3326],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"success","nameLocation":"18745:7:10","nodeType":"VariableDeclaration","scope":3346,"src":"18740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3323,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"result","nameLocation":"18767:6:10","nodeType":"VariableDeclaration","scope":3346,"src":"18754:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3325,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"id":3328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"18787:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3329,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"18790:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3330,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"18793:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3327,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3311,3393],"referencedDeclaration":3393,"src":"18777:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:10"},{"condition":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:10","subExpression":{"id":3333,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"18810:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"IfStatement","src":"18805:74:10","trueBody":{"id":3342,"nodeType":"Block","src":"18819:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":3338,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"18845:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":575,"src":"18845:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3335,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"18833:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$608_$","typeString":"type(library Panic)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":607,"src":"18833:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3341,"nodeType":"ExpressionStatement","src":"18833:35:10"}]}},{"expression":{"id":3344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"18895:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3322,"id":3345,"nodeType":"Return","src":"18888:13:10"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"18538:85:10","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:10","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"b","nameLocation":"18657:1:10","nodeType":"VariableDeclaration","scope":3347,"src":"18644:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3313,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"e","nameLocation":"18673:1:10","nodeType":"VariableDeclaration","scope":3347,"src":"18660:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3315,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"m","nameLocation":"18689:1:10","nodeType":"VariableDeclaration","scope":3347,"src":"18676:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3317,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:10"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"18715:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3320,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:10"},"scope":4101,"src":"18628:280:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3392,"nodeType":"Block","src":"19162:771:10","statements":[{"condition":{"arguments":[{"id":3362,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"19187:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3361,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"19176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3371,"nodeType":"IfStatement","src":"19172:47:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3365,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3360,"id":3370,"nodeType":"Return","src":"19191:28:10"}},{"assignments":[3373],"declarations":[{"constant":false,"id":3373,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:10","nodeType":"VariableDeclaration","scope":3392,"src":"19230:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3376,"initialValue":{"expression":{"id":3374,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"19245:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:10","memberName":"length","nodeType":"MemberAccess","src":"19245:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:10"},{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"19335:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3380,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"19361:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:10","memberName":"length","nodeType":"MemberAccess","src":"19361:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3382,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"19371:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:10","memberName":"length","nodeType":"MemberAccess","src":"19371:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3384,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"19381:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"19387:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3386,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"19390:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3387,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"19393:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3378,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3390,"nodeType":"ExpressionStatement","src":"19335:60:10"},{"AST":{"nodeType":"YulBlock","src":"19431:496:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:10"},"nodeType":"YulFunctionCall","src":"19460:17:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:10","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:10"},"nodeType":"YulFunctionCall","src":"19589:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:10","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:10"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:10"},"nodeType":"YulFunctionCall","src":"19611:13:10"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:10"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:10"},"nodeType":"YulFunctionCall","src":"19578:62:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:10"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:10"},"nodeType":"YulFunctionCall","src":"19789:20:10"},"nodeType":"YulExpressionStatement","src":"19789:20:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:10","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:10"},"nodeType":"YulFunctionCall","src":"19898:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:10"},"nodeType":"YulFunctionCall","src":"19885:32:10"},"nodeType":"YulExpressionStatement","src":"19885:32:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":3373,"isOffset":false,"isSlot":false,"src":"19635:4:10","valueSize":1},{"declaration":3373,"isOffset":false,"isSlot":false,"src":"19804:4:10","valueSize":1},{"declaration":3373,"isOffset":false,"isSlot":false,"src":"19911:4:10","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"19464:6:10","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"19617:6:10","valueSize":1},{"declaration":3359,"isOffset":false,"isSlot":false,"src":"19796:6:10","valueSize":1},{"declaration":3357,"isOffset":false,"isSlot":false,"src":"19567:7:10","valueSize":1}],"flags":["memory-safe"],"id":3391,"nodeType":"InlineAssembly","src":"19406:521:10"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"18914:88:10","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3393,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:10","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"b","nameLocation":"19048:1:10","nodeType":"VariableDeclaration","scope":3393,"src":"19035:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3349,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"e","nameLocation":"19072:1:10","nodeType":"VariableDeclaration","scope":3393,"src":"19059:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3351,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"m","nameLocation":"19096:1:10","nodeType":"VariableDeclaration","scope":3393,"src":"19083:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3353,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:10"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"success","nameLocation":"19132:7:10","nodeType":"VariableDeclaration","scope":3393,"src":"19127:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3356,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"result","nameLocation":"19154:6:10","nodeType":"VariableDeclaration","scope":3393,"src":"19141:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3358,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:10"},"scope":4101,"src":"19007:926:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3425,"nodeType":"Block","src":"20088:176:10","statements":[{"body":{"id":3421,"nodeType":"Block","src":"20145:92:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3412,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"20163:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3414,"indexExpression":{"id":3413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"20173:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3420,"nodeType":"IfStatement","src":"20159:68:10","trueBody":{"id":3419,"nodeType":"Block","src":"20182:45:10","statements":[{"expression":{"hexValue":"66616c7365","id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3400,"id":3418,"nodeType":"Return","src":"20200:12:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"20118:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3406,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"20122:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:10","memberName":"length","nodeType":"MemberAccess","src":"20122:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3422,"initializationExpression":{"assignments":[3402],"declarations":[{"constant":false,"id":3402,"mutability":"mutable","name":"i","nameLocation":"20111:1:10","nodeType":"VariableDeclaration","scope":3422,"src":"20103:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3404,"initialValue":{"hexValue":"30","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:10"},"loopExpression":{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:10","subExpression":{"id":3409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"20142:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"20140:3:10"},"nodeType":"ForStatement","src":"20098:139:10"},{"expression":{"hexValue":"74727565","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3400,"id":3424,"nodeType":"Return","src":"20246:11:10"}]},"documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"19939:72:10","text":" @dev Returns whether the provided byte array is zero."},"id":3426,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:10","nodeType":"FunctionDefinition","parameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:10","nodeType":"VariableDeclaration","scope":3426,"src":"20036:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3395,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:10"},"returnParameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3426,"src":"20082:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3398,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:10"},"scope":4101,"src":"20016:248:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3644,"nodeType":"Block","src":"20624:5124:10","statements":[{"id":3643,"nodeType":"UncheckedBlock","src":"20634:5108:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"20728:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"20724:53:10","trueBody":{"id":3439,"nodeType":"Block","src":"20736:41:10","statements":[{"expression":{"id":3437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"20761:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3433,"id":3438,"nodeType":"Return","src":"20754:8:10"}]}},{"assignments":[3442],"declarations":[{"constant":false,"id":3442,"mutability":"mutable","name":"aa","nameLocation":"21712:2:10","nodeType":"VariableDeclaration","scope":3643,"src":"21704:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3444,"initialValue":{"id":3443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"21717:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:10"},{"assignments":[3446],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"xn","nameLocation":"21740:2:10","nodeType":"VariableDeclaration","scope":3643,"src":"21732:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3448,"initialValue":{"hexValue":"31","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"21765:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"21761:92:10","trueBody":{"id":3463,"nodeType":"Block","src":"21783:70:10","statements":[{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"21801:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"21801:10:10"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"21829:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"21829:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"21870:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3480,"nodeType":"IfStatement","src":"21866:90:10","trueBody":{"id":3479,"nodeType":"Block","src":"21887:69:10","statements":[{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"21905:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3474,"nodeType":"ExpressionStatement","src":"21905:9:10"},{"expression":{"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3475,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"21932:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3478,"nodeType":"ExpressionStatement","src":"21932:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"21973:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3496,"nodeType":"IfStatement","src":"21969:90:10","trueBody":{"id":3495,"nodeType":"Block","src":"21990:69:10","statements":[{"expression":{"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3487,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22008:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3490,"nodeType":"ExpressionStatement","src":"22008:9:10"},{"expression":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3491,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22035:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3494,"nodeType":"ExpressionStatement","src":"22035:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22076:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3512,"nodeType":"IfStatement","src":"22072:89:10","trueBody":{"id":3511,"nodeType":"Block","src":"22093:68:10","statements":[{"expression":{"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3503,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22111:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3506,"nodeType":"ExpressionStatement","src":"22111:9:10"},{"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3507,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22138:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3510,"nodeType":"ExpressionStatement","src":"22138:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3513,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22178:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3528,"nodeType":"IfStatement","src":"22174:87:10","trueBody":{"id":3527,"nodeType":"Block","src":"22194:67:10","statements":[{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22212:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"22212:8:10"},{"expression":{"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22238:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3526,"nodeType":"ExpressionStatement","src":"22238:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22278:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3544,"nodeType":"IfStatement","src":"22274:87:10","trueBody":{"id":3543,"nodeType":"Block","src":"22294:67:10","statements":[{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3535,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22312:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3538,"nodeType":"ExpressionStatement","src":"22312:8:10"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22338:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"22338:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"22378:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"22374:61:10","trueBody":{"id":3555,"nodeType":"Block","src":"22394:41:10","statements":[{"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3551,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22412:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ExpressionStatement","src":"22412:8:10"}]}},{"expression":{"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22855:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3559,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"22865:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3565,"nodeType":"ExpressionStatement","src":"22855:18:10"},{"expression":{"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3566,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24760:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24766:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"24771:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3569,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24775:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3576,"nodeType":"ExpressionStatement","src":"24760:23:10"},{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3577,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24869:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24875:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"24880:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3580,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24884:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3587,"nodeType":"ExpressionStatement","src":"24869:23:10"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3588,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24980:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24986:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"24991:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3591,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"24995:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"24980:23:10"},{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25089:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25095:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"25100:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3602,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25104:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"25089:23:10"},{"expression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25199:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25205:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"25210:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3613,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25214:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3620,"nodeType":"ExpressionStatement","src":"25199:23:10"},{"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3621,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25309:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25315:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"25320:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3624,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25324:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3631,"nodeType":"ExpressionStatement","src":"25309:23:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25698:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25719:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"25724:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3637,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"25728:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3633,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"25703:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"25703:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3433,"id":3642,"nodeType":"Return","src":"25691:40:10"}]}]},"documentation":{"id":3427,"nodeType":"StructuredDocumentation","src":"20270:292:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:10","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"a","nameLocation":"20589:1:10","nodeType":"VariableDeclaration","scope":3645,"src":"20581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:10"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3645,"src":"20615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:10"},"scope":4101,"src":"20567:5181:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3678,"nodeType":"Block","src":"25921:171:10","statements":[{"id":3677,"nodeType":"UncheckedBlock","src":"25931:155:10","statements":[{"assignments":[3657],"declarations":[{"constant":false,"id":3657,"mutability":"mutable","name":"result","nameLocation":"25963:6:10","nodeType":"VariableDeclaration","scope":3677,"src":"25955:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3661,"initialValue":{"arguments":[{"id":3659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"25977:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3658,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3645,3679],"referencedDeclaration":3645,"src":"25972:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"26000:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3666,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"26042:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":3665,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"26025:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2492_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"26055:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"26064:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"26073:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26009:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26009:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3655,"id":3676,"nodeType":"Return","src":"25993:82:10"}]}]},"documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"25754:86:10","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3679,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:10","nodeType":"FunctionDefinition","parameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"a","nameLocation":"25867:1:10","nodeType":"VariableDeclaration","scope":3679,"src":"25859:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3651,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:10","nodeType":"VariableDeclaration","scope":3679,"src":"25870:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":3650,"nodeType":"UserDefinedTypeName","pathNode":{"id":3649,"name":"Rounding","nameLocations":["25870:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"25870:8:10"},"referencedDeclaration":2492,"src":"25870:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:10"},"returnParameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3679,"src":"25912:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:10"},"scope":4101,"src":"25845:247:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"26281:2334:10","statements":[{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26363:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3690,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"26383:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26367:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26367:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"26363:64:10"},{"expression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3698,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26503:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"26525:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3702,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26530:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3699,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26508:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26508:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:10","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3711,"nodeType":"ExpressionStatement","src":"26503:56:10"},{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3712,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26634:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"26656:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3716,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26661:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3713,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26639:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26639:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"26634:48:10"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26757:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"26779:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3730,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26784:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3727,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26762:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26762:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3739,"nodeType":"ExpressionStatement","src":"26757:44:10"},{"expression":{"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26874:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"26896:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3744,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26901:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3741,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26879:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26879:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ExpressionStatement","src":"26874:42:10"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3754,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26988:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"27010:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3758,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"27015:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3755,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"26993:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"26993:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"26988:41:10"},{"AST":{"nodeType":"YulBlock","src":"28490:119:10","statements":[{"nodeType":"YulAssignment","src":"28504:95:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:10"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:10"},"nodeType":"YulFunctionCall","src":"28520:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:10","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:10"},"nodeType":"YulFunctionCall","src":"28515:83:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:10"},"nodeType":"YulFunctionCall","src":"28509:90:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3685,"isOffset":false,"isSlot":false,"src":"28504:1:10","valueSize":1},{"declaration":3685,"isOffset":false,"isSlot":false,"src":"28512:1:10","valueSize":1},{"declaration":3685,"isOffset":false,"isSlot":false,"src":"28524:1:10","valueSize":1},{"declaration":3682,"isOffset":false,"isSlot":false,"src":"28527:1:10","valueSize":1}],"flags":["memory-safe"],"id":3768,"nodeType":"InlineAssembly","src":"28465:144:10"}]},"documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"26098:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:10","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"x","nameLocation":"26244:1:10","nodeType":"VariableDeclaration","scope":3770,"src":"26236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:10"},"returnParameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"r","nameLocation":"26278:1:10","nodeType":"VariableDeclaration","scope":3770,"src":"26270:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:10"},"scope":4101,"src":"26222:2393:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3803,"nodeType":"Block","src":"28848:175:10","statements":[{"id":3802,"nodeType":"UncheckedBlock","src":"28858:159:10","statements":[{"assignments":[3782],"declarations":[{"constant":false,"id":3782,"mutability":"mutable","name":"result","nameLocation":"28890:6:10","nodeType":"VariableDeclaration","scope":3802,"src":"28882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3786,"initialValue":{"arguments":[{"id":3784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"28904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3783,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3770,3804],"referencedDeclaration":3770,"src":"28899:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"28931:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3791,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"28973:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":3790,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"28956:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2492_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"28991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"29000:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3788,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"28940:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"28940:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3780,"id":3801,"nodeType":"Return","src":"28924:82:10"}]}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"28621:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:10","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"value","nameLocation":"28790:5:10","nodeType":"VariableDeclaration","scope":3804,"src":"28782:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:10","nodeType":"VariableDeclaration","scope":3804,"src":"28797:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":3775,"nodeType":"UserDefinedTypeName","pathNode":{"id":3774,"name":"Rounding","nameLocations":["28797:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"28797:8:10"},"referencedDeclaration":2492,"src":"28797:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:10"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"28839:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:10"},"scope":4101,"src":"28768:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3932,"nodeType":"Block","src":"29216:854:10","statements":[{"assignments":[3813],"declarations":[{"constant":false,"id":3813,"mutability":"mutable","name":"result","nameLocation":"29234:6:10","nodeType":"VariableDeclaration","scope":3932,"src":"29226:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3815,"initialValue":{"hexValue":"30","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:10"},{"id":3929,"nodeType":"UncheckedBlock","src":"29254:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29282:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"29278:103:10","trueBody":{"id":3831,"nodeType":"Block","src":"29301:80:10","statements":[{"expression":{"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29319:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3826,"nodeType":"ExpressionStatement","src":"29319:17:10"},{"expression":{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"29354:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"nodeType":"ExpressionStatement","src":"29354:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29398:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3849,"nodeType":"IfStatement","src":"29394:103:10","trueBody":{"id":3848,"nodeType":"Block","src":"29417:80:10","statements":[{"expression":{"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29435:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3843,"nodeType":"ExpressionStatement","src":"29435:17:10"},{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"29470:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"29470:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29514:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"29510:103:10","trueBody":{"id":3865,"nodeType":"Block","src":"29533:80:10","statements":[{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29551:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ExpressionStatement","src":"29551:17:10"},{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"29586:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"29586:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29630:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3883,"nodeType":"IfStatement","src":"29626:100:10","trueBody":{"id":3882,"nodeType":"Block","src":"29648:78:10","statements":[{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29666:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"nodeType":"ExpressionStatement","src":"29666:16:10"},{"expression":{"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"29700:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3881,"nodeType":"ExpressionStatement","src":"29700:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29743:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3900,"nodeType":"IfStatement","src":"29739:100:10","trueBody":{"id":3899,"nodeType":"Block","src":"29761:78:10","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29779:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3894,"nodeType":"ExpressionStatement","src":"29779:16:10"},{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"29813:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3898,"nodeType":"ExpressionStatement","src":"29813:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29856:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"29852:100:10","trueBody":{"id":3916,"nodeType":"Block","src":"29874:78:10","statements":[{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29892:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"29892:16:10"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"29926:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"29926:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"29969:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"nodeType":"IfStatement","src":"29965:66:10","trueBody":{"id":3927,"nodeType":"Block","src":"29987:44:10","statements":[{"expression":{"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"30005:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3926,"nodeType":"ExpressionStatement","src":"30005:11:10"}]}}]},{"expression":{"id":3930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"30057:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3811,"id":3931,"nodeType":"Return","src":"30050:13:10"}]},"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"29029:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3933,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:10","nodeType":"FunctionDefinition","parameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"value","nameLocation":"29177:5:10","nodeType":"VariableDeclaration","scope":3933,"src":"29169:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:10"},"returnParameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3933,"src":"29207:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:10"},"scope":4101,"src":"29154:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"30305:177:10","statements":[{"id":3965,"nodeType":"UncheckedBlock","src":"30315:161:10","statements":[{"assignments":[3945],"declarations":[{"constant":false,"id":3945,"mutability":"mutable","name":"result","nameLocation":"30347:6:10","nodeType":"VariableDeclaration","scope":3965,"src":"30339:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3944,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3949,"initialValue":{"arguments":[{"id":3947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"30362:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3946,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3933,3967],"referencedDeclaration":3933,"src":"30356:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"30389:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3954,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"30431:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":3953,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"30414:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2492_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"30450:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"30459:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3951,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"30398:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"30398:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3943,"id":3964,"nodeType":"Return","src":"30382:83:10"}]}]},"documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"30076:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:10","nodeType":"FunctionDefinition","parameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"value","nameLocation":"30247:5:10","nodeType":"VariableDeclaration","scope":3967,"src":"30239:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:10","nodeType":"VariableDeclaration","scope":3967,"src":"30254:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"Rounding","nameLocations":["30254:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"30254:8:10"},"referencedDeclaration":2492,"src":"30254:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:10"},"returnParameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3967,"src":"30296:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:10"},"scope":4101,"src":"30224:258:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4043,"nodeType":"Block","src":"30800:675:10","statements":[{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3975,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"30882:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"30902:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3976,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"30886:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"30886:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"30882:64:10"},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3989,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"31044:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3990,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31049:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3987,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31027:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"31027:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"31022:56:10"},{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31153:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"31175:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4004,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31180:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4001,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31158:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"31158:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ExpressionStatement","src":"31153:48:10"},{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31276:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"31298:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4018,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31303:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4015,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31281:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"31281:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"31276:44:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31426:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"31453:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4035,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"31458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4032,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31436:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"31436:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3974,"id":4042,"nodeType":"Return","src":"31418:50:10"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"30488:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4044,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:10","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"x","nameLocation":"30763:1:10","nodeType":"VariableDeclaration","scope":4044,"src":"30755:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:10"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"r","nameLocation":"30797:1:10","nodeType":"VariableDeclaration","scope":4044,"src":"30789:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:10"},"scope":4101,"src":"30739:736:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"31712:184:10","statements":[{"id":4079,"nodeType":"UncheckedBlock","src":"31722:168:10","statements":[{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"result","nameLocation":"31754:6:10","nodeType":"VariableDeclaration","scope":4079,"src":"31746:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4060,"initialValue":{"arguments":[{"id":4058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"31770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4057,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4044,4081],"referencedDeclaration":4044,"src":"31763:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"31797:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4065,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"31839:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":4064,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"31822:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2492_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"31858:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"31873:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4062,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31806:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"31806:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4054,"id":4078,"nodeType":"Return","src":"31790:89:10"}]}]},"documentation":{"id":4045,"nodeType":"StructuredDocumentation","src":"31481:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:10","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"value","nameLocation":"31654:5:10","nodeType":"VariableDeclaration","scope":4081,"src":"31646:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:10","nodeType":"VariableDeclaration","scope":4081,"src":"31661:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":4049,"nodeType":"UserDefinedTypeName","pathNode":{"id":4048,"name":"Rounding","nameLocations":["31661:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"31661:8:10"},"referencedDeclaration":2492,"src":"31661:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:10"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4081,"src":"31703:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:10"},"scope":4101,"src":"31630:266:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"32094:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4092,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"32117:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}],"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4090,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:10","typeDescriptions":{}}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4089,"id":4098,"nodeType":"Return","src":"32104:31:10"}]},"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"31902:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:10","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:10","nodeType":"VariableDeclaration","scope":4100,"src":"32046:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"},"typeName":{"id":4084,"nodeType":"UserDefinedTypeName","pathNode":{"id":4083,"name":"Rounding","nameLocations":["32046:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2492,"src":"32046:8:10"},"referencedDeclaration":2492,"src":"32046:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2492","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:10"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"32088:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4087,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:10"},"scope":4101,"src":"32020:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4102,"src":"281:31863:10","usedErrors":[],"usedEvents":[]}],"src":"103:32042:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5866]},"id":5867,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4103,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"218:550:11","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5866,"linearizedBaseContracts":[5866],"name":"SafeCast","nameLocation":"777:8:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"792:68:11","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4111,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:11","nodeType":"ErrorDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"bits","nameLocation":"908:4:11","nodeType":"VariableDeclaration","scope":4111,"src":"902:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4106,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"value","nameLocation":"922:5:11","nodeType":"VariableDeclaration","scope":4111,"src":"914:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:11"},"src":"865:64:11"},{"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"935:75:11","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4116,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:11","nodeType":"ErrorDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"value","nameLocation":"1056:5:11","nodeType":"VariableDeclaration","scope":4116,"src":"1049:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4113,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:11"},"src":"1015:48:11"},{"documentation":{"id":4117,"nodeType":"StructuredDocumentation","src":"1069:67:11","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4123,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:11","nodeType":"ErrorDefinition","parameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"bits","nameLocation":"1183:4:11","nodeType":"VariableDeclaration","scope":4123,"src":"1177:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4118,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"value","nameLocation":"1196:5:11","nodeType":"VariableDeclaration","scope":4123,"src":"1189:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4120,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:11"},"src":"1141:62:11"},{"documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"1209:75:11","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4128,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:11","nodeType":"ErrorDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"value","nameLocation":"1331:5:11","nodeType":"VariableDeclaration","scope":4128,"src":"1323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:11"},"src":"1289:49:11"},{"body":{"id":4155,"nodeType":"Block","src":"1695:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"1709:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4138,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:11","memberName":"max","nodeType":"MemberAccess","src":"1717:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"nodeType":"IfStatement","src":"1705:105:11","trueBody":{"id":4148,"nodeType":"Block","src":"1736:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4143,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"1757:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4147,"nodeType":"RevertStatement","src":"1750:49:11"}]}},{"expression":{"arguments":[{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"1834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4150,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:11","typeDescriptions":{}}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4135,"id":4154,"nodeType":"Return","src":"1819:21:11"}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"1344:280:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4156,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:11","nodeType":"FunctionDefinition","parameters":{"id":4132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"value","nameLocation":"1656:5:11","nodeType":"VariableDeclaration","scope":4156,"src":"1648:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:11"},"returnParameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4156,"src":"1686:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4133,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:11"},"scope":5866,"src":"1629:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4183,"nodeType":"Block","src":"2204:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"2218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4166,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4165,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:11","memberName":"max","nodeType":"MemberAccess","src":"2226:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4177,"nodeType":"IfStatement","src":"2214:105:11","trueBody":{"id":4176,"nodeType":"Block","src":"2245:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"2302:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4171,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"2266:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4175,"nodeType":"RevertStatement","src":"2259:49:11"}]}},{"expression":{"arguments":[{"id":4180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4178,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:11","typeDescriptions":{}}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4163,"id":4182,"nodeType":"Return","src":"2328:21:11"}]},"documentation":{"id":4157,"nodeType":"StructuredDocumentation","src":"1853:280:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4184,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:11","nodeType":"FunctionDefinition","parameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"value","nameLocation":"2165:5:11","nodeType":"VariableDeclaration","scope":4184,"src":"2157:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:11"},"returnParameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4184,"src":"2195:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4161,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:11"},"scope":5866,"src":"2138:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4211,"nodeType":"Block","src":"2713:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4194,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4193,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:11","memberName":"max","nodeType":"MemberAccess","src":"2735:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4205,"nodeType":"IfStatement","src":"2723:105:11","trueBody":{"id":4204,"nodeType":"Block","src":"2754:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2811:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4199,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"2775:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4203,"nodeType":"RevertStatement","src":"2768:49:11"}]}},{"expression":{"arguments":[{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4206,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:11","typeDescriptions":{}}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4191,"id":4210,"nodeType":"Return","src":"2837:21:11"}]},"documentation":{"id":4185,"nodeType":"StructuredDocumentation","src":"2362:280:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:11","nodeType":"FunctionDefinition","parameters":{"id":4188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"value","nameLocation":"2674:5:11","nodeType":"VariableDeclaration","scope":4212,"src":"2666:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:11"},"returnParameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4212,"src":"2704:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4189,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:11"},"scope":5866,"src":"2647:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4239,"nodeType":"Block","src":"3222:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"3236:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4222,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4221,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:11","memberName":"max","nodeType":"MemberAccess","src":"3244:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4233,"nodeType":"IfStatement","src":"3232:105:11","trueBody":{"id":4232,"nodeType":"Block","src":"3263:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"3320:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4227,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"3284:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4231,"nodeType":"RevertStatement","src":"3277:49:11"}]}},{"expression":{"arguments":[{"id":4236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"3361:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4234,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:11","typeDescriptions":{}}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4219,"id":4238,"nodeType":"Return","src":"3346:21:11"}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"2871:280:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4240,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:11","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"value","nameLocation":"3183:5:11","nodeType":"VariableDeclaration","scope":4240,"src":"3175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:11"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4240,"src":"3213:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4217,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:11"},"scope":5866,"src":"3156:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"3731:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4250,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4249,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:11","memberName":"max","nodeType":"MemberAccess","src":"3753:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4261,"nodeType":"IfStatement","src":"3741:105:11","trueBody":{"id":4260,"nodeType":"Block","src":"3772:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3829:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4255,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"3793:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4259,"nodeType":"RevertStatement","src":"3786:49:11"}]}},{"expression":{"arguments":[{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"3870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4262,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:11","typeDescriptions":{}}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4247,"id":4266,"nodeType":"Return","src":"3855:21:11"}]},"documentation":{"id":4241,"nodeType":"StructuredDocumentation","src":"3380:280:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:11","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"value","nameLocation":"3692:5:11","nodeType":"VariableDeclaration","scope":4268,"src":"3684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:11"},"returnParameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4268,"src":"3722:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4245,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:11"},"scope":5866,"src":"3665:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"4240:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"4254:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4278,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4277,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:11","memberName":"max","nodeType":"MemberAccess","src":"4262:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4289,"nodeType":"IfStatement","src":"4250:105:11","trueBody":{"id":4288,"nodeType":"Block","src":"4281:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"4338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4283,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"4302:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4287,"nodeType":"RevertStatement","src":"4295:49:11"}]}},{"expression":{"arguments":[{"id":4292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"4379:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4290,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{}}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4275,"id":4294,"nodeType":"Return","src":"4364:21:11"}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"3889:280:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:11","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"value","nameLocation":"4201:5:11","nodeType":"VariableDeclaration","scope":4296,"src":"4193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:11"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4296,"src":"4231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4273,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:11"},"scope":5866,"src":"4174:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4323,"nodeType":"Block","src":"4749:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"4763:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4306,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:11","memberName":"max","nodeType":"MemberAccess","src":"4771:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4317,"nodeType":"IfStatement","src":"4759:105:11","trueBody":{"id":4316,"nodeType":"Block","src":"4790:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"4847:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4311,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"4811:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"RevertStatement","src":"4804:49:11"}]}},{"expression":{"arguments":[{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"4888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4318,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:11","typeDescriptions":{}}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4303,"id":4322,"nodeType":"Return","src":"4873:21:11"}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"4398:280:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4324,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:11","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"value","nameLocation":"4710:5:11","nodeType":"VariableDeclaration","scope":4324,"src":"4702:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:11"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4324,"src":"4740:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4301,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:11"},"scope":5866,"src":"4683:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4351,"nodeType":"Block","src":"5258:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"5272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4334,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4333,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:11","memberName":"max","nodeType":"MemberAccess","src":"5280:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4345,"nodeType":"IfStatement","src":"5268:105:11","trueBody":{"id":4344,"nodeType":"Block","src":"5299:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"5356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4339,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5320:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4343,"nodeType":"RevertStatement","src":"5313:49:11"}]}},{"expression":{"arguments":[{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"5397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4346,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:11","typeDescriptions":{}}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4331,"id":4350,"nodeType":"Return","src":"5382:21:11"}]},"documentation":{"id":4325,"nodeType":"StructuredDocumentation","src":"4907:280:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:11","nodeType":"FunctionDefinition","parameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"value","nameLocation":"5219:5:11","nodeType":"VariableDeclaration","scope":4352,"src":"5211:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:11"},"returnParameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4352,"src":"5249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4329,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:11"},"scope":5866,"src":"5192:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4379,"nodeType":"Block","src":"5767:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"5781:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4362,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4361,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:11","memberName":"max","nodeType":"MemberAccess","src":"5789:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4373,"nodeType":"IfStatement","src":"5777:105:11","trueBody":{"id":4372,"nodeType":"Block","src":"5808:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"5865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4367,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"5829:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4371,"nodeType":"RevertStatement","src":"5822:49:11"}]}},{"expression":{"arguments":[{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"5906:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4374,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:11","typeDescriptions":{}}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4359,"id":4378,"nodeType":"Return","src":"5891:21:11"}]},"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"5416:280:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4380,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:11","nodeType":"FunctionDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"value","nameLocation":"5728:5:11","nodeType":"VariableDeclaration","scope":4380,"src":"5720:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4354,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:11"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4380,"src":"5758:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4357,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:11"},"scope":5866,"src":"5701:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"6276:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"6290:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4390,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:11","memberName":"max","nodeType":"MemberAccess","src":"6298:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"nodeType":"IfStatement","src":"6286:105:11","trueBody":{"id":4400,"nodeType":"Block","src":"6317:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"6374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"6338:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4399,"nodeType":"RevertStatement","src":"6331:49:11"}]}},{"expression":{"arguments":[{"id":4404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"6415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4402,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:11","typeDescriptions":{}}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4387,"id":4406,"nodeType":"Return","src":"6400:21:11"}]},"documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"5925:280:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4408,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:11","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"value","nameLocation":"6237:5:11","nodeType":"VariableDeclaration","scope":4408,"src":"6229:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:11"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4408,"src":"6267:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4385,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:11"},"scope":5866,"src":"6210:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"6785:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"6799:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4418,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4417,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:11","memberName":"max","nodeType":"MemberAccess","src":"6807:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4429,"nodeType":"IfStatement","src":"6795:105:11","trueBody":{"id":4428,"nodeType":"Block","src":"6826:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"6883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4423,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"6847:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4427,"nodeType":"RevertStatement","src":"6840:49:11"}]}},{"expression":{"arguments":[{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"6924:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4430,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:11","typeDescriptions":{}}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4415,"id":4434,"nodeType":"Return","src":"6909:21:11"}]},"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"6434:280:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:11","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"value","nameLocation":"6746:5:11","nodeType":"VariableDeclaration","scope":4436,"src":"6738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:11"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4436,"src":"6776:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4413,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:11"},"scope":5866,"src":"6719:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"7294:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"7308:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4446,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:11","memberName":"max","nodeType":"MemberAccess","src":"7316:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"nodeType":"IfStatement","src":"7304:105:11","trueBody":{"id":4456,"nodeType":"Block","src":"7335:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"7392:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4451,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"7356:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4455,"nodeType":"RevertStatement","src":"7349:49:11"}]}},{"expression":{"arguments":[{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"7433:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4458,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:11","typeDescriptions":{}}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4443,"id":4462,"nodeType":"Return","src":"7418:21:11"}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"6943:280:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:11","nodeType":"FunctionDefinition","parameters":{"id":4440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"value","nameLocation":"7255:5:11","nodeType":"VariableDeclaration","scope":4464,"src":"7247:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:11"},"returnParameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4464,"src":"7285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4441,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:11"},"scope":5866,"src":"7228:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"7803:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"7817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4474,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4473,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:11","memberName":"max","nodeType":"MemberAccess","src":"7825:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4485,"nodeType":"IfStatement","src":"7813:105:11","trueBody":{"id":4484,"nodeType":"Block","src":"7844:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"7901:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4479,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"7865:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4483,"nodeType":"RevertStatement","src":"7858:49:11"}]}},{"expression":{"arguments":[{"id":4488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"7942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4486,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:11","typeDescriptions":{}}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4471,"id":4490,"nodeType":"Return","src":"7927:21:11"}]},"documentation":{"id":4465,"nodeType":"StructuredDocumentation","src":"7452:280:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:11","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"value","nameLocation":"7764:5:11","nodeType":"VariableDeclaration","scope":4492,"src":"7756:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:11"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"7794:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4469,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:11"},"scope":5866,"src":"7737:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4519,"nodeType":"Block","src":"8312:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"8326:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4502,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4501,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:11","memberName":"max","nodeType":"MemberAccess","src":"8334:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4513,"nodeType":"IfStatement","src":"8322:105:11","trueBody":{"id":4512,"nodeType":"Block","src":"8353:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"8410:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4507,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"8374:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4511,"nodeType":"RevertStatement","src":"8367:49:11"}]}},{"expression":{"arguments":[{"id":4516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"8451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4514,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:11","typeDescriptions":{}}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4499,"id":4518,"nodeType":"Return","src":"8436:21:11"}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"7961:280:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4520,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:11","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"value","nameLocation":"8273:5:11","nodeType":"VariableDeclaration","scope":4520,"src":"8265:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:11"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4520,"src":"8303:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4497,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:11"},"scope":5866,"src":"8246:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4547,"nodeType":"Block","src":"8821:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"8835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4530,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4529,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:11","memberName":"max","nodeType":"MemberAccess","src":"8843:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4541,"nodeType":"IfStatement","src":"8831:105:11","trueBody":{"id":4540,"nodeType":"Block","src":"8862:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"8919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4535,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"8883:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"RevertStatement","src":"8876:49:11"}]}},{"expression":{"arguments":[{"id":4544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"8960:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4542,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:11","typeDescriptions":{}}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4527,"id":4546,"nodeType":"Return","src":"8945:21:11"}]},"documentation":{"id":4521,"nodeType":"StructuredDocumentation","src":"8470:280:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4548,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:11","nodeType":"FunctionDefinition","parameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"value","nameLocation":"8782:5:11","nodeType":"VariableDeclaration","scope":4548,"src":"8774:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:11"},"returnParameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4548,"src":"8812:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4525,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:11"},"scope":5866,"src":"8755:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4575,"nodeType":"Block","src":"9330:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"9344:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4558,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:11","memberName":"max","nodeType":"MemberAccess","src":"9352:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4569,"nodeType":"IfStatement","src":"9340:105:11","trueBody":{"id":4568,"nodeType":"Block","src":"9371:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"9428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4563,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"9392:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4567,"nodeType":"RevertStatement","src":"9385:49:11"}]}},{"expression":{"arguments":[{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"9469:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4570,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:11","typeDescriptions":{}}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4555,"id":4574,"nodeType":"Return","src":"9454:21:11"}]},"documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"8979:280:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4576,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:11","nodeType":"FunctionDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"value","nameLocation":"9291:5:11","nodeType":"VariableDeclaration","scope":4576,"src":"9283:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:11"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4576,"src":"9321:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4553,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:11"},"scope":5866,"src":"9264:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4603,"nodeType":"Block","src":"9839:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"9853:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4586,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:11","memberName":"max","nodeType":"MemberAccess","src":"9861:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4597,"nodeType":"IfStatement","src":"9849:105:11","trueBody":{"id":4596,"nodeType":"Block","src":"9880:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"9937:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4591,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"9901:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4595,"nodeType":"RevertStatement","src":"9894:49:11"}]}},{"expression":{"arguments":[{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"9978:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4598,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:11","typeDescriptions":{}}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4583,"id":4602,"nodeType":"Return","src":"9963:21:11"}]},"documentation":{"id":4577,"nodeType":"StructuredDocumentation","src":"9488:280:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4604,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:11","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"value","nameLocation":"9800:5:11","nodeType":"VariableDeclaration","scope":4604,"src":"9792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:11"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4604,"src":"9830:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4581,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:11"},"scope":5866,"src":"9773:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4631,"nodeType":"Block","src":"10348:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4614,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4613,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:11","memberName":"max","nodeType":"MemberAccess","src":"10370:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4625,"nodeType":"IfStatement","src":"10358:105:11","trueBody":{"id":4624,"nodeType":"Block","src":"10389:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10446:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4619,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10410:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4623,"nodeType":"RevertStatement","src":"10403:49:11"}]}},{"expression":{"arguments":[{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"10487:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4626,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:11","typeDescriptions":{}}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4611,"id":4630,"nodeType":"Return","src":"10472:21:11"}]},"documentation":{"id":4605,"nodeType":"StructuredDocumentation","src":"9997:280:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:11","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"value","nameLocation":"10309:5:11","nodeType":"VariableDeclaration","scope":4632,"src":"10301:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:11"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4632,"src":"10339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4609,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:11"},"scope":5866,"src":"10282:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4659,"nodeType":"Block","src":"10857:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"10871:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4642,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:11","memberName":"max","nodeType":"MemberAccess","src":"10879:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4653,"nodeType":"IfStatement","src":"10867:105:11","trueBody":{"id":4652,"nodeType":"Block","src":"10898:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"10955:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4647,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"10919:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"RevertStatement","src":"10912:49:11"}]}},{"expression":{"arguments":[{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"10996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4654,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:11","typeDescriptions":{}}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4639,"id":4658,"nodeType":"Return","src":"10981:21:11"}]},"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"10506:280:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4660,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:11","nodeType":"FunctionDefinition","parameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"value","nameLocation":"10818:5:11","nodeType":"VariableDeclaration","scope":4660,"src":"10810:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:11"},"returnParameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4660,"src":"10848:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4637,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:11"},"scope":5866,"src":"10791:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4687,"nodeType":"Block","src":"11360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"11374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4670,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:11","memberName":"max","nodeType":"MemberAccess","src":"11382:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4681,"nodeType":"IfStatement","src":"11370:103:11","trueBody":{"id":4680,"nodeType":"Block","src":"11400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"11456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4675,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4679,"nodeType":"RevertStatement","src":"11414:48:11"}]}},{"expression":{"arguments":[{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"11496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4682,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:11","typeDescriptions":{}}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4667,"id":4686,"nodeType":"Return","src":"11482:20:11"}]},"documentation":{"id":4661,"nodeType":"StructuredDocumentation","src":"11015:276:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4688,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"value","nameLocation":"11322:5:11","nodeType":"VariableDeclaration","scope":4688,"src":"11314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:11"},"returnParameters":{"id":4667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4688,"src":"11352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4665,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:11"},"scope":5866,"src":"11296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4715,"nodeType":"Block","src":"11860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"11874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4698,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4697,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:11","memberName":"max","nodeType":"MemberAccess","src":"11882:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4709,"nodeType":"IfStatement","src":"11870:103:11","trueBody":{"id":4708,"nodeType":"Block","src":"11900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"11956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4703,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"11921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4707,"nodeType":"RevertStatement","src":"11914:48:11"}]}},{"expression":{"arguments":[{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4710,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:11","typeDescriptions":{}}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4695,"id":4714,"nodeType":"Return","src":"11982:20:11"}]},"documentation":{"id":4689,"nodeType":"StructuredDocumentation","src":"11515:276:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"value","nameLocation":"11822:5:11","nodeType":"VariableDeclaration","scope":4716,"src":"11814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:11"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4716,"src":"11852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4693,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:11"},"scope":5866,"src":"11796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4743,"nodeType":"Block","src":"12360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"12374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4726,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4725,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:11","memberName":"max","nodeType":"MemberAccess","src":"12382:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4737,"nodeType":"IfStatement","src":"12370:103:11","trueBody":{"id":4736,"nodeType":"Block","src":"12400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"12456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4731,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"12421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4735,"nodeType":"RevertStatement","src":"12414:48:11"}]}},{"expression":{"arguments":[{"id":4740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"12496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4738,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:11","typeDescriptions":{}}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4723,"id":4742,"nodeType":"Return","src":"12482:20:11"}]},"documentation":{"id":4717,"nodeType":"StructuredDocumentation","src":"12015:276:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4744,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"value","nameLocation":"12322:5:11","nodeType":"VariableDeclaration","scope":4744,"src":"12314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:11"},"returnParameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4744,"src":"12352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4721,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:11"},"scope":5866,"src":"12296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4771,"nodeType":"Block","src":"12860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"12874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4754,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4753,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:11","memberName":"max","nodeType":"MemberAccess","src":"12882:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4765,"nodeType":"IfStatement","src":"12870:103:11","trueBody":{"id":4764,"nodeType":"Block","src":"12900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"12956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4759,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"12921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4763,"nodeType":"RevertStatement","src":"12914:48:11"}]}},{"expression":{"arguments":[{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"12996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4766,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:11","typeDescriptions":{}}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4751,"id":4770,"nodeType":"Return","src":"12982:20:11"}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"12515:276:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4772,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"value","nameLocation":"12822:5:11","nodeType":"VariableDeclaration","scope":4772,"src":"12814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:11"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4772,"src":"12852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4749,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:11"},"scope":5866,"src":"12796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4799,"nodeType":"Block","src":"13360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"13374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4782,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:11","memberName":"max","nodeType":"MemberAccess","src":"13382:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4793,"nodeType":"IfStatement","src":"13370:103:11","trueBody":{"id":4792,"nodeType":"Block","src":"13400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"13456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4787,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"13421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4791,"nodeType":"RevertStatement","src":"13414:48:11"}]}},{"expression":{"arguments":[{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"13496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4794,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:11","typeDescriptions":{}}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4779,"id":4798,"nodeType":"Return","src":"13482:20:11"}]},"documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"13015:276:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4800,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"value","nameLocation":"13322:5:11","nodeType":"VariableDeclaration","scope":4800,"src":"13314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4774,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:11"},"returnParameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4800,"src":"13352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4777,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:11"},"scope":5866,"src":"13296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4827,"nodeType":"Block","src":"13860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"13874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4810,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:11","memberName":"max","nodeType":"MemberAccess","src":"13882:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4821,"nodeType":"IfStatement","src":"13870:103:11","trueBody":{"id":4820,"nodeType":"Block","src":"13900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"13956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4815,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"13921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"RevertStatement","src":"13914:48:11"}]}},{"expression":{"arguments":[{"id":4824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"13996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4822,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:11","typeDescriptions":{}}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4807,"id":4826,"nodeType":"Return","src":"13982:20:11"}]},"documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"13515:276:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4828,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"value","nameLocation":"13822:5:11","nodeType":"VariableDeclaration","scope":4828,"src":"13814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:11"},"returnParameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4828,"src":"13852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4805,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:11"},"scope":5866,"src":"13796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4855,"nodeType":"Block","src":"14360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"14374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4838,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:11","memberName":"max","nodeType":"MemberAccess","src":"14382:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4849,"nodeType":"IfStatement","src":"14370:103:11","trueBody":{"id":4848,"nodeType":"Block","src":"14400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"14456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4843,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"14421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4847,"nodeType":"RevertStatement","src":"14414:48:11"}]}},{"expression":{"arguments":[{"id":4852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"14496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4850,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:11","typeDescriptions":{}}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4835,"id":4854,"nodeType":"Return","src":"14482:20:11"}]},"documentation":{"id":4829,"nodeType":"StructuredDocumentation","src":"14015:276:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4856,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"value","nameLocation":"14322:5:11","nodeType":"VariableDeclaration","scope":4856,"src":"14314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:11"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4856,"src":"14352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4833,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:11"},"scope":5866,"src":"14296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4883,"nodeType":"Block","src":"14860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"14874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4866,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4865,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:11","memberName":"max","nodeType":"MemberAccess","src":"14882:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4877,"nodeType":"IfStatement","src":"14870:103:11","trueBody":{"id":4876,"nodeType":"Block","src":"14900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"14956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4871,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"14921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4875,"nodeType":"RevertStatement","src":"14914:48:11"}]}},{"expression":{"arguments":[{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"14996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4878,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:11","typeDescriptions":{}}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4863,"id":4882,"nodeType":"Return","src":"14982:20:11"}]},"documentation":{"id":4857,"nodeType":"StructuredDocumentation","src":"14515:276:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"value","nameLocation":"14822:5:11","nodeType":"VariableDeclaration","scope":4884,"src":"14814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:11"},"returnParameters":{"id":4863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4884,"src":"14852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4861,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:11"},"scope":5866,"src":"14796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4911,"nodeType":"Block","src":"15360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"15374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4894,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:11","memberName":"max","nodeType":"MemberAccess","src":"15382:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4905,"nodeType":"IfStatement","src":"15370:103:11","trueBody":{"id":4904,"nodeType":"Block","src":"15400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"15456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4899,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"15421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4903,"nodeType":"RevertStatement","src":"15414:48:11"}]}},{"expression":{"arguments":[{"id":4908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"15496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4906,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:11","typeDescriptions":{}}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4891,"id":4910,"nodeType":"Return","src":"15482:20:11"}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"15015:276:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4912,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"value","nameLocation":"15322:5:11","nodeType":"VariableDeclaration","scope":4912,"src":"15314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4886,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:11"},"returnParameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4912,"src":"15352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4889,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:11"},"scope":5866,"src":"15296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4939,"nodeType":"Block","src":"15860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"15874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4922,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4921,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:11","memberName":"max","nodeType":"MemberAccess","src":"15882:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4933,"nodeType":"IfStatement","src":"15870:103:11","trueBody":{"id":4932,"nodeType":"Block","src":"15900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"15956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4927,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"15921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4931,"nodeType":"RevertStatement","src":"15914:48:11"}]}},{"expression":{"arguments":[{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"15996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4934,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:11","typeDescriptions":{}}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4919,"id":4938,"nodeType":"Return","src":"15982:20:11"}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"15515:276:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4940,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:11","nodeType":"FunctionDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"value","nameLocation":"15822:5:11","nodeType":"VariableDeclaration","scope":4940,"src":"15814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:11"},"returnParameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4940,"src":"15852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4917,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:11"},"scope":5866,"src":"15796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4967,"nodeType":"Block","src":"16360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"16374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4950,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4949,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:11","memberName":"max","nodeType":"MemberAccess","src":"16382:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4961,"nodeType":"IfStatement","src":"16370:103:11","trueBody":{"id":4960,"nodeType":"Block","src":"16400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"16456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4955,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"16421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4959,"nodeType":"RevertStatement","src":"16414:48:11"}]}},{"expression":{"arguments":[{"id":4964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"16496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4962,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:11","typeDescriptions":{}}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4947,"id":4966,"nodeType":"Return","src":"16482:20:11"}]},"documentation":{"id":4941,"nodeType":"StructuredDocumentation","src":"16015:276:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4968,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:11","nodeType":"FunctionDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"value","nameLocation":"16322:5:11","nodeType":"VariableDeclaration","scope":4968,"src":"16314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:11"},"returnParameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4968,"src":"16352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4945,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:11"},"scope":5866,"src":"16296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4995,"nodeType":"Block","src":"16854:146:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"16868:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4978,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4977,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:11","memberName":"max","nodeType":"MemberAccess","src":"16876:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"nodeType":"IfStatement","src":"16864:101:11","trueBody":{"id":4988,"nodeType":"Block","src":"16893:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"16948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4983,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"16914:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4987,"nodeType":"RevertStatement","src":"16907:47:11"}]}},{"expression":{"arguments":[{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"16987:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4990,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:11","typeDescriptions":{}}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4975,"id":4994,"nodeType":"Return","src":"16974:19:11"}]},"documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"16515:272:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4996,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:11","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"value","nameLocation":"16817:5:11","nodeType":"VariableDeclaration","scope":4996,"src":"16809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:11"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4996,"src":"16847:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4973,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:11"},"scope":5866,"src":"16792:208:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"17236:128:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17250:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5012,"nodeType":"IfStatement","src":"17246:81:11","trueBody":{"id":5011,"nodeType":"Block","src":"17261:66:11","statements":[{"errorCall":{"arguments":[{"id":5008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17310:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5007,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"17282:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5010,"nodeType":"RevertStatement","src":"17275:41:11"}]}},{"expression":{"arguments":[{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"17351:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:11","typeDescriptions":{}}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5003,"id":5017,"nodeType":"Return","src":"17336:21:11"}]},"documentation":{"id":4997,"nodeType":"StructuredDocumentation","src":"17006:160:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:11","nodeType":"FunctionDefinition","parameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"value","nameLocation":"17197:5:11","nodeType":"VariableDeclaration","scope":5019,"src":"17190:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4998,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:11"},"returnParameters":{"id":5003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5019,"src":"17227:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:11"},"scope":5866,"src":"17171:193:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5044,"nodeType":"Block","src":"17761:150:11","statements":[{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"17771:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"17791:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5028,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:11","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5033,"nodeType":"ExpressionStatement","src":"17771:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"17811:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"17825:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"17807:98:11","trueBody":{"id":5042,"nodeType":"Block","src":"17832:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"17888:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"17853:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5041,"nodeType":"RevertStatement","src":"17846:48:11"}]}}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"17370:312:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:11","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"17712:5:11","nodeType":"VariableDeclaration","scope":5045,"src":"17705:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5021,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:11"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:11","nodeType":"VariableDeclaration","scope":5045,"src":"17742:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5024,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:11"},"scope":5866,"src":"17687:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5070,"nodeType":"Block","src":"18308:150:11","statements":[{"expression":{"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"18318:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"18338:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5054,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:11","typeDescriptions":{}}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5059,"nodeType":"ExpressionStatement","src":"18318:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"18358:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"18372:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"18354:98:11","trueBody":{"id":5068,"nodeType":"Block","src":"18379:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"18435:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"18400:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"RevertStatement","src":"18393:48:11"}]}}]},"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"17917:312:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:11","nodeType":"FunctionDefinition","parameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"value","nameLocation":"18259:5:11","nodeType":"VariableDeclaration","scope":5071,"src":"18252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5047,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:11"},"returnParameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:11","nodeType":"VariableDeclaration","scope":5071,"src":"18289:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5050,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:11"},"scope":5866,"src":"18234:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"18855:150:11","statements":[{"expression":{"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"18865:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"18885:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5080,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:11","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5085,"nodeType":"ExpressionStatement","src":"18865:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"18905:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"18919:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5095,"nodeType":"IfStatement","src":"18901:98:11","trueBody":{"id":5094,"nodeType":"Block","src":"18926:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"18982:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"18947:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5093,"nodeType":"RevertStatement","src":"18940:48:11"}]}}]},"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"18464:312:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:11","nodeType":"FunctionDefinition","parameters":{"id":5075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"value","nameLocation":"18806:5:11","nodeType":"VariableDeclaration","scope":5097,"src":"18799:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5073,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:11"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5077,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:11","nodeType":"VariableDeclaration","scope":5097,"src":"18836:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5076,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:11"},"scope":5866,"src":"18781:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5122,"nodeType":"Block","src":"19402:150:11","statements":[{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"19412:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"19432:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5106,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:11","typeDescriptions":{}}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5111,"nodeType":"ExpressionStatement","src":"19412:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"19452:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"19466:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5121,"nodeType":"IfStatement","src":"19448:98:11","trueBody":{"id":5120,"nodeType":"Block","src":"19473:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"19529:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"19494:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5119,"nodeType":"RevertStatement","src":"19487:48:11"}]}}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"19011:312:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:11","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"value","nameLocation":"19353:5:11","nodeType":"VariableDeclaration","scope":5123,"src":"19346:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5099,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:11"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:11","nodeType":"VariableDeclaration","scope":5123,"src":"19383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5102,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:11"},"scope":5866,"src":"19328:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5148,"nodeType":"Block","src":"19949:150:11","statements":[{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"19959:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"19979:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5132,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:11","typeDescriptions":{}}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5137,"nodeType":"ExpressionStatement","src":"19959:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"19999:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"20013:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5147,"nodeType":"IfStatement","src":"19995:98:11","trueBody":{"id":5146,"nodeType":"Block","src":"20020:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"20076:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"20041:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5145,"nodeType":"RevertStatement","src":"20034:48:11"}]}}]},"documentation":{"id":5124,"nodeType":"StructuredDocumentation","src":"19558:312:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:11","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"value","nameLocation":"19900:5:11","nodeType":"VariableDeclaration","scope":5149,"src":"19893:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5125,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:11"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:11","nodeType":"VariableDeclaration","scope":5149,"src":"19930:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5128,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:11"},"scope":5866,"src":"19875:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"20496:150:11","statements":[{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"20506:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"20526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5158,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:11","typeDescriptions":{}}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5163,"nodeType":"ExpressionStatement","src":"20506:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5155,"src":"20546:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"20560:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5173,"nodeType":"IfStatement","src":"20542:98:11","trueBody":{"id":5172,"nodeType":"Block","src":"20567:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"20623:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"20588:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5171,"nodeType":"RevertStatement","src":"20581:48:11"}]}}]},"documentation":{"id":5150,"nodeType":"StructuredDocumentation","src":"20105:312:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:11","nodeType":"FunctionDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"value","nameLocation":"20447:5:11","nodeType":"VariableDeclaration","scope":5175,"src":"20440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5151,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:11"},"returnParameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:11","nodeType":"VariableDeclaration","scope":5175,"src":"20477:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5154,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:11"},"scope":5866,"src":"20422:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5200,"nodeType":"Block","src":"21043:150:11","statements":[{"expression":{"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"21053:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"21073:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5184,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:11","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5189,"nodeType":"ExpressionStatement","src":"21053:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"21093:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"21107:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"21089:98:11","trueBody":{"id":5198,"nodeType":"Block","src":"21114:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"21170:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"21135:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5197,"nodeType":"RevertStatement","src":"21128:48:11"}]}}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"20652:312:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:11","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"20994:5:11","nodeType":"VariableDeclaration","scope":5201,"src":"20987:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5177,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:11"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:11","nodeType":"VariableDeclaration","scope":5201,"src":"21024:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5180,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:11"},"scope":5866,"src":"20969:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"21590:150:11","statements":[{"expression":{"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"21600:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21620:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5210,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:11","typeDescriptions":{}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5215,"nodeType":"ExpressionStatement","src":"21600:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"21640:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21654:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"21636:98:11","trueBody":{"id":5224,"nodeType":"Block","src":"21661:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21717:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"21682:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5223,"nodeType":"RevertStatement","src":"21675:48:11"}]}}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"21199:312:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:11","nodeType":"FunctionDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"value","nameLocation":"21541:5:11","nodeType":"VariableDeclaration","scope":5227,"src":"21534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5203,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:11"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:11","nodeType":"VariableDeclaration","scope":5227,"src":"21571:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5206,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:11"},"scope":5866,"src":"21516:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5252,"nodeType":"Block","src":"22137:150:11","statements":[{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"22147:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22167:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5236,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:11","typeDescriptions":{}}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5241,"nodeType":"ExpressionStatement","src":"22147:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"22187:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22201:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5251,"nodeType":"IfStatement","src":"22183:98:11","trueBody":{"id":5250,"nodeType":"Block","src":"22208:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"22264:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"22229:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5249,"nodeType":"RevertStatement","src":"22222:48:11"}]}}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"21746:312:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:11","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"value","nameLocation":"22088:5:11","nodeType":"VariableDeclaration","scope":5253,"src":"22081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5229,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:11"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:11","nodeType":"VariableDeclaration","scope":5253,"src":"22118:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5232,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:11"},"scope":5866,"src":"22063:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"22684:150:11","statements":[{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"22694:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"22714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5262,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:11","typeDescriptions":{}}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5267,"nodeType":"ExpressionStatement","src":"22694:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"22734:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"22748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5277,"nodeType":"IfStatement","src":"22730:98:11","trueBody":{"id":5276,"nodeType":"Block","src":"22755:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"22811:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"22776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5275,"nodeType":"RevertStatement","src":"22769:48:11"}]}}]},"documentation":{"id":5254,"nodeType":"StructuredDocumentation","src":"22293:312:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:11","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"value","nameLocation":"22635:5:11","nodeType":"VariableDeclaration","scope":5279,"src":"22628:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5255,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:11"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:11","nodeType":"VariableDeclaration","scope":5279,"src":"22665:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5258,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:11"},"scope":5866,"src":"22610:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5304,"nodeType":"Block","src":"23231:150:11","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"23241:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"23261:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5288,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:11","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5293,"nodeType":"ExpressionStatement","src":"23241:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"23281:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"23295:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"nodeType":"IfStatement","src":"23277:98:11","trueBody":{"id":5302,"nodeType":"Block","src":"23302:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"23358:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"23323:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"RevertStatement","src":"23316:48:11"}]}}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"22840:312:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:11","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"value","nameLocation":"23182:5:11","nodeType":"VariableDeclaration","scope":5305,"src":"23175:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5281,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:11"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:11","nodeType":"VariableDeclaration","scope":5305,"src":"23212:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5284,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:11"},"scope":5866,"src":"23157:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"23778:150:11","statements":[{"expression":{"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"23788:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"23808:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5314,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:11","typeDescriptions":{}}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5319,"nodeType":"ExpressionStatement","src":"23788:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"23828:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"23842:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"nodeType":"IfStatement","src":"23824:98:11","trueBody":{"id":5328,"nodeType":"Block","src":"23849:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"23905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"23870:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5327,"nodeType":"RevertStatement","src":"23863:48:11"}]}}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"23387:312:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:11","nodeType":"FunctionDefinition","parameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"value","nameLocation":"23729:5:11","nodeType":"VariableDeclaration","scope":5331,"src":"23722:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5307,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:11"},"returnParameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:11","nodeType":"VariableDeclaration","scope":5331,"src":"23759:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5310,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:11"},"scope":5866,"src":"23704:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"24325:150:11","statements":[{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"24335:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"24355:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5340,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:11","typeDescriptions":{}}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5345,"nodeType":"ExpressionStatement","src":"24335:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"24375:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"24389:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"24371:98:11","trueBody":{"id":5354,"nodeType":"Block","src":"24396:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"24452:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"24417:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5353,"nodeType":"RevertStatement","src":"24410:48:11"}]}}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"23934:312:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:11","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"24276:5:11","nodeType":"VariableDeclaration","scope":5357,"src":"24269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5333,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:11"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:11","nodeType":"VariableDeclaration","scope":5357,"src":"24306:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5336,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:11"},"scope":5866,"src":"24251:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5382,"nodeType":"Block","src":"24872:150:11","statements":[{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"24882:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"24902:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5366,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:11","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5371,"nodeType":"ExpressionStatement","src":"24882:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5363,"src":"24922:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"24936:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5381,"nodeType":"IfStatement","src":"24918:98:11","trueBody":{"id":5380,"nodeType":"Block","src":"24943:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"24999:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"24964:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5379,"nodeType":"RevertStatement","src":"24957:48:11"}]}}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"24481:312:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:11","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"24823:5:11","nodeType":"VariableDeclaration","scope":5383,"src":"24816:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5359,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:11"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:11","nodeType":"VariableDeclaration","scope":5383,"src":"24853:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5362,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:11"},"scope":5866,"src":"24798:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5408,"nodeType":"Block","src":"25419:150:11","statements":[{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"25429:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"25449:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5392,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:11","typeDescriptions":{}}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5397,"nodeType":"ExpressionStatement","src":"25429:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"25469:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"25483:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"25465:98:11","trueBody":{"id":5406,"nodeType":"Block","src":"25490:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"25546:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"25511:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5405,"nodeType":"RevertStatement","src":"25504:48:11"}]}}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"25028:312:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:11","nodeType":"FunctionDefinition","parameters":{"id":5387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"value","nameLocation":"25370:5:11","nodeType":"VariableDeclaration","scope":5409,"src":"25363:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5385,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:11"},"returnParameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:11","nodeType":"VariableDeclaration","scope":5409,"src":"25400:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5388,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:11"},"scope":5866,"src":"25345:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5434,"nodeType":"Block","src":"25966:150:11","statements":[{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"25976:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"25996:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5418,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:11","typeDescriptions":{}}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5423,"nodeType":"ExpressionStatement","src":"25976:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"26016:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"26030:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"26012:98:11","trueBody":{"id":5432,"nodeType":"Block","src":"26037:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"26093:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"26058:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"RevertStatement","src":"26051:48:11"}]}}]},"documentation":{"id":5410,"nodeType":"StructuredDocumentation","src":"25575:312:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:11","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5412,"mutability":"mutable","name":"value","nameLocation":"25917:5:11","nodeType":"VariableDeclaration","scope":5435,"src":"25910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5411,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:11"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:11","nodeType":"VariableDeclaration","scope":5435,"src":"25947:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5414,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:11"},"scope":5866,"src":"25892:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"26513:150:11","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"26523:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"26543:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5444,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:11","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5449,"nodeType":"ExpressionStatement","src":"26523:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"26563:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"26577:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"26559:98:11","trueBody":{"id":5458,"nodeType":"Block","src":"26584:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"26640:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"26605:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"26598:48:11"}]}}]},"documentation":{"id":5436,"nodeType":"StructuredDocumentation","src":"26122:312:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:11","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5438,"mutability":"mutable","name":"value","nameLocation":"26464:5:11","nodeType":"VariableDeclaration","scope":5461,"src":"26457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5437,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:11"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:11","nodeType":"VariableDeclaration","scope":5461,"src":"26494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5440,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:11"},"scope":5866,"src":"26439:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5486,"nodeType":"Block","src":"27060:150:11","statements":[{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"27070:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"27090:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5470,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:11","typeDescriptions":{}}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5475,"nodeType":"ExpressionStatement","src":"27070:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"27110:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"27124:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5485,"nodeType":"IfStatement","src":"27106:98:11","trueBody":{"id":5484,"nodeType":"Block","src":"27131:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"27187:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"27152:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5483,"nodeType":"RevertStatement","src":"27145:48:11"}]}}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"26669:312:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:11","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"27011:5:11","nodeType":"VariableDeclaration","scope":5487,"src":"27004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5463,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:11"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:11","nodeType":"VariableDeclaration","scope":5487,"src":"27041:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5466,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:11"},"scope":5866,"src":"26986:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"27607:150:11","statements":[{"expression":{"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"27617:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"27637:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5496,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:11","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5501,"nodeType":"ExpressionStatement","src":"27617:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"27657:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"27671:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5511,"nodeType":"IfStatement","src":"27653:98:11","trueBody":{"id":5510,"nodeType":"Block","src":"27678:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"27734:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"27699:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5509,"nodeType":"RevertStatement","src":"27692:48:11"}]}}]},"documentation":{"id":5488,"nodeType":"StructuredDocumentation","src":"27216:312:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:11","nodeType":"FunctionDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"value","nameLocation":"27558:5:11","nodeType":"VariableDeclaration","scope":5513,"src":"27551:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5489,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:11"},"returnParameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:11","nodeType":"VariableDeclaration","scope":5513,"src":"27588:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5492,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:11"},"scope":5866,"src":"27533:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"28147:148:11","statements":[{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"28157:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"28176:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5522,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:11","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5527,"nodeType":"ExpressionStatement","src":"28157:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"28196:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"28210:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5537,"nodeType":"IfStatement","src":"28192:97:11","trueBody":{"id":5536,"nodeType":"Block","src":"28217:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"28272:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"28238:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"RevertStatement","src":"28231:47:11"}]}}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"27763:307:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:11","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"28099:5:11","nodeType":"VariableDeclaration","scope":5539,"src":"28092:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5515,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:11"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:11","nodeType":"VariableDeclaration","scope":5539,"src":"28129:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5518,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:11"},"scope":5866,"src":"28075:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5564,"nodeType":"Block","src":"28685:148:11","statements":[{"expression":{"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"28695:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"28714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5548,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:11","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5553,"nodeType":"ExpressionStatement","src":"28695:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"28734:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"28748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5563,"nodeType":"IfStatement","src":"28730:97:11","trueBody":{"id":5562,"nodeType":"Block","src":"28755:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"28810:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"28776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5561,"nodeType":"RevertStatement","src":"28769:47:11"}]}}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"28301:307:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:11","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"28637:5:11","nodeType":"VariableDeclaration","scope":5565,"src":"28630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5541,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:11"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:11","nodeType":"VariableDeclaration","scope":5565,"src":"28667:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5544,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:11"},"scope":5866,"src":"28613:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"29223:148:11","statements":[{"expression":{"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"29233:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"29252:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5574,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:11","typeDescriptions":{}}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5579,"nodeType":"ExpressionStatement","src":"29233:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"29272:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"29286:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"29268:97:11","trueBody":{"id":5588,"nodeType":"Block","src":"29293:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"29348:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"29314:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"29307:47:11"}]}}]},"documentation":{"id":5566,"nodeType":"StructuredDocumentation","src":"28839:307:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:11","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"value","nameLocation":"29175:5:11","nodeType":"VariableDeclaration","scope":5591,"src":"29168:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5567,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:11"},"returnParameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:11","nodeType":"VariableDeclaration","scope":5591,"src":"29205:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5570,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:11"},"scope":5866,"src":"29151:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"29761:148:11","statements":[{"expression":{"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"29771:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"29790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5600,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:11","typeDescriptions":{}}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5605,"nodeType":"ExpressionStatement","src":"29771:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"29810:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"29824:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"29806:97:11","trueBody":{"id":5614,"nodeType":"Block","src":"29831:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"29886:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"29852:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"RevertStatement","src":"29845:47:11"}]}}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"29377:307:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:11","nodeType":"FunctionDefinition","parameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"value","nameLocation":"29713:5:11","nodeType":"VariableDeclaration","scope":5617,"src":"29706:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5593,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:11"},"returnParameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:11","nodeType":"VariableDeclaration","scope":5617,"src":"29743:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5596,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:11"},"scope":5866,"src":"29689:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"30299:148:11","statements":[{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"30309:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"30328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5626,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:11","typeDescriptions":{}}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5631,"nodeType":"ExpressionStatement","src":"30309:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"30348:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5641,"nodeType":"IfStatement","src":"30344:97:11","trueBody":{"id":5640,"nodeType":"Block","src":"30369:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"30424:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"30390:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5639,"nodeType":"RevertStatement","src":"30383:47:11"}]}}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"29915:307:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:11","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"value","nameLocation":"30251:5:11","nodeType":"VariableDeclaration","scope":5643,"src":"30244:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5619,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:11"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:11","nodeType":"VariableDeclaration","scope":5643,"src":"30281:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5622,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:11"},"scope":5866,"src":"30227:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5668,"nodeType":"Block","src":"30837:148:11","statements":[{"expression":{"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5651,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"30847:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"30866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5652,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:11","typeDescriptions":{}}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5657,"nodeType":"ExpressionStatement","src":"30847:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"30886:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"30900:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5667,"nodeType":"IfStatement","src":"30882:97:11","trueBody":{"id":5666,"nodeType":"Block","src":"30907:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5646,"src":"30962:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5661,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"30928:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5665,"nodeType":"RevertStatement","src":"30921:47:11"}]}}]},"documentation":{"id":5644,"nodeType":"StructuredDocumentation","src":"30453:307:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5669,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:11","nodeType":"FunctionDefinition","parameters":{"id":5647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5646,"mutability":"mutable","name":"value","nameLocation":"30789:5:11","nodeType":"VariableDeclaration","scope":5669,"src":"30782:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5645,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:11"},"returnParameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:11","nodeType":"VariableDeclaration","scope":5669,"src":"30819:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5648,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:11"},"scope":5866,"src":"30765:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5694,"nodeType":"Block","src":"31375:148:11","statements":[{"expression":{"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5677,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"31385:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"31404:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5678,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:11","typeDescriptions":{}}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5683,"nodeType":"ExpressionStatement","src":"31385:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5675,"src":"31424:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"31438:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5693,"nodeType":"IfStatement","src":"31420:97:11","trueBody":{"id":5692,"nodeType":"Block","src":"31445:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"31500:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5687,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"31466:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5691,"nodeType":"RevertStatement","src":"31459:47:11"}]}}]},"documentation":{"id":5670,"nodeType":"StructuredDocumentation","src":"30991:307:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:11","nodeType":"FunctionDefinition","parameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"value","nameLocation":"31327:5:11","nodeType":"VariableDeclaration","scope":5695,"src":"31320:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5671,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:11"},"returnParameters":{"id":5676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5675,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:11","nodeType":"VariableDeclaration","scope":5695,"src":"31357:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5674,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:11"},"scope":5866,"src":"31303:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"31913:148:11","statements":[{"expression":{"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5703,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"31923:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"31942:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5704,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:11","typeDescriptions":{}}},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5709,"nodeType":"ExpressionStatement","src":"31923:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"31962:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"31976:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"31958:97:11","trueBody":{"id":5718,"nodeType":"Block","src":"31983:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"32038:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5713,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"32004:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"RevertStatement","src":"31997:47:11"}]}}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"31529:307:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:11","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"31865:5:11","nodeType":"VariableDeclaration","scope":5721,"src":"31858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5697,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:11"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:11","nodeType":"VariableDeclaration","scope":5721,"src":"31895:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5700,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:11"},"scope":5866,"src":"31841:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5746,"nodeType":"Block","src":"32451:148:11","statements":[{"expression":{"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5729,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"32461:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"32480:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5730,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:11","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5735,"nodeType":"ExpressionStatement","src":"32461:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5736,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"32500:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"32514:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5745,"nodeType":"IfStatement","src":"32496:97:11","trueBody":{"id":5744,"nodeType":"Block","src":"32521:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"32576:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5739,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"32542:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5743,"nodeType":"RevertStatement","src":"32535:47:11"}]}}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"32067:307:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5747,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:11","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"32403:5:11","nodeType":"VariableDeclaration","scope":5747,"src":"32396:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5723,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:11"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:11","nodeType":"VariableDeclaration","scope":5747,"src":"32433:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5726,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:11"},"scope":5866,"src":"32379:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5772,"nodeType":"Block","src":"32989:148:11","statements":[{"expression":{"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"32999:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"33018:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5756,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:11","typeDescriptions":{}}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5761,"nodeType":"ExpressionStatement","src":"32999:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"33038:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"33052:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5771,"nodeType":"IfStatement","src":"33034:97:11","trueBody":{"id":5770,"nodeType":"Block","src":"33059:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"33114:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5765,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"33080:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5769,"nodeType":"RevertStatement","src":"33073:47:11"}]}}]},"documentation":{"id":5748,"nodeType":"StructuredDocumentation","src":"32605:307:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5773,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:11","nodeType":"FunctionDefinition","parameters":{"id":5751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5750,"mutability":"mutable","name":"value","nameLocation":"32941:5:11","nodeType":"VariableDeclaration","scope":5773,"src":"32934:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5749,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:11"},"returnParameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:11","nodeType":"VariableDeclaration","scope":5773,"src":"32971:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5752,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:11"},"scope":5866,"src":"32917:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5798,"nodeType":"Block","src":"33527:148:11","statements":[{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"33537:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"33556:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5782,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:11","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5787,"nodeType":"ExpressionStatement","src":"33537:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5788,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"33576:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"33590:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5797,"nodeType":"IfStatement","src":"33572:97:11","trueBody":{"id":5796,"nodeType":"Block","src":"33597:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5776,"src":"33652:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5791,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"33618:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5795,"nodeType":"RevertStatement","src":"33611:47:11"}]}}]},"documentation":{"id":5774,"nodeType":"StructuredDocumentation","src":"33143:307:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:11","nodeType":"FunctionDefinition","parameters":{"id":5777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"value","nameLocation":"33479:5:11","nodeType":"VariableDeclaration","scope":5799,"src":"33472:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5775,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:11"},"returnParameters":{"id":5780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5779,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:11","nodeType":"VariableDeclaration","scope":5799,"src":"33509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5778,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:11"},"scope":5866,"src":"33455:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5824,"nodeType":"Block","src":"34058:146:11","statements":[{"expression":{"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"34068:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"34086:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5808,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:11","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5813,"nodeType":"ExpressionStatement","src":"34068:24:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"34106:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"34120:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5823,"nodeType":"IfStatement","src":"34102:96:11","trueBody":{"id":5822,"nodeType":"Block","src":"34127:71:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"34181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5817,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"34148:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5821,"nodeType":"RevertStatement","src":"34141:46:11"}]}}]},"documentation":{"id":5800,"nodeType":"StructuredDocumentation","src":"33681:302:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:11","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"value","nameLocation":"34011:5:11","nodeType":"VariableDeclaration","scope":5825,"src":"34004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5801,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:11"},"returnParameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:11","nodeType":"VariableDeclaration","scope":5825,"src":"34041:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5804,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:11"},"scope":5866,"src":"33988:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5854,"nodeType":"Block","src":"34444:250:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"34557:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5837,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:11","memberName":"max","nodeType":"MemberAccess","src":"34573:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:11","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5848,"nodeType":"IfStatement","src":"34553:105:11","trueBody":{"id":5847,"nodeType":"Block","src":"34592:66:11","statements":[{"errorCall":{"arguments":[{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"34641:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5843,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"34613:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5846,"nodeType":"RevertStatement","src":"34606:41:11"}]}},{"expression":{"arguments":[{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"34681:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5849,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:11","typeDescriptions":{}}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5832,"id":5853,"nodeType":"Return","src":"34667:20:11"}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"34210:165:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5855,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:11","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"34406:5:11","nodeType":"VariableDeclaration","scope":5855,"src":"34398:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:11"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5855,"src":"34436:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5830,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:11"},"scope":5866,"src":"34380:314:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5864,"nodeType":"Block","src":"34853:87:11","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:11","statements":[{"nodeType":"YulAssignment","src":"34902:22:11","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:11"},"nodeType":"YulFunctionCall","src":"34914:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:11"},"nodeType":"YulFunctionCall","src":"34907:17:11"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5858,"isOffset":false,"isSlot":false,"src":"34921:1:11","valueSize":1},{"declaration":5861,"isOffset":false,"isSlot":false,"src":"34902:1:11","valueSize":1}],"flags":["memory-safe"],"id":5863,"nodeType":"InlineAssembly","src":"34863:71:11"}]},"documentation":{"id":5856,"nodeType":"StructuredDocumentation","src":"34700:90:11","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5865,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:11","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"b","nameLocation":"34816:1:11","nodeType":"VariableDeclaration","scope":5865,"src":"34811:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5857,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:11"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"u","nameLocation":"34850:1:11","nodeType":"VariableDeclaration","scope":5865,"src":"34842:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:11"},"scope":5866,"src":"34795:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5867,"src":"769:34173:11","usedErrors":[4111,4116,4123,4128],"usedEvents":[]}],"src":"192:34751:11"},"id":11},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5866],"SignedMath":[6010]},"id":6011,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5868,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6011,"sourceUnit":5867,"src":"135:40:12","symbolAliases":[{"foreign":{"id":5869,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"143:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5871,"nodeType":"StructuredDocumentation","src":"177:80:12","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6010,"linearizedBaseContracts":[6010],"name":"SignedMath","nameLocation":"266:10:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":5900,"nodeType":"Block","src":"746:215:12","statements":[{"id":5899,"nodeType":"UncheckedBlock","src":"756:199:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5883,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"894:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"900:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"904:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5892,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"932:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5890,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"916:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5866_$","typeString":"type(library SafeCast)"}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5865,"src":"916:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5888,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:12","typeDescriptions":{}}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5882,"id":5898,"nodeType":"Return","src":"887:57:12"}]}]},"documentation":{"id":5872,"nodeType":"StructuredDocumentation","src":"283:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5901,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:12","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"condition","nameLocation":"684:9:12","nodeType":"VariableDeclaration","scope":5901,"src":"679:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5873,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5876,"mutability":"mutable","name":"a","nameLocation":"702:1:12","nodeType":"VariableDeclaration","scope":5901,"src":"695:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5875,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5878,"mutability":"mutable","name":"b","nameLocation":"712:1:12","nodeType":"VariableDeclaration","scope":5901,"src":"705:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5877,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:12"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5901,"src":"738:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5880,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:12"},"scope":6010,"src":"662:299:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5919,"nodeType":"Block","src":"1102:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"1127:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5913,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"1131:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"1134:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5916,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"1137:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5911,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"1119:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5910,"id":5918,"nodeType":"Return","src":"1112:27:12"}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"967:66:12","text":" @dev Returns the largest of two signed numbers."},"id":5920,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:12","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"a","nameLocation":"1058:1:12","nodeType":"VariableDeclaration","scope":5920,"src":"1051:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5903,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"b","nameLocation":"1068:1:12","nodeType":"VariableDeclaration","scope":5920,"src":"1061:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5905,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:12"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5920,"src":"1094:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5908,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:12"},"scope":6010,"src":"1038:108:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5938,"nodeType":"Block","src":"1288:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"1313:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"1317:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"1320:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"1323:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"1305:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5929,"id":5937,"nodeType":"Return","src":"1298:27:12"}]},"documentation":{"id":5921,"nodeType":"StructuredDocumentation","src":"1152:67:12","text":" @dev Returns the smallest of two signed numbers."},"id":5939,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:12","nodeType":"FunctionDefinition","parameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5923,"mutability":"mutable","name":"a","nameLocation":"1244:1:12","nodeType":"VariableDeclaration","scope":5939,"src":"1237:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5922,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5925,"mutability":"mutable","name":"b","nameLocation":"1254:1:12","nodeType":"VariableDeclaration","scope":5939,"src":"1247:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5924,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:12"},"returnParameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5939,"src":"1280:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5927,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:12"},"scope":6010,"src":"1224:108:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5982,"nodeType":"Block","src":"1537:162:12","statements":[{"assignments":[5950],"declarations":[{"constant":false,"id":5950,"mutability":"mutable","name":"x","nameLocation":"1606:1:12","nodeType":"VariableDeclaration","scope":5982,"src":"1599:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5949,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5963,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"1611:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"1615:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"1622:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5956,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"1626:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:12"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5964,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"1651:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5969,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"1671:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:12","typeDescriptions":{}}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5965,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:12","typeDescriptions":{}}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"1685:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5975,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"1689:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5948,"id":5981,"nodeType":"Return","src":"1644:48:12"}]},"documentation":{"id":5940,"nodeType":"StructuredDocumentation","src":"1338:126:12","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5983,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:12","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5942,"mutability":"mutable","name":"a","nameLocation":"1493:1:12","nodeType":"VariableDeclaration","scope":5983,"src":"1486:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5941,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5944,"mutability":"mutable","name":"b","nameLocation":"1503:1:12","nodeType":"VariableDeclaration","scope":5983,"src":"1496:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5943,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:12"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5983,"src":"1529:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5946,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:12"},"scope":6010,"src":"1469:230:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6008,"nodeType":"Block","src":"1843:767:12","statements":[{"id":6007,"nodeType":"UncheckedBlock","src":"1853:751:12","statements":[{"assignments":[5992],"declarations":[{"constant":false,"id":5992,"mutability":"mutable","name":"mask","nameLocation":"2424:4:12","nodeType":"VariableDeclaration","scope":6007,"src":"2417:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5991,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5996,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5993,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"2431:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5999,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"2576:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6000,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"2580:4:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6003,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5992,"src":"2588:4:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5997,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:12","typeDescriptions":{}}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5990,"id":6006,"nodeType":"Return","src":"2560:33:12"}]}]},"documentation":{"id":5984,"nodeType":"StructuredDocumentation","src":"1705:78:12","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6009,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:12","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"n","nameLocation":"1808:1:12","nodeType":"VariableDeclaration","scope":6009,"src":"1801:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5985,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:12"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6009,"src":"1834:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:12"},"scope":6010,"src":"1788:822:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6011,"src":"258:2354:12","usedErrors":[],"usedEvents":[]}],"src":"109:2504:12"},"id":12},"contracts/base/PolicyBase.sol":{"ast":{"absolutePath":"contracts/base/PolicyBase.sol","exportedSymbols":{"AccessControl":[295],"Context":[556],"ECDSA":[2358],"ERC165":[2468],"IAccessControl":[378],"InsuranceVault":[9290],"MessageHashUtils":[2444],"Ownable":[526],"PolicyBase":[7172],"Strings":[2010]},"id":7173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6012,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7173,"sourceUnit":296,"src":"59:58:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":6014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7173,"sourceUnit":2445,"src":"118:73:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/InsuranceVault.sol","file":"../utils/InsuranceVault.sol","id":6015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7173,"sourceUnit":9291,"src":"192:37:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6016,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7173,"sourceUnit":2359,"src":"230:62:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6018,"name":"AccessControl","nameLocations":["431:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"431:13:13"},"id":6019,"nodeType":"InheritanceSpecifier","src":"431:13:13"}],"canonicalName":"PolicyBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"294:105:13","text":"@title PolicyBase\n @notice Abstract base contract for insurance plans with signature verification"},"fullyImplemented":false,"id":7172,"linearizedBaseContracts":[7172,295,2468,2480,378,556],"name":"PolicyBase","nameLocation":"417:10:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6022,"libraryName":{"id":6020,"name":"MessageHashUtils","nameLocations":["457:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2444,"src":"457:16:13"},"nodeType":"UsingForDirective","src":"451:35:13","typeName":{"id":6021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"478:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"id":6025,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"559:12:13","nodeType":"VariableDeclaration","scope":7172,"src":"534:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6023,"name":"uint256","nodeType":"ElementaryTypeName","src":"534:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"574:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":6028,"mutability":"constant","name":"_ENTERED","nameLocation":"606:8:13","nodeType":"VariableDeclaration","scope":7172,"src":"581:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6026,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"617:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":6030,"mutability":"mutable","name":"_status","nameLocation":"640:7:13","nodeType":"VariableDeclaration","scope":7172,"src":"624:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6029,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"functionSelector":"75b238fc","id":6035,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"698:10:13","nodeType":"VariableDeclaration","scope":7172,"src":"674:60:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"674:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"721:12:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":6032,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"711:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"711:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"f74d5480","id":6037,"mutability":"mutable","name":"trustedSigner","nameLocation":"790:13:13","nodeType":"VariableDeclaration","scope":7172,"src":"775:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6036,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"fbfa77cf","id":6040,"mutability":"mutable","name":"vault","nameLocation":"876:5:13","nodeType":"VariableDeclaration","scope":7172,"src":"854:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"},"typeName":{"id":6039,"nodeType":"UserDefinedTypeName","pathNode":{"id":6038,"name":"InsuranceVault","nameLocations":["854:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":9290,"src":"854:14:13"},"referencedDeclaration":9290,"src":"854:14:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"visibility":"public"},{"constant":false,"functionSelector":"30d95b53","id":6043,"mutability":"mutable","name":"claimExpiryPeriod","nameLocation":"962:17:13","nodeType":"VariableDeclaration","scope":7172,"src":"947:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"947:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":6042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"982:6:13","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"canonicalName":"PolicyBase.Policy","id":6060,"members":[{"constant":false,"id":6045,"mutability":"mutable","name":"policyId","nameLocation":"1027:8:13","nodeType":"VariableDeclaration","scope":6060,"src":"1019:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1019:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6047,"mutability":"mutable","name":"owner","nameLocation":"1053:5:13","nodeType":"VariableDeclaration","scope":6060,"src":"1045:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6046,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6049,"mutability":"mutable","name":"premium","nameLocation":"1076:7:13","nodeType":"VariableDeclaration","scope":6060,"src":"1068:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6051,"mutability":"mutable","name":"sumAssured","nameLocation":"1101:10:13","nodeType":"VariableDeclaration","scope":6060,"src":"1093:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6053,"mutability":"mutable","name":"expiry","nameLocation":"1129:6:13","nodeType":"VariableDeclaration","scope":6060,"src":"1121:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"isActive","nameLocation":"1150:8:13","nodeType":"VariableDeclaration","scope":6060,"src":"1145:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6054,"name":"bool","nodeType":"ElementaryTypeName","src":"1145:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6057,"mutability":"mutable","name":"isClaimed","nameLocation":"1173:9:13","nodeType":"VariableDeclaration","scope":6060,"src":"1168:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6056,"name":"bool","nodeType":"ElementaryTypeName","src":"1168:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"createdAt","nameLocation":"1200:9:13","nodeType":"VariableDeclaration","scope":6060,"src":"1192:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1192:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Policy","nameLocation":"1002:6:13","nodeType":"StructDefinition","scope":7172,"src":"995:221:13","visibility":"public"},{"canonicalName":"PolicyBase.ClaimRequest","id":6071,"members":[{"constant":false,"id":6062,"mutability":"mutable","name":"policyId","nameLocation":"1260:8:13","nodeType":"VariableDeclaration","scope":6071,"src":"1252:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1252:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6064,"mutability":"mutable","name":"amount","nameLocation":"1286:6:13","nodeType":"VariableDeclaration","scope":6071,"src":"1278:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6066,"mutability":"mutable","name":"isPending","nameLocation":"1307:9:13","nodeType":"VariableDeclaration","scope":6071,"src":"1302:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6065,"name":"bool","nodeType":"ElementaryTypeName","src":"1302:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"createdAt","nameLocation":"1334:9:13","nodeType":"VariableDeclaration","scope":6071,"src":"1326:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6070,"mutability":"mutable","name":"expiryTimestamp","nameLocation":"1361:15:13","nodeType":"VariableDeclaration","scope":6071,"src":"1353:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1353:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ClaimRequest","nameLocation":"1229:12:13","nodeType":"StructDefinition","scope":7172,"src":"1222:161:13","visibility":"public"},{"constant":false,"id":6076,"mutability":"mutable","name":"policies","nameLocation":"1425:8:13","nodeType":"VariableDeclaration","scope":7172,"src":"1389:44:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy)"},"typeName":{"id":6075,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1397:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1389:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6074,"nodeType":"UserDefinedTypeName","pathNode":{"id":6073,"name":"Policy","nameLocations":["1408:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"1408:6:13"},"referencedDeclaration":6060,"src":"1408:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}}},"visibility":"internal"},{"constant":false,"id":6081,"mutability":"mutable","name":"claims","nameLocation":"1481:6:13","nodeType":"VariableDeclaration","scope":7172,"src":"1439:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest)"},"typeName":{"id":6080,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1447:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1439:32:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6079,"nodeType":"UserDefinedTypeName","pathNode":{"id":6078,"name":"ClaimRequest","nameLocations":["1458:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"1458:12:13"},"referencedDeclaration":6071,"src":"1458:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}}},"visibility":"internal"},{"constant":false,"id":6085,"mutability":"mutable","name":"usedSignatures","nameLocation":"1527:14:13","nodeType":"VariableDeclaration","scope":7172,"src":"1493:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":6084,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1501:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1493:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6083,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"anonymous":false,"eventSelector":"105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff","id":6097,"name":"PolicyPurchased","nameLocation":"1572:15:13","nodeType":"EventDefinition","parameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1604:8:13","nodeType":"VariableDeclaration","scope":6097,"src":"1588:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1588:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6089,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1630:5:13","nodeType":"VariableDeclaration","scope":6097,"src":"1614:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6088,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6091,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"1645:7:13","nodeType":"VariableDeclaration","scope":6097,"src":"1637:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6093,"indexed":false,"mutability":"mutable","name":"sumAssured","nameLocation":"1662:10:13","nodeType":"VariableDeclaration","scope":6097,"src":"1654:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"1654:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6095,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"1682:6:13","nodeType":"VariableDeclaration","scope":6097,"src":"1674:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1587:102:13"},"src":"1566:124:13"},{"anonymous":false,"eventSelector":"cb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f1","id":6105,"name":"ClaimFiled","nameLocation":"1701:10:13","nodeType":"EventDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1728:8:13","nodeType":"VariableDeclaration","scope":6105,"src":"1712:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6101,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1754:5:13","nodeType":"VariableDeclaration","scope":6105,"src":"1738:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6100,"name":"address","nodeType":"ElementaryTypeName","src":"1738:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6103,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1769:6:13","nodeType":"VariableDeclaration","scope":6105,"src":"1761:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1711:65:13"},"src":"1695:82:13"},{"anonymous":false,"eventSelector":"636494174e4a0f872de31b104ec14fb50edb1bdc4b1db9f006eaa68a61610f9c","id":6113,"name":"ClaimApproved","nameLocation":"1788:13:13","nodeType":"EventDefinition","parameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6107,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1818:8:13","nodeType":"VariableDeclaration","scope":6113,"src":"1802:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1802:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6109,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1844:5:13","nodeType":"VariableDeclaration","scope":6113,"src":"1828:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6108,"name":"address","nodeType":"ElementaryTypeName","src":"1828:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6111,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1859:6:13","nodeType":"VariableDeclaration","scope":6113,"src":"1851:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1801:65:13"},"src":"1782:85:13"},{"anonymous":false,"eventSelector":"ae2eb9a5ff7e26865940377aafb8a569997727d3bc48028ed88199eed260087f","id":6121,"name":"PolicyCancelled","nameLocation":"1878:15:13","nodeType":"EventDefinition","parameters":{"id":6120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1910:8:13","nodeType":"VariableDeclaration","scope":6121,"src":"1894:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6117,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1936:5:13","nodeType":"VariableDeclaration","scope":6121,"src":"1920:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6116,"name":"address","nodeType":"ElementaryTypeName","src":"1920:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6119,"indexed":false,"mutability":"mutable","name":"refundAmount","nameLocation":"1951:12:13","nodeType":"VariableDeclaration","scope":6121,"src":"1943:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1943:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:71:13"},"src":"1872:93:13"},{"anonymous":false,"eventSelector":"f8590cd6b8c44be7a2bc57131f10e203ec5f7d7f2f761e1508a8cc964ecb9eb7","id":6129,"name":"RefundIssued","nameLocation":"1976:12:13","nodeType":"EventDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"2005:8:13","nodeType":"VariableDeclaration","scope":6129,"src":"1989:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6125,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2031:5:13","nodeType":"VariableDeclaration","scope":6129,"src":"2015:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6124,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6127,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2046:6:13","nodeType":"VariableDeclaration","scope":6129,"src":"2038:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1988:65:13"},"src":"1970:84:13"},{"anonymous":false,"eventSelector":"1c4e23de8d72c94b22992bd4d7b6786b215ba876af214ff63e6a0ca38fc97af4","id":6133,"name":"AdminGranted","nameLocation":"2065:12:13","nodeType":"EventDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"2094:5:13","nodeType":"VariableDeclaration","scope":6133,"src":"2078:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6130,"name":"address","nodeType":"ElementaryTypeName","src":"2078:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2077:23:13"},"src":"2059:42:13"},{"anonymous":false,"eventSelector":"4a297cf5d32586f80d2b0708a39d2da1f46e6ae7722171e1c51dfd685b5b8aa8","id":6139,"name":"TrustedSignerUpdated","nameLocation":"2112:20:13","nodeType":"EventDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6135,"indexed":true,"mutability":"mutable","name":"oldSigner","nameLocation":"2149:9:13","nodeType":"VariableDeclaration","scope":6139,"src":"2133:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6134,"name":"address","nodeType":"ElementaryTypeName","src":"2133:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6137,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"2176:9:13","nodeType":"VariableDeclaration","scope":6139,"src":"2160:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6136,"name":"address","nodeType":"ElementaryTypeName","src":"2160:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2132:54:13"},"src":"2106:81:13"},{"anonymous":false,"eventSelector":"16fe3aa381de20cb3e0fb3f9ae8d20168747df7e26dbc2b381ad5025ee5ca086","id":6149,"name":"PolicyRenewed","nameLocation":"2198:13:13","nodeType":"EventDefinition","parameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"2228:8:13","nodeType":"VariableDeclaration","scope":6149,"src":"2212:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2212:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6143,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2254:5:13","nodeType":"VariableDeclaration","scope":6149,"src":"2238:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6142,"name":"address","nodeType":"ElementaryTypeName","src":"2238:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6145,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"2269:7:13","nodeType":"VariableDeclaration","scope":6149,"src":"2261:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2261:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6147,"indexed":false,"mutability":"mutable","name":"newExpiry","nameLocation":"2286:9:13","nodeType":"VariableDeclaration","scope":6149,"src":"2278:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2278:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2211:85:13"},"src":"2192:105:13"},{"anonymous":false,"eventSelector":"8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe002","id":6155,"name":"PolicyExpired","nameLocation":"2308:13:13","nodeType":"EventDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"2338:8:13","nodeType":"VariableDeclaration","scope":6155,"src":"2322:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2322:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6153,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2364:5:13","nodeType":"VariableDeclaration","scope":6155,"src":"2348:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6152,"name":"address","nodeType":"ElementaryTypeName","src":"2348:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2321:49:13"},"src":"2302:69:13"},{"anonymous":false,"eventSelector":"b792057619e1a3b0e2768725ef4cb4fc3cbf647c992d306e6876522e3fc0cdbc","id":6161,"name":"ClaimExpiryPeriodUpdated","nameLocation":"2382:24:13","nodeType":"EventDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"indexed":false,"mutability":"mutable","name":"oldPeriod","nameLocation":"2415:9:13","nodeType":"VariableDeclaration","scope":6161,"src":"2407:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6159,"indexed":false,"mutability":"mutable","name":"newPeriod","nameLocation":"2434:9:13","nodeType":"VariableDeclaration","scope":6161,"src":"2426:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2426:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2406:38:13"},"src":"2376:69:13"},{"anonymous":false,"eventSelector":"483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea39","id":6167,"name":"VaultUpdated","nameLocation":"2456:12:13","nodeType":"EventDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"indexed":true,"mutability":"mutable","name":"oldVault","nameLocation":"2485:8:13","nodeType":"VariableDeclaration","scope":6167,"src":"2469:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6162,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6165,"indexed":true,"mutability":"mutable","name":"newVault","nameLocation":"2511:8:13","nodeType":"VariableDeclaration","scope":6167,"src":"2495:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6164,"name":"address","nodeType":"ElementaryTypeName","src":"2495:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:52:13"},"src":"2450:71:13"},{"body":{"id":6220,"nodeType":"Block","src":"2594:585:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6175,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"2612:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2630:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6176,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:13","typeDescriptions":{}}},"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2612:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e65722061646472657373","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2642:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f","typeString":"literal_string \"Invalid signer address\""},"value":"Invalid signer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f","typeString":"literal_string \"Invalid signer address\""}],"id":6174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2604:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2604:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6183,"nodeType":"ExpressionStatement","src":"2604:63:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6185,"name":"_vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"2685:13:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2710:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6186,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:13","typeDescriptions":{}}},"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2685:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207661756c742061646472657373","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2714:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e","typeString":"literal_string \"Invalid vault address\""},"value":"Invalid vault address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e","typeString":"literal_string \"Invalid vault address\""}],"id":6184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2677:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2677:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6193,"nodeType":"ExpressionStatement","src":"2677:61:13"},{"expression":{"arguments":[{"id":6195,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2845:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2865:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2869:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2865:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6194,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2834:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2834:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"ExpressionStatement","src":"2834:42:13"},{"expression":{"arguments":[{"id":6201,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"2897:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2909:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2913:6:13","memberName":"sender","nodeType":"MemberAccess","src":"2909:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6200,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2886:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2886:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"ExpressionStatement","src":"2886:34:13"},{"expression":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6206,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"2977:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6207,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"2993:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2977:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6209,"nodeType":"ExpressionStatement","src":"2977:30:13"},{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"3055:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6212,"name":"_vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"3078:13:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6211,"name":"InsuranceVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9290,"src":"3063:14:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InsuranceVault_$9290_$","typeString":"type(contract InsuranceVault)"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"src":"3055:37:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":6215,"nodeType":"ExpressionStatement","src":"3055:37:13"},{"expression":{"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6216,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"3150:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6217,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"3160:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3150:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6219,"nodeType":"ExpressionStatement","src":"3150:22:13"}]},"id":6221,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"_trustedSigner","nameLocation":"2547:14:13","nodeType":"VariableDeclaration","scope":6221,"src":"2539:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6168,"name":"address","nodeType":"ElementaryTypeName","src":"2539:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6171,"mutability":"mutable","name":"_vaultAddress","nameLocation":"2579:13:13","nodeType":"VariableDeclaration","scope":6221,"src":"2563:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6170,"name":"address","nodeType":"ElementaryTypeName","src":"2563:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2538:55:13"},"returnParameters":{"id":6173,"nodeType":"ParameterList","parameters":[],"src":"2594:0:13"},"scope":7172,"src":"2527:652:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6240,"nodeType":"Block","src":"3264:151:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6225,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"3282:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6226,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"3293:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3282:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3303:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":6224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3274:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3274:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6230,"nodeType":"ExpressionStatement","src":"3274:63:13"},{"expression":{"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6231,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"3347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6232,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"3357:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3347:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6234,"nodeType":"ExpressionStatement","src":"3347:18:13"},{"id":6235,"nodeType":"PlaceholderStatement","src":"3375:1:13"},{"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"3386:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6237,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"3396:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3386:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6239,"nodeType":"ExpressionStatement","src":"3386:22:13"}]},"documentation":{"id":6222,"nodeType":"StructuredDocumentation","src":"3185:50:13","text":"@notice Modifier to prevent reentrancy attacks"},"id":6241,"name":"nonReentrant","nameLocation":"3249:12:13","nodeType":"ModifierDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[],"src":"3261:2:13"},"src":"3240:175:13","virtual":false,"visibility":"internal"},{"body":{"id":6273,"nodeType":"Block","src":"3640:210:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6251,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"3658:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3671:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6252,"name":"address","nodeType":"ElementaryTypeName","src":"3671:7:13","typeDescriptions":{}}},"id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3671:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3658:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e65722061646472657373","id":6257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3683:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f","typeString":"literal_string \"Invalid signer address\""},"value":"Invalid signer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f","typeString":"literal_string \"Invalid signer address\""}],"id":6250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3650:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6259,"nodeType":"ExpressionStatement","src":"3650:58:13"},{"assignments":[6261],"declarations":[{"constant":false,"id":6261,"mutability":"mutable","name":"oldSigner","nameLocation":"3726:9:13","nodeType":"VariableDeclaration","scope":6273,"src":"3718:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6260,"name":"address","nodeType":"ElementaryTypeName","src":"3718:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6263,"initialValue":{"id":6262,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"3738:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3718:33:13"},{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6264,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"3761:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6265,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"3777:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3761:25:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6267,"nodeType":"ExpressionStatement","src":"3761:25:13"},{"eventCall":{"arguments":[{"id":6269,"name":"oldSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"3822:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6270,"name":"newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"3833:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6268,"name":"TrustedSignerUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"3801:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3801:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6272,"nodeType":"EmitStatement","src":"3796:47:13"}]},"documentation":{"id":6242,"nodeType":"StructuredDocumentation","src":"3421:131:13","text":"@notice Set the trusted signer address\n @param newSigner Address of the backend that will sign premium and claim amounts"},"functionSelector":"56a1c701","id":6274,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6247,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3620:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6248,"kind":"modifierInvocation","modifierName":{"id":6246,"name":"onlyRole","nameLocations":["3611:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3611:8:13"},"nodeType":"ModifierInvocation","src":"3611:28:13"}],"name":"setTrustedSigner","nameLocation":"3566:16:13","nodeType":"FunctionDefinition","parameters":{"id":6245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6244,"mutability":"mutable","name":"newSigner","nameLocation":"3591:9:13","nodeType":"VariableDeclaration","scope":6274,"src":"3583:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6243,"name":"address","nodeType":"ElementaryTypeName","src":"3583:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3582:19:13"},"returnParameters":{"id":6249,"nodeType":"ParameterList","parameters":[],"src":"3640:0:13"},"scope":7172,"src":"3557:293:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6311,"nodeType":"Block","src":"4029:205:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6284,"name":"newVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"4047:8:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4067:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4059:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6285,"name":"address","nodeType":"ElementaryTypeName","src":"4059:7:13","typeDescriptions":{}}},"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4047:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207661756c742061646472657373","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4071:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e","typeString":"literal_string \"Invalid vault address\""},"value":"Invalid vault address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e","typeString":"literal_string \"Invalid vault address\""}],"id":6283,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4039:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4039:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6292,"nodeType":"ExpressionStatement","src":"4039:56:13"},{"assignments":[6294],"declarations":[{"constant":false,"id":6294,"mutability":"mutable","name":"oldVault","nameLocation":"4113:8:13","nodeType":"VariableDeclaration","scope":6311,"src":"4105:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6293,"name":"address","nodeType":"ElementaryTypeName","src":"4105:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6299,"initialValue":{"arguments":[{"id":6297,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"4132:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4124:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6295,"name":"address","nodeType":"ElementaryTypeName","src":"4124:7:13","typeDescriptions":{}}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4105:33:13"},{"expression":{"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6300,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"4148:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6302,"name":"newVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"4171:8:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6301,"name":"InsuranceVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9290,"src":"4156:14:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InsuranceVault_$9290_$","typeString":"type(contract InsuranceVault)"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"src":"4148:32:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":6305,"nodeType":"ExpressionStatement","src":"4148:32:13"},{"eventCall":{"arguments":[{"id":6307,"name":"oldVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"4208:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6308,"name":"newVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"4218:8:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6306,"name":"VaultUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"4195:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4195:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"EmitStatement","src":"4190:37:13"}]},"documentation":{"id":6275,"nodeType":"StructuredDocumentation","src":"3860:82:13","text":"@notice Set the vault address\n @param newVault Address of the new vault"},"functionSelector":"6817031b","id":6312,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6280,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4009:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6281,"kind":"modifierInvocation","modifierName":{"id":6279,"name":"onlyRole","nameLocations":["4000:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4000:8:13"},"nodeType":"ModifierInvocation","src":"4000:28:13"}],"name":"setVault","nameLocation":"3956:8:13","nodeType":"FunctionDefinition","parameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"newVault","nameLocation":"3981:8:13","nodeType":"VariableDeclaration","scope":6312,"src":"3965:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6276,"name":"address","nodeType":"ElementaryTypeName","src":"3965:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3964:26:13"},"returnParameters":{"id":6282,"nodeType":"ParameterList","parameters":[],"src":"4029:0:13"},"scope":7172,"src":"3947:287:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6343,"nodeType":"Block","src":"4439:236:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6322,"name":"periodInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"4457:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4472:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4457:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572696f64206d75737420626520706f736974697665","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4475:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5","typeString":"literal_string \"Period must be positive\""},"value":"Period must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5","typeString":"literal_string \"Period must be positive\""}],"id":6321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4449:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4449:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6327,"nodeType":"ExpressionStatement","src":"4449:52:13"},{"assignments":[6329],"declarations":[{"constant":false,"id":6329,"mutability":"mutable","name":"oldPeriod","nameLocation":"4519:9:13","nodeType":"VariableDeclaration","scope":6343,"src":"4511:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6331,"initialValue":{"id":6330,"name":"claimExpiryPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"4531:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4511:37:13"},{"expression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6332,"name":"claimExpiryPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"4558:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"periodInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"4578:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":6334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4593:6:13","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"4578:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4558:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6337,"nodeType":"ExpressionStatement","src":"4558:41:13"},{"eventCall":{"arguments":[{"id":6339,"name":"oldPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"4639:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6340,"name":"claimExpiryPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"4650:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"name":"ClaimExpiryPeriodUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"4614:24:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6342,"nodeType":"EmitStatement","src":"4609:59:13"}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"4240:104:13","text":"@notice Set the claim expiry period\n @param periodInDays Number of days a claim remains valid"},"functionSelector":"19c0d1fa","id":6344,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6318,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4419:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6319,"kind":"modifierInvocation","modifierName":{"id":6317,"name":"onlyRole","nameLocations":["4410:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4410:8:13"},"nodeType":"ModifierInvocation","src":"4410:28:13"}],"name":"setClaimExpiryPeriod","nameLocation":"4358:20:13","nodeType":"FunctionDefinition","parameters":{"id":6316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"periodInDays","nameLocation":"4387:12:13","nodeType":"VariableDeclaration","scope":6344,"src":"4379:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6314,"name":"uint256","nodeType":"ElementaryTypeName","src":"4379:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4378:22:13"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[],"src":"4439:0:13"},"scope":7172,"src":"4349:326:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6372,"nodeType":"Block","src":"4835:152:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"4853:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4865:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6355,"name":"address","nodeType":"ElementaryTypeName","src":"4865:7:13","typeDescriptions":{}}},"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4853:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646d696e2061646472657373","id":6360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""},"value":"Invalid admin address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""}],"id":6353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4845:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4845:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6362,"nodeType":"ExpressionStatement","src":"4845:56:13"},{"expression":{"arguments":[{"id":6364,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"4922:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6365,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"4934:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6363,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4911:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6367,"nodeType":"ExpressionStatement","src":"4911:32:13"},{"eventCall":{"arguments":[{"id":6369,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"4971:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6368,"name":"AdminGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"4958:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4958:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6371,"nodeType":"EmitStatement","src":"4953:27:13"}]},"documentation":{"id":6345,"nodeType":"StructuredDocumentation","src":"4681:61:13","text":"@notice Grant admin role (only default admin can do this)"},"functionSelector":"c634b78e","id":6373,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6350,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"4815:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6351,"kind":"modifierInvocation","modifierName":{"id":6349,"name":"onlyRole","nameLocations":["4806:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4806:8:13"},"nodeType":"ModifierInvocation","src":"4806:28:13"}],"name":"grantAdminRole","nameLocation":"4756:14:13","nodeType":"FunctionDefinition","parameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"newAdmin","nameLocation":"4779:8:13","nodeType":"VariableDeclaration","scope":6373,"src":"4771:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6346,"name":"address","nodeType":"ElementaryTypeName","src":"4771:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4770:18:13"},"returnParameters":{"id":6352,"nodeType":"ParameterList","parameters":[],"src":"4835:0:13"},"scope":7172,"src":"4747:240:13","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":6405,"nodeType":"Block","src":"5146:170:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"5164:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5173:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6384,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:13","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5173:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5164:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646d696e2061646472657373","id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5185:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""},"value":"Invalid admin address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653","typeString":"literal_string \"Invalid admin address\""}],"id":6382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5156:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6391,"nodeType":"ExpressionStatement","src":"5156:53:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6393,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"5227:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5236:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5240:6:13","memberName":"sender","nodeType":"MemberAccess","src":"5236:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5227:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207265766f6b652073656c66","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5248:20:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94","typeString":"literal_string \"Cannot revoke self\""},"value":"Cannot revoke self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94","typeString":"literal_string \"Cannot revoke self\""}],"id":6392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5219:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5219:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6399,"nodeType":"ExpressionStatement","src":"5219:50:13"},{"expression":{"arguments":[{"id":6401,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"5291:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6402,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"5303:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6400,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5279:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5279:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"ExpressionStatement","src":"5279:30:13"}]},"documentation":{"id":6374,"nodeType":"StructuredDocumentation","src":"4993:62:13","text":"@notice Revoke admin role (only default admin can do this)"},"functionSelector":"9a19c7b0","id":6406,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6379,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"5126:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6380,"kind":"modifierInvocation","modifierName":{"id":6378,"name":"onlyRole","nameLocations":["5117:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5117:8:13"},"nodeType":"ModifierInvocation","src":"5117:28:13"}],"name":"revokeAdminRole","nameLocation":"5069:15:13","nodeType":"FunctionDefinition","parameters":{"id":6377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"mutability":"mutable","name":"admin","nameLocation":"5093:5:13","nodeType":"VariableDeclaration","scope":6406,"src":"5085:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6375,"name":"address","nodeType":"ElementaryTypeName","src":"5085:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5084:15:13"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[],"src":"5146:0:13"},"scope":7172,"src":"5060:256:13","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":6420,"nodeType":"Block","src":"5414:85:13","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6412,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"5432:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6414,"indexExpression":{"id":6413,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"5441:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5432:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":6415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5451:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"5432:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":6416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":6411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5424:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6418,"nodeType":"ExpressionStatement","src":"5424:57:13"},{"id":6419,"nodeType":"PlaceholderStatement","src":"5491:1:13"}]},"documentation":{"id":6407,"nodeType":"StructuredDocumentation","src":"5322:48:13","text":"@notice Modifier to check if policy is valid"},"id":6421,"name":"validPolicy","nameLocation":"5384:11:13","nodeType":"ModifierDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"policyId","nameLocation":"5404:8:13","nodeType":"VariableDeclaration","scope":6421,"src":"5396:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5396:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5395:18:13"},"src":"5375:124:13","virtual":false,"visibility":"internal"},{"body":{"id":6439,"nodeType":"Block","src":"5647:68:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":6434,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"5691:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6435,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"5697:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6432,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5674:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5678:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"5674:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5674:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5664:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6430,"id":6438,"nodeType":"Return","src":"5657:51:13"}]},"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"5505:46:13","text":"@notice Generate a unique hashed policy ID"},"id":6440,"implemented":true,"kind":"function","modifiers":[],"name":"generatePolicyId","nameLocation":"5565:16:13","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"user","nameLocation":"5590:4:13","nodeType":"VariableDeclaration","scope":6440,"src":"5582:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6423,"name":"address","nodeType":"ElementaryTypeName","src":"5582:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6426,"mutability":"mutable","name":"timestamp","nameLocation":"5604:9:13","nodeType":"VariableDeclaration","scope":6440,"src":"5596:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5581:33:13"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6440,"src":"5638:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5638:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5637:9:13"},"scope":7172,"src":"5556:159:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"6024:297:13","statements":[{"expression":{"arguments":[{"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6042:37:13","subExpression":{"baseExpression":{"id":6451,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"6043:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6455,"indexExpression":{"arguments":[{"id":6453,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"6068:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6452,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6058:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6058:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6043:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e617475726520616c72656164792075736564","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6081:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8","typeString":"literal_string \"Signature already used\""},"value":"Signature already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8","typeString":"literal_string \"Signature already used\""}],"id":6450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6034:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6034:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6459,"nodeType":"ExpressionStatement","src":"6034:72:13"},{"assignments":[6461],"declarations":[{"constant":false,"id":6461,"mutability":"mutable","name":"ethSignedMessageHash","nameLocation":"6124:20:13","nodeType":"VariableDeclaration","scope":6478,"src":"6116:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6116:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6465,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6462,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"6147:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6159:22:13","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2373,"src":"6147:34:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6116:67:13"},{"assignments":[6467],"declarations":[{"constant":false,"id":6467,"mutability":"mutable","name":"recoveredSigner","nameLocation":"6201:15:13","nodeType":"VariableDeclaration","scope":6478,"src":"6193:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6466,"name":"address","nodeType":"ElementaryTypeName","src":"6193:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6473,"initialValue":{"arguments":[{"id":6470,"name":"ethSignedMessageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"6233:20:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6471,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"6255:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6468,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"6219:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2358_$","typeString":"type(library ECDSA)"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6225:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2114,"src":"6219:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6193:72:13"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"6282:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6475,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"6301:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6282:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6449,"id":6477,"nodeType":"Return","src":"6275:39:13"}]},"documentation":{"id":6441,"nodeType":"StructuredDocumentation","src":"5721:199:13","text":"@notice Verify a signature from the backend using ECDSA library (like FlightInsurance)\n @param messageHash The message hash that was signed\n @param signature The signature to verify"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"verifySignature","nameLocation":"5934:15:13","nodeType":"FunctionDefinition","parameters":{"id":6446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"messageHash","nameLocation":"5958:11:13","nodeType":"VariableDeclaration","scope":6479,"src":"5950:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5950:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"signature","nameLocation":"5984:9:13","nodeType":"VariableDeclaration","scope":6479,"src":"5971:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6444,"name":"bytes","nodeType":"ElementaryTypeName","src":"5971:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5949:45:13"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6479,"src":"6018:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6447,"name":"bool","nodeType":"ElementaryTypeName","src":"6018:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6017:6:13"},"scope":7172,"src":"5925:396:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6636,"nodeType":"Block","src":"6895:1864:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6498,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"6915:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6932:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6924:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6499,"name":"address","nodeType":"ElementaryTypeName","src":"6924:7:13","typeDescriptions":{}}},"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6915:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6936:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":6497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6907:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6907:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6506,"nodeType":"ExpressionStatement","src":"6907:53:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6508,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"6978:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6988:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6978:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d206d75737420626520706f736974697665","id":6511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6991:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8","typeString":"literal_string \"Premium must be positive\""},"value":"Premium must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8","typeString":"literal_string \"Premium must be positive\""}],"id":6507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6970:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6970:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6513,"nodeType":"ExpressionStatement","src":"6970:48:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7036:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7049:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7036:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53756d2061737375726564206d75737420626520706f736974697665","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7052:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c","typeString":"literal_string \"Sum assured must be positive\""},"value":"Sum assured must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c","typeString":"literal_string \"Sum assured must be positive\""}],"id":6514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7028:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7028:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6520,"nodeType":"ExpressionStatement","src":"7028:55:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6522,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"7101:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7112:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7101:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7115:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""},"value":"Duration must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""}],"id":6521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7093:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7093:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6527,"nodeType":"ExpressionStatement","src":"7093:50:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7161:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7165:5:13","memberName":"value","nodeType":"MemberAccess","src":"7161:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6531,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"7174:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7161:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7183:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""},"value":"Incorrect premium amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""}],"id":6528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7153:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"ExpressionStatement","src":"7153:57:13"},{"assignments":[6537],"declarations":[{"constant":false,"id":6537,"mutability":"mutable","name":"messageHash","nameLocation":"7365:11:13","nodeType":"VariableDeclaration","scope":6636,"src":"7357:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7357:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6549,"initialValue":{"arguments":[{"arguments":[{"id":6541,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"7436:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6542,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"7459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6543,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7484:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6544,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"7512:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6545,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7538:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"7538:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6539,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7402:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7406:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"7402:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7402:163:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6538,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7379:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7379:196:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7357:218:13"},{"expression":{"arguments":[{"arguments":[{"id":6552,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"7646:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6553,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"7659:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6551,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"7630:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7630:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7671:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":6550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6557,"nodeType":"ExpressionStatement","src":"7622:69:13"},{"expression":{"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6558,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"7744:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6562,"indexExpression":{"arguments":[{"id":6560,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"7769:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6559,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7759:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7759:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7744:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7783:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7744:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6565,"nodeType":"ExpressionStatement","src":"7744:43:13"},{"assignments":[6567],"declarations":[{"constant":false,"id":6567,"mutability":"mutable","name":"policyId","nameLocation":"7853:8:13","nodeType":"VariableDeclaration","scope":6636,"src":"7845:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7845:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6573,"initialValue":{"arguments":[{"id":6569,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"7881:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6570,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7888:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7894:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"7888:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"name":"generatePolicyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"7864:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256) pure returns (bytes32)"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7864:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7845:59:13"},{"expression":{"arguments":[{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7922:28:13","subExpression":{"expression":{"baseExpression":{"id":6575,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"7923:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6577,"indexExpression":{"id":6576,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"7932:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7923:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":6578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7942:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"7923:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920657869737473","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7952:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26","typeString":"literal_string \"Policy already exists\""},"value":"Policy already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26","typeString":"literal_string \"Policy already exists\""}],"id":6574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7914:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7914:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6582,"nodeType":"ExpressionStatement","src":"7914:62:13"},{"expression":{"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6583,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"8029:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6585,"indexExpression":{"id":6584,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"8038:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8029:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6587,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"8081:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6588,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"8110:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6589,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"8138:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6590,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"8171:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6591,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8203:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8209:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8203:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6593,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"8221:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8203:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8253:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8282:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":6597,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8312:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8318:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8312:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"name":"Policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"8050:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Policy_$6060_storage_ptr_$","typeString":"type(struct PolicyBase.Policy storage pointer)"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8071:8:13","8103:5:13","8129:7:13","8159:10:13","8195:6:13","8243:8:13","8271:9:13","8301:9:13"],"names":["policyId","owner","premium","sumAssured","expiry","isActive","isClaimed","createdAt"],"nodeType":"FunctionCall","src":"8050:288:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"src":"8029:309:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":6601,"nodeType":"ExpressionStatement","src":"8029:309:13"},{"expression":{"arguments":[{"id":6603,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"8418:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6602,"name":"_processPolicyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"8399:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6605,"nodeType":"ExpressionStatement","src":"8399:28:13"},{"assignments":[6607,null],"declarations":[{"constant":false,"id":6607,"mutability":"mutable","name":"sent","nameLocation":"8488:4:13","nodeType":"VariableDeclaration","scope":6636,"src":"8483:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6606,"name":"bool","nodeType":"ElementaryTypeName","src":"8483:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6617,"initialValue":{"arguments":[{"hexValue":"","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":6610,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"8506:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8498:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6608,"name":"address","nodeType":"ElementaryTypeName","src":"8498:7:13","typeDescriptions":{}}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8513:4:13","memberName":"call","nodeType":"MemberAccess","src":"8498:19:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":6613,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"8525:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8498:35:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8498:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8482:55:13"},{"expression":{"arguments":[{"id":6619,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"8555:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8561:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""},"value":"Premium transfer to vault failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""}],"id":6618,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8547:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8547:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6622,"nodeType":"ExpressionStatement","src":"8547:49:13"},{"eventCall":{"arguments":[{"id":6624,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"8628:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"8638:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6626,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"8645:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6627,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"8654:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6628,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8666:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8672:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8666:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6630,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"8684:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8666:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6623,"name":"PolicyPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"8612:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256,uint256)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8612:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6633,"nodeType":"EmitStatement","src":"8607:86:13"},{"expression":{"id":6634,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"8719:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6496,"id":6635,"nodeType":"Return","src":"8712:15:13"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"6327:345:13","text":"@notice Purchase a new policy with backend-verified premium\n @param owner Address of the policy owner\n @param premium Premium amount calculated by backend\n @param sumAssured Sum assured amount\n @param duration Policy duration in seconds\n @param signature Signature from the backend verifying the parameters"},"functionSelector":"b87fb65c","id":6637,"implemented":true,"kind":"function","modifiers":[{"id":6493,"kind":"modifierInvocation","modifierName":{"id":6492,"name":"nonReentrant","nameLocations":["6864:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"6864:12:13"},"nodeType":"ModifierInvocation","src":"6864:12:13"}],"name":"purchasePolicy","nameLocation":"6686:14:13","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"owner","nameLocation":"6718:5:13","nodeType":"VariableDeclaration","scope":6637,"src":"6710:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6481,"name":"address","nodeType":"ElementaryTypeName","src":"6710:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6484,"mutability":"mutable","name":"premium","nameLocation":"6741:7:13","nodeType":"VariableDeclaration","scope":6637,"src":"6733:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6486,"mutability":"mutable","name":"sumAssured","nameLocation":"6766:10:13","nodeType":"VariableDeclaration","scope":6637,"src":"6758:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"6758:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6488,"mutability":"mutable","name":"duration","nameLocation":"6794:8:13","nodeType":"VariableDeclaration","scope":6637,"src":"6786:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6487,"name":"uint256","nodeType":"ElementaryTypeName","src":"6786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6490,"mutability":"mutable","name":"signature","nameLocation":"6825:9:13","nodeType":"VariableDeclaration","scope":6637,"src":"6812:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6489,"name":"bytes","nodeType":"ElementaryTypeName","src":"6812:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6700:140:13"},"returnParameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"6886:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6886:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6885:9:13"},"scope":7172,"src":"6677:2082:13","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":6638,"nodeType":"StructuredDocumentation","src":"8765:126:13","text":"@notice Process policy-specific data (to be implemented by derived contracts)\n @param policyId The ID of the policy"},"id":6643,"implemented":false,"kind":"function","modifiers":[],"name":"_processPolicyData","nameLocation":"8905:18:13","nodeType":"FunctionDefinition","parameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"policyId","nameLocation":"8932:8:13","nodeType":"VariableDeclaration","scope":6643,"src":"8924:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8924:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8923:18:13"},"returnParameters":{"id":6642,"nodeType":"ParameterList","parameters":[],"src":"8958:0:13"},"scope":7172,"src":"8896:63:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"9349:1111:13","statements":[{"assignments":[6660],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"policy","nameLocation":"9374:6:13","nodeType":"VariableDeclaration","scope":6749,"src":"9359:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":6659,"nodeType":"UserDefinedTypeName","pathNode":{"id":6658,"name":"Policy","nameLocations":["9359:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"9359:6:13"},"referencedDeclaration":6060,"src":"9359:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":6664,"initialValue":{"baseExpression":{"id":6661,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"9383:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6663,"indexExpression":{"id":6662,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"9392:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9383:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9359:42:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6666,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"9419:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9426:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"9419:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9435:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9439:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9435:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9419:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9447:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""},"value":"Not the policy owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""}],"id":6665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9411:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9411:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6673,"nodeType":"ExpressionStatement","src":"9411:59:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"9488:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6676,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"9498:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9505:10:13","memberName":"sumAssured","nodeType":"MemberAccess","referencedDeclaration":6051,"src":"9498:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9488:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20657863656564732073756d2061737375726564","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9517:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158","typeString":"literal_string \"Claim exceeds sum assured\""},"value":"Claim exceeds sum assured"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158","typeString":"literal_string \"Claim exceeds sum assured\""}],"id":6674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9480:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9480:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6681,"nodeType":"ExpressionStatement","src":"9480:65:13"},{"expression":{"arguments":[{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9563:17:13","subExpression":{"expression":{"id":6683,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"9564:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9571:9:13","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"9564:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9582:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":6682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9555:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9555:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6688,"nodeType":"ExpressionStatement","src":"9555:52:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6690,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9625:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9631:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"9625:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6692,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"9643:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9650:6:13","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"9643:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9625:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c6963792065787069726564","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9658:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""},"value":"Policy expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""}],"id":6689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9617:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9617:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6697,"nodeType":"ExpressionStatement","src":"9617:58:13"},{"assignments":[6699],"declarations":[{"constant":false,"id":6699,"mutability":"mutable","name":"messageHash","nameLocation":"9776:11:13","nodeType":"VariableDeclaration","scope":6749,"src":"9768:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9768:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6709,"initialValue":{"arguments":[{"arguments":[{"id":6703,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"9847:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"9873:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6705,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9897:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9903:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"9897:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6701,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9813:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9817:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"9813:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9813:111:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9790:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9790:144:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9768:166:13"},{"expression":{"arguments":[{"arguments":[{"id":6712,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6699,"src":"10005:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6713,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"10018:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6711,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"9989:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10030:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":6710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9981:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9981:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6717,"nodeType":"ExpressionStatement","src":"9981:69:13"},{"expression":{"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6718,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"10103:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6722,"indexExpression":{"arguments":[{"id":6720,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"10128:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6719,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10118:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10118:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10103:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10142:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10103:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6725,"nodeType":"ExpressionStatement","src":"10103:43:13"},{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6726,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"10157:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":6728,"indexExpression":{"id":6727,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"10164:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10157:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6730,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"10213:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"10243:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10274:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6733,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10303:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10309:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"10303:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6735,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10349:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10355:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"10349:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6737,"name":"claimExpiryPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"10367:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10349:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6729,"name":"ClaimRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"10176:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ClaimRequest_$6071_storage_ptr_$","typeString":"type(struct PolicyBase.ClaimRequest storage pointer)"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10203:8:13","10235:6:13","10263:9:13","10292:9:13","10332:15:13"],"names":["policyId","amount","isPending","createdAt","expiryTimestamp"],"nodeType":"FunctionCall","src":"10176:219:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_memory_ptr","typeString":"struct PolicyBase.ClaimRequest memory"}},"src":"10157:238:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"id":6741,"nodeType":"ExpressionStatement","src":"10157:238:13"},{"eventCall":{"arguments":[{"id":6743,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"10422:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6744,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"10432:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10439:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"10432:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"10446:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6742,"name":"ClaimFiled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"10411:10:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10411:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6748,"nodeType":"EmitStatement","src":"10406:47:13"}]},"documentation":{"id":6644,"nodeType":"StructuredDocumentation","src":"8965:222:13","text":"@notice File a claim for the insurance with signature verification\n @param policyId The ID of the policy\n @param amount Claim amount\n @param signature Signature from the backend verifying the claim"},"functionSelector":"5052cb49","id":6750,"implemented":true,"kind":"function","modifiers":[{"id":6653,"kind":"modifierInvocation","modifierName":{"id":6652,"name":"nonReentrant","nameLocations":["9314:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"9314:12:13"},"nodeType":"ModifierInvocation","src":"9314:12:13"},{"arguments":[{"id":6655,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"9339:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6656,"kind":"modifierInvocation","modifierName":{"id":6654,"name":"validPolicy","nameLocations":["9327:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"9327:11:13"},"nodeType":"ModifierInvocation","src":"9327:21:13"}],"name":"fileClaim","nameLocation":"9201:9:13","nodeType":"FunctionDefinition","parameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"policyId","nameLocation":"9228:8:13","nodeType":"VariableDeclaration","scope":6750,"src":"9220:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9220:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6648,"mutability":"mutable","name":"amount","nameLocation":"9254:6:13","nodeType":"VariableDeclaration","scope":6750,"src":"9246:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6647,"name":"uint256","nodeType":"ElementaryTypeName","src":"9246:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6650,"mutability":"mutable","name":"signature","nameLocation":"9283:9:13","nodeType":"VariableDeclaration","scope":6750,"src":"9270:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6649,"name":"bytes","nodeType":"ElementaryTypeName","src":"9270:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9210:88:13"},"returnParameters":{"id":6657,"nodeType":"ParameterList","parameters":[],"src":"9349:0:13"},"scope":7172,"src":"9192:1268:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6836,"nodeType":"Block","src":"10750:634:13","statements":[{"assignments":[6768],"declarations":[{"constant":false,"id":6768,"mutability":"mutable","name":"claim","nameLocation":"10781:5:13","nodeType":"VariableDeclaration","scope":6836,"src":"10760:26:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"},"typeName":{"id":6767,"nodeType":"UserDefinedTypeName","pathNode":{"id":6766,"name":"ClaimRequest","nameLocations":["10760:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"10760:12:13"},"referencedDeclaration":6071,"src":"10760:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}},"visibility":"internal"}],"id":6772,"initialValue":{"baseExpression":{"id":6769,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"10789:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":6771,"indexExpression":{"id":6770,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"10796:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10789:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10760:45:13"},{"assignments":[6775],"declarations":[{"constant":false,"id":6775,"mutability":"mutable","name":"policy","nameLocation":"10830:6:13","nodeType":"VariableDeclaration","scope":6836,"src":"10815:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":6774,"nodeType":"UserDefinedTypeName","pathNode":{"id":6773,"name":"Policy","nameLocations":["10815:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"10815:6:13"},"referencedDeclaration":6060,"src":"10815:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":6779,"initialValue":{"baseExpression":{"id":6776,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"10839:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6778,"indexExpression":{"id":6777,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"10848:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10839:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10815:42:13"},{"expression":{"arguments":[{"expression":{"id":6781,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"10876:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":6782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10882:9:13","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"10876:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070656e64696e6720636c61696d","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10893:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""},"value":"No pending claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""}],"id":6780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10868:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10868:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6785,"nodeType":"ExpressionStatement","src":"10868:44:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6787,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10930:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10936:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"10930:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6789,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"10949:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":6790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10955:15:13","memberName":"expiryTimestamp","nodeType":"MemberAccess","referencedDeclaration":6070,"src":"10949:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10930:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20726571756573742065787069726564","id":6792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10972:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6","typeString":"literal_string \"Claim request expired\""},"value":"Claim request expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6","typeString":"literal_string \"Claim request expired\""}],"id":6786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10922:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10922:74:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6794,"nodeType":"ExpressionStatement","src":"10922:74:13"},{"expression":{"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6795,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"11068:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":6797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11074:9:13","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"11068:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11086:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11068:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"ExpressionStatement","src":"11068:23:13"},{"expression":{"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6801,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"11101:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11108:9:13","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"11101:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11120:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11101:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6806,"nodeType":"ExpressionStatement","src":"11101:23:13"},{"expression":{"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6807,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"11134:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11141:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"11134:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11152:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11134:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6812,"nodeType":"ExpressionStatement","src":"11134:23:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6818,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"11253:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11260:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"11253:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11245:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6816,"name":"address","nodeType":"ElementaryTypeName","src":"11245:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11245:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":6821,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"11268:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":6822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11274:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"11268:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6813,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"11226:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11232:12:13","memberName":"approveClaim","nodeType":"MemberAccess","referencedDeclaration":9180,"src":"11226:18:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11226:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"ExpressionStatement","src":"11226:55:13"},{"eventCall":{"arguments":[{"id":6826,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"11311:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6827,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"11321:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11328:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"11321:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6829,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"11335:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":6830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11341:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"11335:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6825,"name":"ClaimApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"11297:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6832,"nodeType":"EmitStatement","src":"11292:56:13"},{"expression":{"expression":{"id":6833,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"11365:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":6834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11371:6:13","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"11365:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6765,"id":6835,"nodeType":"Return","src":"11358:19:13"}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"10466:91:13","text":"@notice Approve a claim after admin review\n @param policyId The ID of the policy"},"functionSelector":"3719f096","id":6837,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6756,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"10653:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6757,"kind":"modifierInvocation","modifierName":{"id":6755,"name":"onlyRole","nameLocations":["10644:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"10644:8:13"},"nodeType":"ModifierInvocation","src":"10644:20:13"},{"arguments":[{"id":6759,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"10686:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6760,"kind":"modifierInvocation","modifierName":{"id":6758,"name":"validPolicy","nameLocations":["10674:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"10674:11:13"},"nodeType":"ModifierInvocation","src":"10674:21:13"},{"id":6762,"kind":"modifierInvocation","modifierName":{"id":6761,"name":"nonReentrant","nameLocations":["10705:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"10705:12:13"},"nodeType":"ModifierInvocation","src":"10705:12:13"}],"name":"approveClaim","nameLocation":"10571:12:13","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"policyId","nameLocation":"10592:8:13","nodeType":"VariableDeclaration","scope":6837,"src":"10584:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10584:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10583:18:13"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6837,"src":"10736:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6763,"name":"uint256","nodeType":"ElementaryTypeName","src":"10736:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10735:9:13"},"scope":7172,"src":"10562:822:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6937,"nodeType":"Block","src":"11808:1014:13","statements":[{"assignments":[6857],"declarations":[{"constant":false,"id":6857,"mutability":"mutable","name":"policy","nameLocation":"11833:6:13","nodeType":"VariableDeclaration","scope":6937,"src":"11818:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":6856,"nodeType":"UserDefinedTypeName","pathNode":{"id":6855,"name":"Policy","nameLocations":["11818:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"11818:6:13"},"referencedDeclaration":6060,"src":"11818:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":6861,"initialValue":{"baseExpression":{"id":6858,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"11842:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6860,"indexExpression":{"id":6859,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"11851:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11842:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11818:42:13"},{"expression":{"arguments":[{"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11878:17:13","subExpression":{"expression":{"id":6863,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"11879:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11886:9:13","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"11879:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11897:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":6862,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11870:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11870:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6868,"nodeType":"ExpressionStatement","src":"11870:52:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6870,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11940:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11946:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"11940:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6872,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"11958:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11965:6:13","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"11958:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11940:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c6963792065787069726564","id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11973:16:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""},"value":"Policy expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""}],"id":6869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11932:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11932:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6877,"nodeType":"ExpressionStatement","src":"11932:58:13"},{"assignments":[6879],"declarations":[{"constant":false,"id":6879,"mutability":"mutable","name":"messageHash","nameLocation":"12092:11:13","nodeType":"VariableDeclaration","scope":6937,"src":"12084:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6878,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12084:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6889,"initialValue":{"arguments":[{"arguments":[{"id":6883,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"12163:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6884,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"12189:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6885,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12219:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12225:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"12219:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6881,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12129:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12133:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"12129:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:117:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6880,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12106:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12106:150:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12084:172:13"},{"expression":{"arguments":[{"arguments":[{"id":6892,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"12327:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6893,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"12340:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6891,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"12311:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12311:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12352:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":6890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12303:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12303:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6897,"nodeType":"ExpressionStatement","src":"12303:69:13"},{"expression":{"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6898,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"12425:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6902,"indexExpression":{"arguments":[{"id":6900,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"12450:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6899,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12440:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12440:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12425:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12464:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12425:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6905,"nodeType":"ExpressionStatement","src":"12425:43:13"},{"expression":{"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6906,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"12549:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12556:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"12549:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12567:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12549:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6911,"nodeType":"ExpressionStatement","src":"12549:23:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6917,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"12653:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12660:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"12653:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12645:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6915,"name":"address","nodeType":"ElementaryTypeName","src":"12645:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12645:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6920,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"12668:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6912,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"12628:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12634:10:13","memberName":"sendRefund","nodeType":"MemberAccess","referencedDeclaration":9228,"src":"12628:16:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12628:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6922,"nodeType":"ExpressionStatement","src":"12628:53:13"},{"eventCall":{"arguments":[{"id":6924,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"12713:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6925,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"12723:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12730:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"12723:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6927,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"12737:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6923,"name":"PolicyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"12697:15:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12697:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6929,"nodeType":"EmitStatement","src":"12692:58:13"},{"eventCall":{"arguments":[{"id":6931,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"12778:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6932,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"12788:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12795:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"12788:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6934,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"12802:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6930,"name":"RefundIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"12765:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12765:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6936,"nodeType":"EmitStatement","src":"12760:55:13"}]},"documentation":{"id":6838,"nodeType":"StructuredDocumentation","src":"11394:222:13","text":"@notice Cancel the policy with backend verification\n @param policyId The ID of the policy\n @param refundAmount Refund amount\n @param signature Signature from the backend verifying the refund amount"},"functionSelector":"2fe1814c","id":6938,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6847,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"11761:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6848,"kind":"modifierInvocation","modifierName":{"id":6846,"name":"onlyRole","nameLocations":["11752:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"11752:8:13"},"nodeType":"ModifierInvocation","src":"11752:20:13"},{"arguments":[{"id":6850,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"11785:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6851,"kind":"modifierInvocation","modifierName":{"id":6849,"name":"validPolicy","nameLocations":["11773:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"11773:11:13"},"nodeType":"ModifierInvocation","src":"11773:21:13"},{"id":6853,"kind":"modifierInvocation","modifierName":{"id":6852,"name":"nonReentrant","nameLocations":["11795:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"11795:12:13"},"nodeType":"ModifierInvocation","src":"11795:12:13"}],"name":"cancelPolicy","nameLocation":"11630:12:13","nodeType":"FunctionDefinition","parameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"policyId","nameLocation":"11660:8:13","nodeType":"VariableDeclaration","scope":6938,"src":"11652:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11652:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6842,"mutability":"mutable","name":"refundAmount","nameLocation":"11686:12:13","nodeType":"VariableDeclaration","scope":6938,"src":"11678:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"11678:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6844,"mutability":"mutable","name":"signature","nameLocation":"11721:9:13","nodeType":"VariableDeclaration","scope":6938,"src":"11708:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6843,"name":"bytes","nodeType":"ElementaryTypeName","src":"11708:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11642:94:13"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[],"src":"11808:0:13"},"scope":7172,"src":"11621:1201:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":6951,"nodeType":"Block","src":"12991:42:13","statements":[{"expression":{"baseExpression":{"id":6947,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"13008:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6949,"indexExpression":{"id":6948,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"13017:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13008:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"functionReturnParameters":6946,"id":6950,"nodeType":"Return","src":"13001:25:13"}]},"documentation":{"id":6939,"nodeType":"StructuredDocumentation","src":"12828:75:13","text":"@notice Get policy details\n @param policyId The ID of the policy"},"functionSelector":"a3f685f9","id":6952,"implemented":true,"kind":"function","modifiers":[],"name":"getPolicy","nameLocation":"12917:9:13","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"policyId","nameLocation":"12935:8:13","nodeType":"VariableDeclaration","scope":6952,"src":"12927:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12927:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12926:18:13"},"returnParameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6952,"src":"12976:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":6944,"nodeType":"UserDefinedTypeName","pathNode":{"id":6943,"name":"Policy","nameLocations":["12976:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"12976:6:13"},"referencedDeclaration":6060,"src":"12976:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"src":"12975:15:13"},"scope":7172,"src":"12908:125:13","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":6965,"nodeType":"Block","src":"13206:40:13","statements":[{"expression":{"baseExpression":{"id":6961,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"13223:6:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":6963,"indexExpression":{"id":6962,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"13230:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13223:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"functionReturnParameters":6960,"id":6964,"nodeType":"Return","src":"13216:23:13"}]},"documentation":{"id":6953,"nodeType":"StructuredDocumentation","src":"13039:74:13","text":"@notice Get claim details\n @param policyId The ID of the policy"},"functionSelector":"c9100bcb","id":6966,"implemented":true,"kind":"function","modifiers":[],"name":"getClaim","nameLocation":"13127:8:13","nodeType":"FunctionDefinition","parameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"policyId","nameLocation":"13144:8:13","nodeType":"VariableDeclaration","scope":6966,"src":"13136:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13136:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13135:18:13"},"returnParameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6966,"src":"13185:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_memory_ptr","typeString":"struct PolicyBase.ClaimRequest"},"typeName":{"id":6958,"nodeType":"UserDefinedTypeName","pathNode":{"id":6957,"name":"ClaimRequest","nameLocations":["13185:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"13185:12:13"},"referencedDeclaration":6071,"src":"13185:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}},"visibility":"internal"}],"src":"13184:21:13"},"scope":7172,"src":"13118:128:13","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":7006,"nodeType":"Block","src":"13392:294:13","statements":[{"assignments":[6974],"declarations":[{"constant":false,"id":6974,"mutability":"mutable","name":"policy","nameLocation":"13417:6:13","nodeType":"VariableDeclaration","scope":7006,"src":"13402:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":6973,"nodeType":"UserDefinedTypeName","pathNode":{"id":6972,"name":"Policy","nameLocations":["13402:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"13402:6:13"},"referencedDeclaration":6060,"src":"13402:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":6978,"initialValue":{"baseExpression":{"id":6975,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"13426:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":6977,"indexExpression":{"id":6976,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"13435:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13426:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13402:42:13"},{"expression":{"arguments":[{"expression":{"id":6980,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"13462:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13469:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"13462:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13479:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":6979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13454:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13454:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6984,"nodeType":"ExpressionStatement","src":"13454:45:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6986,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13517:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13523:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"13517:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":6988,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"13536:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13543:6:13","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"13536:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13517:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f74206578706972656420796574","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13551:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881","typeString":"literal_string \"Policy not expired yet\""},"value":"Policy not expired yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881","typeString":"literal_string \"Policy not expired yet\""}],"id":6985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13509:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13509:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6993,"nodeType":"ExpressionStatement","src":"13509:67:13"},{"expression":{"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6994,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"13595:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":6996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13602:8:13","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"13595:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13613:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13595:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6999,"nodeType":"ExpressionStatement","src":"13595:23:13"},{"eventCall":{"arguments":[{"id":7001,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"13656:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7002,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"13666:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13673:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"13666:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7000,"name":"PolicyExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"13642:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7005,"nodeType":"EmitStatement","src":"13637:42:13"}]},"documentation":{"id":6967,"nodeType":"StructuredDocumentation","src":"13252:81:13","text":"@notice Mark a policy as expired\n @param policyId The ID of the policy"},"functionSelector":"b0529da2","id":7007,"implemented":true,"kind":"function","modifiers":[],"name":"markExpiredPolicy","nameLocation":"13347:17:13","nodeType":"FunctionDefinition","parameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"policyId","nameLocation":"13373:8:13","nodeType":"VariableDeclaration","scope":7007,"src":"13365:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13365:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13364:18:13"},"returnParameters":{"id":6971,"nodeType":"ParameterList","parameters":[],"src":"13392:0:13"},"scope":7172,"src":"13338:348:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7125,"nodeType":"Block","src":"14186:1137:13","statements":[{"assignments":[7026],"declarations":[{"constant":false,"id":7026,"mutability":"mutable","name":"policy","nameLocation":"14211:6:13","nodeType":"VariableDeclaration","scope":7125,"src":"14196:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7025,"nodeType":"UserDefinedTypeName","pathNode":{"id":7024,"name":"Policy","nameLocations":["14196:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"14196:6:13"},"referencedDeclaration":6060,"src":"14196:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7030,"initialValue":{"baseExpression":{"id":7027,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"14220:8:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7029,"indexExpression":{"id":7028,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"14229:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14220:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14196:42:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7032,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"14256:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14263:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"14256:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14272:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14276:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14272:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14256:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14284:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""},"value":"Not the policy owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""}],"id":7031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14248:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14248:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7039,"nodeType":"ExpressionStatement","src":"14248:59:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14325:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14329:5:13","memberName":"value","nodeType":"MemberAccess","src":"14325:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7043,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"14338:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14325:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14347:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""},"value":"Incorrect premium amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""}],"id":7040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14317:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14317:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7047,"nodeType":"ExpressionStatement","src":"14317:57:13"},{"expression":{"arguments":[{"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14392:17:13","subExpression":{"expression":{"id":7049,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"14393:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14400:9:13","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"14393:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14411:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":7048,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14384:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14384:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"ExpressionStatement","src":"14384:52:13"},{"assignments":[7056],"declarations":[{"constant":false,"id":7056,"mutability":"mutable","name":"messageHash","nameLocation":"14539:11:13","nodeType":"VariableDeclaration","scope":7125,"src":"14531:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7067,"initialValue":{"arguments":[{"arguments":[{"id":7060,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"14610:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7061,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"14636:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7062,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"14661:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7063,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14687:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14693:7:13","memberName":"chainid","nodeType":"MemberAccess","src":"14687:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7058,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14576:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14580:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"14576:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14576:138:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7057,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14553:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14553:171:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14531:193:13"},{"expression":{"arguments":[{"arguments":[{"id":7070,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"14795:11:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7071,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"14808:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7069,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"14779:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14779:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14820:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14771:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14771:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7075,"nodeType":"ExpressionStatement","src":"14771:69:13"},{"expression":{"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7076,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"14893:14:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7080,"indexExpression":{"arguments":[{"id":7078,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"14918:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7077,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14908:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14908:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14893:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14932:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14893:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7083,"nodeType":"ExpressionStatement","src":"14893:43:13"},{"expression":{"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7084,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"14980:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14987:7:13","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":6049,"src":"14980:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7087,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"14997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14980:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7089,"nodeType":"ExpressionStatement","src":"14980:24:13"},{"expression":{"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7090,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"15014:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15021:6:13","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"15014:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7093,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"15030:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15037:6:13","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"15030:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7095,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"15046:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15030:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15014:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7098,"nodeType":"ExpressionStatement","src":"15014:40:13"},{"assignments":[7100,null],"declarations":[{"constant":false,"id":7100,"mutability":"mutable","name":"sent","nameLocation":"15123:4:13","nodeType":"VariableDeclaration","scope":7125,"src":"15118:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7099,"name":"bool","nodeType":"ElementaryTypeName","src":"15118:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7110,"initialValue":{"arguments":[{"hexValue":"","id":7108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15169:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7103,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"15141:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15133:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7101,"name":"address","nodeType":"ElementaryTypeName","src":"15133:7:13","typeDescriptions":{}}},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15148:4:13","memberName":"call","nodeType":"MemberAccess","src":"15133:19:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7106,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"15160:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15133:35:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15133:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"15117:55:13"},{"expression":{"arguments":[{"id":7112,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"15190:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15196:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""},"value":"Premium transfer to vault failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""}],"id":7111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15182:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15182:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7115,"nodeType":"ExpressionStatement","src":"15182:49:13"},{"eventCall":{"arguments":[{"id":7117,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"15269:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7118,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"15279:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15286:5:13","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"15279:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7120,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"15293:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7121,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"15302:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15309:6:13","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"15302:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7116,"name":"PolicyRenewed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"15255:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15255:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7124,"nodeType":"EmitStatement","src":"15250:66:13"}]},"documentation":{"id":7008,"nodeType":"StructuredDocumentation","src":"13692:293:13","text":"@notice Renew an existing policy with backend-verified premium\n @param policyId The ID of the policy\n @param premium New premium amount\n @param duration Additional duration in seconds\n @param signature Signature from the backend verifying the renewal parameters"},"functionSelector":"4e494b7c","id":7126,"implemented":true,"kind":"function","modifiers":[{"id":7019,"kind":"modifierInvocation","modifierName":{"id":7018,"name":"nonReentrant","nameLocations":["14151:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"14151:12:13"},"nodeType":"ModifierInvocation","src":"14151:12:13"},{"arguments":[{"id":7021,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"14176:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7022,"kind":"modifierInvocation","modifierName":{"id":7020,"name":"validPolicy","nameLocations":["14164:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"14164:11:13"},"nodeType":"ModifierInvocation","src":"14164:21:13"}],"name":"renewPolicy","nameLocation":"13999:11:13","nodeType":"FunctionDefinition","parameters":{"id":7017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"policyId","nameLocation":"14028:8:13","nodeType":"VariableDeclaration","scope":7126,"src":"14020:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14020:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7012,"mutability":"mutable","name":"premium","nameLocation":"14054:7:13","nodeType":"VariableDeclaration","scope":7126,"src":"14046:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7011,"name":"uint256","nodeType":"ElementaryTypeName","src":"14046:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7014,"mutability":"mutable","name":"duration","nameLocation":"14079:8:13","nodeType":"VariableDeclaration","scope":7126,"src":"14071:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7013,"name":"uint256","nodeType":"ElementaryTypeName","src":"14071:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7016,"mutability":"mutable","name":"signature","nameLocation":"14110:9:13","nodeType":"VariableDeclaration","scope":7126,"src":"14097:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7015,"name":"bytes","nodeType":"ElementaryTypeName","src":"14097:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14010:115:13"},"returnParameters":{"id":7023,"nodeType":"ParameterList","parameters":[],"src":"14186:0:13"},"scope":7172,"src":"13990:1333:13","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":7148,"nodeType":"Block","src":"15529:153:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15655:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15659:6:13","memberName":"sender","nodeType":"MemberAccess","src":"15655:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15647:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7140,"name":"address","nodeType":"ElementaryTypeName","src":"15647:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15647:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7145,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7129,"src":"15668:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7137,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"15627:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15633:13:13","memberName":"withdrawFunds","nodeType":"MemberAccess","referencedDeclaration":9276,"src":"15627:19:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15627:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7147,"nodeType":"ExpressionStatement","src":"15627:48:13"}]},"documentation":{"id":7127,"nodeType":"StructuredDocumentation","src":"15333:97:13","text":"@notice Emergency withdraw function (only for admin)\n @param amount Amount to withdraw"},"functionSelector":"5312ea8e","id":7149,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7132,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"15496:18:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7133,"kind":"modifierInvocation","modifierName":{"id":7131,"name":"onlyRole","nameLocations":["15487:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"15487:8:13"},"nodeType":"ModifierInvocation","src":"15487:28:13"},{"id":7135,"kind":"modifierInvocation","modifierName":{"id":7134,"name":"nonReentrant","nameLocations":["15516:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"15516:12:13"},"nodeType":"ModifierInvocation","src":"15516:12:13"}],"name":"emergencyWithdraw","nameLocation":"15444:17:13","nodeType":"FunctionDefinition","parameters":{"id":7130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7129,"mutability":"mutable","name":"amount","nameLocation":"15470:6:13","nodeType":"VariableDeclaration","scope":7149,"src":"15462:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7128,"name":"uint256","nodeType":"ElementaryTypeName","src":"15462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15461:16:13"},"returnParameters":{"id":7136,"nodeType":"ParameterList","parameters":[],"src":"15529:0:13"},"scope":7172,"src":"15435:247:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7170,"nodeType":"Block","src":"15785:180:13","statements":[{"assignments":[7153,null],"declarations":[{"constant":false,"id":7153,"mutability":"mutable","name":"sent","nameLocation":"15850:4:13","nodeType":"VariableDeclaration","scope":7170,"src":"15845:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7152,"name":"bool","nodeType":"ElementaryTypeName","src":"15845:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7164,"initialValue":{"arguments":[{"hexValue":"","id":7162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15898:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7156,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"15868:5:13","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15860:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7154,"name":"address","nodeType":"ElementaryTypeName","src":"15860:7:13","typeDescriptions":{}}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15860:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15875:4:13","memberName":"call","nodeType":"MemberAccess","src":"15860:19:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15887:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:5:13","memberName":"value","nodeType":"MemberAccess","src":"15887:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15860:37:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15860:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"15844:57:13"},{"expression":{"arguments":[{"id":7166,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"15919:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45544820666f7277617264696e6720746f207661756c74206661696c6564","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15925:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480","typeString":"literal_string \"ETH forwarding to vault failed\""},"value":"ETH forwarding to vault failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480","typeString":"literal_string \"ETH forwarding to vault failed\""}],"id":7165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15911:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15911:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7169,"nodeType":"ExpressionStatement","src":"15911:47:13"}]},"id":7171,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[],"src":"15765:2:13"},"returnParameters":{"id":7151,"nodeType":"ParameterList","parameters":[],"src":"15785:0:13"},"scope":7172,"src":"15758:207:13","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":7173,"src":"399:15568:13","usedErrors":[305,308,2021,2026,2031],"usedEvents":[317,326,335,6097,6105,6113,6121,6129,6133,6139,6149,6155,6161,6167]}],"src":"33:15934:13"},"id":13},"contracts/mock/PolicyBaseMock.sol":{"ast":{"absolutePath":"contracts/mock/PolicyBaseMock.sol","exportedSymbols":{"AccessControl":[295],"Context":[556],"ECDSA":[2358],"ERC165":[2468],"IAccessControl":[378],"InsuranceVault":[9290],"MessageHashUtils":[2444],"Ownable":[526],"PolicyBase":[7172],"PolicyBaseMock":[8123],"Strings":[2010]},"id":8124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"contracts/base/PolicyBase.sol","file":"../base/PolicyBase.sol","id":7175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8124,"sourceUnit":7173,"src":"58:32:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/InsuranceVault.sol","file":"../utils/InsuranceVault.sol","id":7176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8124,"sourceUnit":9291,"src":"91:37:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7178,"name":"PolicyBase","nameLocations":["241:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":7172,"src":"241:10:14"},"id":7179,"nodeType":"InheritanceSpecifier","src":"241:10:14"}],"canonicalName":"PolicyBaseMock","contractDependencies":[],"contractKind":"contract","documentation":{"id":7177,"nodeType":"StructuredDocumentation","src":"130:84:14","text":"@title PolicyBaseMock\n @notice Mock implementation of PolicyBase for testing"},"fullyImplemented":true,"id":8123,"linearizedBaseContracts":[8123,7172,295,2468,2480,378,556],"name":"PolicyBaseMock","nameLocation":"223:14:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PolicyBaseMock.MockPolicyData","id":7184,"members":[{"constant":false,"id":7181,"mutability":"mutable","name":"metadata","nameLocation":"297:8:14","nodeType":"VariableDeclaration","scope":7184,"src":"290:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7180,"name":"string","nodeType":"ElementaryTypeName","src":"290:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7183,"mutability":"mutable","name":"processed","nameLocation":"320:9:14","nodeType":"VariableDeclaration","scope":7184,"src":"315:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7182,"name":"bool","nodeType":"ElementaryTypeName","src":"315:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MockPolicyData","nameLocation":"265:14:14","nodeType":"StructDefinition","scope":8123,"src":"258:78:14","visibility":"public"},{"constant":false,"id":7189,"mutability":"mutable","name":"mockPolicyData","nameLocation":"389:14:14","nodeType":"VariableDeclaration","scope":8123,"src":"346:57:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MockPolicyData_$7184_storage_$","typeString":"mapping(bytes32 => struct PolicyBaseMock.MockPolicyData)"},"typeName":{"id":7188,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"354:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"346:34:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MockPolicyData_$7184_storage_$","typeString":"mapping(bytes32 => struct PolicyBaseMock.MockPolicyData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7187,"nodeType":"UserDefinedTypeName","pathNode":{"id":7186,"name":"MockPolicyData","nameLocations":["365:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":7184,"src":"365:14:14"},"referencedDeclaration":7184,"src":"365:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_storage_ptr","typeString":"struct PolicyBaseMock.MockPolicyData"}}},"visibility":"private"},{"constant":false,"id":7191,"mutability":"mutable","name":"mockVaultReceiver","nameLocation":"425:17:14","nodeType":"VariableDeclaration","scope":8123,"src":"409:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7190,"name":"address","nodeType":"ElementaryTypeName","src":"409:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":7209,"nodeType":"Block","src":"572:50:14","statements":[{"expression":{"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7202,"name":"mockVaultReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"582:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7205,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"610:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_PolicyBaseMock_$8123","typeString":"contract PolicyBaseMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PolicyBaseMock_$8123","typeString":"contract PolicyBaseMock"}],"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"602:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7203,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:14","typeDescriptions":{}}},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"582:33:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7208,"nodeType":"ExpressionStatement","src":"582:33:14"}]},"id":7210,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7198,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"536:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7199,"name":"_vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"552:13:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":7200,"kind":"baseConstructorSpecifier","modifierName":{"id":7197,"name":"PolicyBase","nameLocations":["525:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":7172,"src":"525:10:14"},"nodeType":"ModifierInvocation","src":"525:41:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7193,"mutability":"mutable","name":"_trustedSigner","nameLocation":"469:14:14","nodeType":"VariableDeclaration","scope":7210,"src":"461:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7192,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7195,"mutability":"mutable","name":"_vaultAddress","nameLocation":"501:13:14","nodeType":"VariableDeclaration","scope":7210,"src":"485:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7194,"name":"address","nodeType":"ElementaryTypeName","src":"485:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"460:55:14"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[],"src":"572:0:14"},"scope":8123,"src":"449:173:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6643],"body":{"id":7225,"nodeType":"Block","src":"692:138:14","statements":[{"expression":{"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7216,"name":"mockPolicyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"702:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MockPolicyData_$7184_storage_$","typeString":"mapping(bytes32 => struct PolicyBaseMock.MockPolicyData storage ref)"}},"id":7218,"indexExpression":{"id":7217,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7212,"src":"717:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"702:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_storage","typeString":"struct PolicyBaseMock.MockPolicyData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"54657374204d65746164617461","id":7220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"768:15:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0ac0e5ae697559c6e65ee305ecfb3f60c9ceb4013915e26729edb0bd828f03d","typeString":"literal_string \"Test Metadata\""},"value":"Test Metadata"},{"hexValue":"74727565","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"808:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c0ac0e5ae697559c6e65ee305ecfb3f60c9ceb4013915e26729edb0bd828f03d","typeString":"literal_string \"Test Metadata\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7219,"name":"MockPolicyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"729:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MockPolicyData_$7184_storage_ptr_$","typeString":"type(struct PolicyBaseMock.MockPolicyData storage pointer)"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["758:8:14","797:9:14"],"names":["metadata","processed"],"nodeType":"FunctionCall","src":"729:94:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_memory_ptr","typeString":"struct PolicyBaseMock.MockPolicyData memory"}},"src":"702:121:14","typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_storage","typeString":"struct PolicyBaseMock.MockPolicyData storage ref"}},"id":7224,"nodeType":"ExpressionStatement","src":"702:121:14"}]},"id":7226,"implemented":true,"kind":"function","modifiers":[],"name":"_processPolicyData","nameLocation":"637:18:14","nodeType":"FunctionDefinition","overrides":{"id":7214,"nodeType":"OverrideSpecifier","overrides":[],"src":"683:8:14"},"parameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"policyId","nameLocation":"664:8:14","nodeType":"VariableDeclaration","scope":7226,"src":"656:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"656:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"655:18:14"},"returnParameters":{"id":7215,"nodeType":"ParameterList","parameters":[],"src":"692:0:14"},"scope":8123,"src":"628:202:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7345,"nodeType":"Block","src":"1090:1050:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7239,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1108:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1125:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1117:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7240,"name":"address","nodeType":"ElementaryTypeName","src":"1117:7:14","typeDescriptions":{}}},"id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1108:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1129:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":7238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1100:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1100:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7247,"nodeType":"ExpressionStatement","src":"1100:53:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7249,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"1171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1181:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1171:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d206d75737420626520706f736974697665","id":7252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1184:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8","typeString":"literal_string \"Premium must be positive\""},"value":"Premium must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8","typeString":"literal_string \"Premium must be positive\""}],"id":7248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1163:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7254,"nodeType":"ExpressionStatement","src":"1163:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7256,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"1229:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1229:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53756d2061737375726564206d75737420626520706f736974697665","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1245:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c","typeString":"literal_string \"Sum assured must be positive\""},"value":"Sum assured must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c","typeString":"literal_string \"Sum assured must be positive\""}],"id":7255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1221:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7261,"nodeType":"ExpressionStatement","src":"1221:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7263,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"1294:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1294:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1308:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""},"value":"Duration must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""}],"id":7262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1286:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"ExpressionStatement","src":"1286:50:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7270,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1354:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1358:5:14","memberName":"value","nodeType":"MemberAccess","src":"1354:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7272,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"1367:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1354:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","id":7274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1376:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""},"value":"Incorrect premium amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""}],"id":7269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1346:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1346:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7276,"nodeType":"ExpressionStatement","src":"1346:57:14"},{"assignments":[7278],"declarations":[{"constant":false,"id":7278,"mutability":"mutable","name":"policyId","nameLocation":"1430:8:14","nodeType":"VariableDeclaration","scope":7345,"src":"1422:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1422:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7284,"initialValue":{"arguments":[{"id":7280,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1458:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7281,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1465:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1471:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1465:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7279,"name":"generatePolicyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1441:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256) pure returns (bytes32)"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1441:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1422:59:14"},{"expression":{"arguments":[{"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1499:28:14","subExpression":{"expression":{"baseExpression":{"id":7286,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"1500:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7288,"indexExpression":{"id":7287,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"1509:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1500:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":7289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1519:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"1500:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920657869737473","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1529:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26","typeString":"literal_string \"Policy already exists\""},"value":"Policy already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26","typeString":"literal_string \"Policy already exists\""}],"id":7285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1491:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1491:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7293,"nodeType":"ExpressionStatement","src":"1491:62:14"},{"expression":{"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7294,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"1564:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7296,"indexExpression":{"id":7295,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"1573:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1564:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7298,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"1616:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7299,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1645:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7300,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"1673:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7301,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"1706:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7302,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1738:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1744:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1738:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7304,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"1756:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1738:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1788:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1817:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":7308,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1847:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1853:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"1847:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7297,"name":"Policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"1585:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Policy_$6060_storage_ptr_$","typeString":"type(struct PolicyBase.Policy storage pointer)"}},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1606:8:14","1638:5:14","1664:7:14","1694:10:14","1730:6:14","1778:8:14","1806:9:14","1836:9:14"],"names":["policyId","owner","premium","sumAssured","expiry","isActive","isClaimed","createdAt"],"nodeType":"FunctionCall","src":"1585:288:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"src":"1564:309:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":7312,"nodeType":"ExpressionStatement","src":"1564:309:14"},{"expression":{"arguments":[{"id":7314,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"1903:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7313,"name":"_processPolicyData","nodeType":"Identifier","overloadedDeclarations":[7226],"referencedDeclaration":7226,"src":"1884:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7316,"nodeType":"ExpressionStatement","src":"1884:28:14"},{"assignments":[7318,null],"declarations":[{"constant":false,"id":7318,"mutability":"mutable","name":"sent","nameLocation":"1928:4:14","nodeType":"VariableDeclaration","scope":7345,"src":"1923:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7317,"name":"bool","nodeType":"ElementaryTypeName","src":"1923:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7328,"initialValue":{"arguments":[{"hexValue":"","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1974:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7321,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"1946:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":7320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7319,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:14","typeDescriptions":{}}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1953:4:14","memberName":"call","nodeType":"MemberAccess","src":"1938:19:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7324,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"1965:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1938:35:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1922:55:14"},{"expression":{"arguments":[{"id":7330,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"1995:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","id":7331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2001:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""},"value":"Premium transfer to vault failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""}],"id":7329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1987:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7333,"nodeType":"ExpressionStatement","src":"1987:49:14"},{"eventCall":{"arguments":[{"id":7335,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"2068:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7336,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"2078:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7337,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"2085:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7338,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"2094:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7339,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2106:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2112:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"2106:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7341,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"2124:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2106:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7334,"name":"PolicyPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"2052:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256,uint256)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2052:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7344,"nodeType":"EmitStatement","src":"2047:86:14"}]},"documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"836:86:14","text":"@notice Mock function to directly purchase a policy without signature verification"},"functionSelector":"528331db","id":7346,"implemented":true,"kind":"function","modifiers":[],"name":"purchasePolicyWithoutSignature","nameLocation":"936:30:14","nodeType":"FunctionDefinition","parameters":{"id":7236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"owner","nameLocation":"984:5:14","nodeType":"VariableDeclaration","scope":7346,"src":"976:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7228,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7231,"mutability":"mutable","name":"premium","nameLocation":"1007:7:14","nodeType":"VariableDeclaration","scope":7346,"src":"999:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7230,"name":"uint256","nodeType":"ElementaryTypeName","src":"999:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7233,"mutability":"mutable","name":"sumAssured","nameLocation":"1032:10:14","nodeType":"VariableDeclaration","scope":7346,"src":"1024:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7235,"mutability":"mutable","name":"duration","nameLocation":"1060:8:14","nodeType":"VariableDeclaration","scope":7346,"src":"1052:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"966:108:14"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[],"src":"1090:0:14"},"scope":8123,"src":"927:1213:14","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7499,"nodeType":"Block","src":"2426:1419:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"2444:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2461:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2453:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7364,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:14","typeDescriptions":{}}},"id":7367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2453:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2444:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":7369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2465:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":7362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2436:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7371,"nodeType":"ExpressionStatement","src":"2436:53:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"2507:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2507:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d206d75737420626520706f736974697665","id":7376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2520:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8","typeString":"literal_string \"Premium must be positive\""},"value":"Premium must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8","typeString":"literal_string \"Premium must be positive\""}],"id":7372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2499:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2499:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7378,"nodeType":"ExpressionStatement","src":"2499:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7380,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"2565:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2578:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2565:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53756d2061737375726564206d75737420626520706f736974697665","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2581:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c","typeString":"literal_string \"Sum assured must be positive\""},"value":"Sum assured must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c","typeString":"literal_string \"Sum assured must be positive\""}],"id":7379,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2557:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7385,"nodeType":"ExpressionStatement","src":"2557:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7387,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"2630:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2641:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2630:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","id":7390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2644:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""},"value":"Duration must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""}],"id":7386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2622:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2622:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7392,"nodeType":"ExpressionStatement","src":"2622:50:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2690:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2694:5:14","memberName":"value","nodeType":"MemberAccess","src":"2690:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7396,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"2703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","id":7398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2712:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""},"value":"Incorrect premium amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""}],"id":7393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2682:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2682:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7400,"nodeType":"ExpressionStatement","src":"2682:57:14"},{"assignments":[7402],"declarations":[{"constant":false,"id":7402,"mutability":"mutable","name":"messageHash","nameLocation":"2766:11:14","nodeType":"VariableDeclaration","scope":7499,"src":"2758:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7414,"initialValue":{"arguments":[{"arguments":[{"id":7406,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"2837:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7407,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"2860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7408,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"2885:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7409,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"2913:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7410,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2939:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2945:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"2939:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7404,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2803:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2807:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"2803:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:163:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7403,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2780:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2780:196:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2758:218:14"},{"expression":{"arguments":[{"arguments":[{"id":7417,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"3010:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7418,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3023:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7416,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"2994:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2994:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3035:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2986:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7422,"nodeType":"ExpressionStatement","src":"2986:69:14"},{"expression":{"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7423,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"3065:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7427,"indexExpression":{"arguments":[{"id":7425,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3090:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7424,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3080:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3065:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3104:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3065:43:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7430,"nodeType":"ExpressionStatement","src":"3065:43:14"},{"assignments":[7432],"declarations":[{"constant":false,"id":7432,"mutability":"mutable","name":"policyId","nameLocation":"3135:8:14","nodeType":"VariableDeclaration","scope":7499,"src":"3127:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3127:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7438,"initialValue":{"arguments":[{"id":7434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"3163:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7435,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3170:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3170:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7433,"name":"generatePolicyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"3146:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,uint256) pure returns (bytes32)"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3146:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3127:59:14"},{"expression":{"arguments":[{"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3204:28:14","subExpression":{"expression":{"baseExpression":{"id":7440,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"3205:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7442,"indexExpression":{"id":7441,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"3214:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3205:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":7443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3224:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"3205:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920657869737473","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3234:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26","typeString":"literal_string \"Policy already exists\""},"value":"Policy already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26","typeString":"literal_string \"Policy already exists\""}],"id":7439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3196:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7447,"nodeType":"ExpressionStatement","src":"3196:62:14"},{"expression":{"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7448,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"3269:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7450,"indexExpression":{"id":7449,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"3278:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3269:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7452,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"3321:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7453,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"3350:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7454,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"3378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7455,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"3411:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7456,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3443:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3449:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3443:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7458,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"3461:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3443:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3493:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3522:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":7462,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3552:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3558:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3552:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7451,"name":"Policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"3290:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Policy_$6060_storage_ptr_$","typeString":"type(struct PolicyBase.Policy storage pointer)"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3311:8:14","3343:5:14","3369:7:14","3399:10:14","3435:6:14","3483:8:14","3511:9:14","3541:9:14"],"names":["policyId","owner","premium","sumAssured","expiry","isActive","isClaimed","createdAt"],"nodeType":"FunctionCall","src":"3290:288:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"src":"3269:309:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"id":7466,"nodeType":"ExpressionStatement","src":"3269:309:14"},{"expression":{"arguments":[{"id":7468,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"3608:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7467,"name":"_processPolicyData","nodeType":"Identifier","overloadedDeclarations":[7226],"referencedDeclaration":7226,"src":"3589:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7470,"nodeType":"ExpressionStatement","src":"3589:28:14"},{"assignments":[7472,null],"declarations":[{"constant":false,"id":7472,"mutability":"mutable","name":"sent","nameLocation":"3633:4:14","nodeType":"VariableDeclaration","scope":7499,"src":"3628:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7471,"name":"bool","nodeType":"ElementaryTypeName","src":"3628:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7482,"initialValue":{"arguments":[{"hexValue":"","id":7480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3679:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7475,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"3651:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":7474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3643:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7473,"name":"address","nodeType":"ElementaryTypeName","src":"3643:7:14","typeDescriptions":{}}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3643:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3658:4:14","memberName":"call","nodeType":"MemberAccess","src":"3643:19:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7478,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"3670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3643:35:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3643:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3627:55:14"},{"expression":{"arguments":[{"id":7484,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"3700:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3706:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""},"value":"Premium transfer to vault failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""}],"id":7483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3692:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7487,"nodeType":"ExpressionStatement","src":"3692:49:14"},{"eventCall":{"arguments":[{"id":7489,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"3773:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7490,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"3783:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7491,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"3790:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7492,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"3799:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7493,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3811:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3817:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3811:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7495,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"3829:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3811:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7488,"name":"PolicyPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"3757:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256,uint256)"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7498,"nodeType":"EmitStatement","src":"3752:86:14"}]},"documentation":{"id":7347,"nodeType":"StructuredDocumentation","src":"2146:70:14","text":"@notice Test version of purchasePolicy with signature verification"},"functionSelector":"b04a733b","id":7500,"implemented":true,"kind":"function","modifiers":[{"id":7360,"kind":"modifierInvocation","modifierName":{"id":7359,"name":"nonReentrant","nameLocations":["2413:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":6241,"src":"2413:12:14"},"nodeType":"ModifierInvocation","src":"2413:12:14"}],"name":"purchasePolicyWithSignature","nameLocation":"2230:27:14","nodeType":"FunctionDefinition","parameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"owner","nameLocation":"2275:5:14","nodeType":"VariableDeclaration","scope":7500,"src":"2267:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7348,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7351,"mutability":"mutable","name":"premium","nameLocation":"2298:7:14","nodeType":"VariableDeclaration","scope":7500,"src":"2290:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7353,"mutability":"mutable","name":"sumAssured","nameLocation":"2323:10:14","nodeType":"VariableDeclaration","scope":7500,"src":"2315:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7355,"mutability":"mutable","name":"duration","nameLocation":"2351:8:14","nodeType":"VariableDeclaration","scope":7500,"src":"2343:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7354,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7357,"mutability":"mutable","name":"signature","nameLocation":"2382:9:14","nodeType":"VariableDeclaration","scope":7500,"src":"2369:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7356,"name":"bytes","nodeType":"ElementaryTypeName","src":"2369:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2257:140:14"},"returnParameters":{"id":7361,"nodeType":"ParameterList","parameters":[],"src":"2426:0:14"},"scope":8123,"src":"2221:1624:14","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":7512,"nodeType":"Block","src":"3942:48:14","statements":[{"expression":{"baseExpression":{"id":7508,"name":"mockPolicyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"3959:14:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_MockPolicyData_$7184_storage_$","typeString":"mapping(bytes32 => struct PolicyBaseMock.MockPolicyData storage ref)"}},"id":7510,"indexExpression":{"id":7509,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"3974:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3959:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_storage","typeString":"struct PolicyBaseMock.MockPolicyData storage ref"}},"functionReturnParameters":7507,"id":7511,"nodeType":"Return","src":"3952:31:14"}]},"functionSelector":"6e9747ca","id":7513,"implemented":true,"kind":"function","modifiers":[],"name":"getMockPolicyData","nameLocation":"3860:17:14","nodeType":"FunctionDefinition","parameters":{"id":7503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7502,"mutability":"mutable","name":"policyId","nameLocation":"3886:8:14","nodeType":"VariableDeclaration","scope":7513,"src":"3878:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3878:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3877:18:14"},"returnParameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7513,"src":"3919:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_memory_ptr","typeString":"struct PolicyBaseMock.MockPolicyData"},"typeName":{"id":7505,"nodeType":"UserDefinedTypeName","pathNode":{"id":7504,"name":"MockPolicyData","nameLocations":["3919:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":7184,"src":"3919:14:14"},"referencedDeclaration":7184,"src":"3919:14:14","typeDescriptions":{"typeIdentifier":"t_struct$_MockPolicyData_$7184_storage_ptr","typeString":"struct PolicyBaseMock.MockPolicyData"}},"visibility":"internal"}],"src":"3918:23:14"},"scope":8123,"src":"3851:139:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7555,"nodeType":"Block","src":"4071:246:14","statements":[{"assignments":[7523],"declarations":[{"constant":false,"id":7523,"mutability":"mutable","name":"policy","nameLocation":"4096:6:14","nodeType":"VariableDeclaration","scope":7555,"src":"4081:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7522,"nodeType":"UserDefinedTypeName","pathNode":{"id":7521,"name":"Policy","nameLocations":["4081:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"4081:6:14"},"referencedDeclaration":6060,"src":"4081:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7527,"initialValue":{"baseExpression":{"id":7524,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"4105:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7526,"indexExpression":{"id":7525,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"4114:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4105:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4081:42:14"},{"expression":{"arguments":[{"expression":{"id":7529,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"4141:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4148:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"4141:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":7531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4158:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":7528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4133:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4133:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7533,"nodeType":"ExpressionStatement","src":"4133:45:14"},{"expression":{"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7534,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"4189:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4196:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"4189:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4207:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4189:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7539,"nodeType":"ExpressionStatement","src":"4189:23:14"},{"expression":{"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7540,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"4222:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4229:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4222:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7543,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4238:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4244:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"4238:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4238:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4222:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7548,"nodeType":"ExpressionStatement","src":"4222:35:14"},{"eventCall":{"arguments":[{"id":7550,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"4287:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7551,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"4297:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"4297:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7549,"name":"PolicyExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"4273:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7554,"nodeType":"EmitStatement","src":"4268:42:14"}]},"functionSelector":"6def90b7","id":7556,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7518,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"4059:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7519,"kind":"modifierInvocation","modifierName":{"id":7517,"name":"onlyRole","nameLocations":["4050:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4050:8:14"},"nodeType":"ModifierInvocation","src":"4050:20:14"}],"name":"forceExpirePolicy","nameLocation":"4005:17:14","nodeType":"FunctionDefinition","parameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"policyId","nameLocation":"4031:8:14","nodeType":"VariableDeclaration","scope":7556,"src":"4023:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4023:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4022:18:14"},"returnParameters":{"id":7520,"nodeType":"ParameterList","parameters":[],"src":"4071:0:14"},"scope":8123,"src":"3996:321:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7598,"nodeType":"Block","src":"4415:261:14","statements":[{"assignments":[7568],"declarations":[{"constant":false,"id":7568,"mutability":"mutable","name":"policy","nameLocation":"4440:6:14","nodeType":"VariableDeclaration","scope":7598,"src":"4425:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7567,"nodeType":"UserDefinedTypeName","pathNode":{"id":7566,"name":"Policy","nameLocations":["4425:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"4425:6:14"},"referencedDeclaration":6060,"src":"4425:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7572,"initialValue":{"baseExpression":{"id":7569,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"4449:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7571,"indexExpression":{"id":7570,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"4458:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4449:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4425:42:14"},{"expression":{"arguments":[{"expression":{"id":7574,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"4485:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4492:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"4485:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4502:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":7573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4477:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4477:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"ExpressionStatement","src":"4477:45:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7579,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"4536:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4536:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7581,"name":"timeToAdvance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"4552:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4536:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7596,"nodeType":"Block","src":"4628:42:14","statements":[{"expression":{"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7590,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"4642:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4649:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4642:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4658:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4642:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7595,"nodeType":"ExpressionStatement","src":"4642:17:14"}]},"id":7597,"nodeType":"IfStatement","src":"4532:138:14","trueBody":{"id":7589,"nodeType":"Block","src":"4567:55:14","statements":[{"expression":{"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7583,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"4581:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4588:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4581:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":7586,"name":"timeToAdvance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7560,"src":"4598:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4581:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7588,"nodeType":"ExpressionStatement","src":"4581:30:14"}]}}]},"functionSelector":"5f64e78a","id":7599,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7563,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"4403:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7564,"kind":"modifierInvocation","modifierName":{"id":7562,"name":"onlyRole","nameLocations":["4394:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4394:8:14"},"nodeType":"ModifierInvocation","src":"4394:20:14"}],"name":"advanceTime","nameLocation":"4332:11:14","nodeType":"FunctionDefinition","parameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7558,"mutability":"mutable","name":"policyId","nameLocation":"4352:8:14","nodeType":"VariableDeclaration","scope":7599,"src":"4344:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4344:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7560,"mutability":"mutable","name":"timeToAdvance","nameLocation":"4370:13:14","nodeType":"VariableDeclaration","scope":7599,"src":"4362:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7559,"name":"uint256","nodeType":"ElementaryTypeName","src":"4362:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4343:41:14"},"returnParameters":{"id":7565,"nodeType":"ParameterList","parameters":[],"src":"4415:0:14"},"scope":8123,"src":"4323:353:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7664,"nodeType":"Block","src":"4961:579:14","statements":[{"assignments":[7612],"declarations":[{"constant":false,"id":7612,"mutability":"mutable","name":"policy","nameLocation":"4986:6:14","nodeType":"VariableDeclaration","scope":7664,"src":"4971:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7611,"nodeType":"UserDefinedTypeName","pathNode":{"id":7610,"name":"Policy","nameLocations":["4971:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"4971:6:14"},"referencedDeclaration":6060,"src":"4971:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7616,"initialValue":{"baseExpression":{"id":7613,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"4995:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7615,"indexExpression":{"id":7614,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"5004:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4995:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4971:42:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7618,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"5031:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7619,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"5041:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5048:10:14","memberName":"sumAssured","nodeType":"MemberAccess","referencedDeclaration":6051,"src":"5041:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5031:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20657863656564732073756d2061737375726564","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5060:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158","typeString":"literal_string \"Claim exceeds sum assured\""},"value":"Claim exceeds sum assured"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158","typeString":"literal_string \"Claim exceeds sum assured\""}],"id":7617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5023:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5023:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7624,"nodeType":"ExpressionStatement","src":"5023:65:14"},{"expression":{"arguments":[{"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5106:17:14","subExpression":{"expression":{"id":7626,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"5107:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5114:9:14","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"5107:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":7629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5125:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":7625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5098:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7631,"nodeType":"ExpressionStatement","src":"5098:52:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7633,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5168:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5174:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"5168:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7635,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"5186:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5193:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"5186:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c6963792065787069726564","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5201:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""},"value":"Policy expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700","typeString":"literal_string \"Policy expired\""}],"id":7632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7640,"nodeType":"ExpressionStatement","src":"5160:58:14"},{"expression":{"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7641,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"5237:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":7643,"indexExpression":{"id":7642,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"5244:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5237:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7645,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"5293:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7646,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"5323:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5354:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7648,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5383:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5389:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"5383:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7650,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5429:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5435:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"5429:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7652,"name":"claimExpiryPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"5447:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5429:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7644,"name":"ClaimRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"5256:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ClaimRequest_$6071_storage_ptr_$","typeString":"type(struct PolicyBase.ClaimRequest storage pointer)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5283:8:14","5315:6:14","5343:9:14","5372:9:14","5412:15:14"],"names":["policyId","amount","isPending","createdAt","expiryTimestamp"],"nodeType":"FunctionCall","src":"5256:219:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_memory_ptr","typeString":"struct PolicyBase.ClaimRequest memory"}},"src":"5237:238:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"id":7656,"nodeType":"ExpressionStatement","src":"5237:238:14"},{"eventCall":{"arguments":[{"id":7658,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"5502:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7659,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"5512:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5519:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"5512:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7661,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"5526:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7657,"name":"ClaimFiled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"5491:10:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5491:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7663,"nodeType":"EmitStatement","src":"5486:47:14"}]},"documentation":{"id":7600,"nodeType":"StructuredDocumentation","src":"4682:154:14","text":"@notice File a claim without signature verification (for testing only)\n @param policyId The ID of the policy\n @param amount Claim amount"},"functionSelector":"2aadb560","id":7665,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7607,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"4951:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7608,"kind":"modifierInvocation","modifierName":{"id":7606,"name":"validPolicy","nameLocations":["4939:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"4939:11:14"},"nodeType":"ModifierInvocation","src":"4939:21:14"}],"name":"fileClaimWithoutSignature","nameLocation":"4850:25:14","nodeType":"FunctionDefinition","parameters":{"id":7605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7602,"mutability":"mutable","name":"policyId","nameLocation":"4893:8:14","nodeType":"VariableDeclaration","scope":7665,"src":"4885:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4885:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7604,"mutability":"mutable","name":"amount","nameLocation":"4919:6:14","nodeType":"VariableDeclaration","scope":7665,"src":"4911:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4911:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4875:56:14"},"returnParameters":{"id":7609,"nodeType":"ParameterList","parameters":[],"src":"4961:0:14"},"scope":8123,"src":"4841:699:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7719,"nodeType":"Block","src":"5702:296:14","statements":[{"assignments":[7681],"declarations":[{"constant":false,"id":7681,"mutability":"mutable","name":"policy","nameLocation":"5727:6:14","nodeType":"VariableDeclaration","scope":7719,"src":"5712:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7680,"nodeType":"UserDefinedTypeName","pathNode":{"id":7679,"name":"Policy","nameLocations":["5712:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"5712:6:14"},"referencedDeclaration":6060,"src":"5712:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7685,"initialValue":{"baseExpression":{"id":7682,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"5736:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7684,"indexExpression":{"id":7683,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"5745:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5736:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5712:42:14"},{"assignments":[7688],"declarations":[{"constant":false,"id":7688,"mutability":"mutable","name":"claim","nameLocation":"5785:5:14","nodeType":"VariableDeclaration","scope":7719,"src":"5764:26:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"},"typeName":{"id":7687,"nodeType":"UserDefinedTypeName","pathNode":{"id":7686,"name":"ClaimRequest","nameLocations":["5764:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"5764:12:14"},"referencedDeclaration":6071,"src":"5764:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}},"visibility":"internal"}],"id":7692,"initialValue":{"baseExpression":{"id":7689,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"5793:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":7691,"indexExpression":{"id":7690,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"5800:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5793:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5764:45:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7694,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"5827:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5834:8:14","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":6045,"src":"5827:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7696,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"5846:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5827:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":7698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5856:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":7693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5819:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5819:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7700,"nodeType":"ExpressionStatement","src":"5819:61:14"},{"expression":{"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7701,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"5890:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":7703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5896:9:14","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"5890:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7704,"name":"isPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"5908:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5890:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7706,"nodeType":"ExpressionStatement","src":"5890:27:14"},{"expression":{"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7707,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"5927:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5934:9:14","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"5927:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7710,"name":"isClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"5946:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5927:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"ExpressionStatement","src":"5927:28:14"},{"expression":{"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7713,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7681,"src":"5965:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5972:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"5965:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7716,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"5983:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5965:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7718,"nodeType":"ExpressionStatement","src":"5965:26:14"}]},"functionSelector":"08b3bf82","id":7720,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7676,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"5690:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7677,"kind":"modifierInvocation","modifierName":{"id":7675,"name":"onlyRole","nameLocations":["5681:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5681:8:14"},"nodeType":"ModifierInvocation","src":"5681:20:14"}],"name":"setClaimState","nameLocation":"5555:13:14","nodeType":"FunctionDefinition","parameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7667,"mutability":"mutable","name":"policyId","nameLocation":"5586:8:14","nodeType":"VariableDeclaration","scope":7720,"src":"5578:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5578:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7669,"mutability":"mutable","name":"isPending","nameLocation":"5609:9:14","nodeType":"VariableDeclaration","scope":7720,"src":"5604:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7668,"name":"bool","nodeType":"ElementaryTypeName","src":"5604:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7671,"mutability":"mutable","name":"isClaimed","nameLocation":"5633:9:14","nodeType":"VariableDeclaration","scope":7720,"src":"5628:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7670,"name":"bool","nodeType":"ElementaryTypeName","src":"5628:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7673,"mutability":"mutable","name":"isActive","nameLocation":"5657:8:14","nodeType":"VariableDeclaration","scope":7720,"src":"5652:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7672,"name":"bool","nodeType":"ElementaryTypeName","src":"5652:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5568:103:14"},"returnParameters":{"id":7678,"nodeType":"ParameterList","parameters":[],"src":"5702:0:14"},"scope":8123,"src":"5546:452:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7804,"nodeType":"Block","src":"6163:541:14","statements":[{"assignments":[7734],"declarations":[{"constant":false,"id":7734,"mutability":"mutable","name":"policy","nameLocation":"6188:6:14","nodeType":"VariableDeclaration","scope":7804,"src":"6173:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7733,"nodeType":"UserDefinedTypeName","pathNode":{"id":7732,"name":"Policy","nameLocations":["6173:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"6173:6:14"},"referencedDeclaration":6060,"src":"6173:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7738,"initialValue":{"baseExpression":{"id":7735,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"6197:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7737,"indexExpression":{"id":7736,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"6206:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6197:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6173:42:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7740,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6233:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6240:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6233:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6249:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6253:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6249:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6233:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","id":7745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6261:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""},"value":"Not the policy owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""}],"id":7739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6225:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7747,"nodeType":"ExpressionStatement","src":"6225:59:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6302:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6306:5:14","memberName":"value","nodeType":"MemberAccess","src":"6302:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7751,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"6315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6302:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6324:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""},"value":"Incorrect premium amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""}],"id":7748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6294:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6294:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7755,"nodeType":"ExpressionStatement","src":"6294:57:14"},{"expression":{"arguments":[{"id":7759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6369:17:14","subExpression":{"expression":{"id":7757,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6370:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6377:9:14","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"6370:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":7760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6388:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":7756,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6361:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6361:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7762,"nodeType":"ExpressionStatement","src":"6361:52:14"},{"expression":{"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7763,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6423:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6430:7:14","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":6049,"src":"6423:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7766,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"6440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6423:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7768,"nodeType":"ExpressionStatement","src":"6423:24:14"},{"expression":{"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7769,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6457:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6464:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"6457:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7772,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6473:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6480:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"6473:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7774,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"6489:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6473:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6457:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7777,"nodeType":"ExpressionStatement","src":"6457:40:14"},{"assignments":[7779,null],"declarations":[{"constant":false,"id":7779,"mutability":"mutable","name":"sent","nameLocation":"6513:4:14","nodeType":"VariableDeclaration","scope":7804,"src":"6508:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7778,"name":"bool","nodeType":"ElementaryTypeName","src":"6508:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7789,"initialValue":{"arguments":[{"hexValue":"","id":7787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6559:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7782,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"6531:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":7781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6523:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7780,"name":"address","nodeType":"ElementaryTypeName","src":"6523:7:14","typeDescriptions":{}}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6538:4:14","memberName":"call","nodeType":"MemberAccess","src":"6523:19:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":7785,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"6550:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6523:35:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6507:55:14"},{"expression":{"arguments":[{"id":7791,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7779,"src":"6580:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","id":7792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6586:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""},"value":"Premium transfer to vault failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd","typeString":"literal_string \"Premium transfer to vault failed\""}],"id":7790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6572:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6572:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7794,"nodeType":"ExpressionStatement","src":"6572:49:14"},{"eventCall":{"arguments":[{"id":7796,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"6650:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7797,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6660:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6667:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6660:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7799,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"6674:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7800,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"6683:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6690:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"6683:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7795,"name":"PolicyRenewed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"6636:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6636:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7803,"nodeType":"EmitStatement","src":"6631:66:14"}]},"functionSelector":"2f1ed59e","id":7805,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7729,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7722,"src":"6153:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7730,"kind":"modifierInvocation","modifierName":{"id":7728,"name":"validPolicy","nameLocations":["6141:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"6141:11:14"},"nodeType":"ModifierInvocation","src":"6141:21:14"}],"name":"renewPolicyWithoutSignature","nameLocation":"6013:27:14","nodeType":"FunctionDefinition","parameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"policyId","nameLocation":"6058:8:14","nodeType":"VariableDeclaration","scope":7805,"src":"6050:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6050:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7724,"mutability":"mutable","name":"premium","nameLocation":"6084:7:14","nodeType":"VariableDeclaration","scope":7805,"src":"6076:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6076:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7726,"mutability":"mutable","name":"duration","nameLocation":"6109:8:14","nodeType":"VariableDeclaration","scope":7805,"src":"6101:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7725,"name":"uint256","nodeType":"ElementaryTypeName","src":"6101:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6040:83:14"},"returnParameters":{"id":7731,"nodeType":"ParameterList","parameters":[],"src":"6163:0:14"},"scope":8123,"src":"6004:700:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7857,"nodeType":"Block","src":"6833:343:14","statements":[{"assignments":[7817],"declarations":[{"constant":false,"id":7817,"mutability":"mutable","name":"policy","nameLocation":"6858:6:14","nodeType":"VariableDeclaration","scope":7857,"src":"6843:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7816,"nodeType":"UserDefinedTypeName","pathNode":{"id":7815,"name":"Policy","nameLocations":["6843:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"6843:6:14"},"referencedDeclaration":6060,"src":"6843:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7821,"initialValue":{"baseExpression":{"id":7818,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"6867:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7820,"indexExpression":{"id":7819,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"6876:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6867:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6843:42:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7823,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"6903:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6910:8:14","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":6045,"src":"6903:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7825,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"6922:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6903:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6932:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":7822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6895:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6895:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7829,"nodeType":"ExpressionStatement","src":"6895:61:14"},{"expression":{"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7830,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"6966:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6973:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"6966:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7833,"name":"expiryTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"6982:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6966:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7835,"nodeType":"ExpressionStatement","src":"6966:31:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7836,"name":"expiryTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"7011:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7837,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7030:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7036:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7030:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7011:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":7840,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"7049:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7056:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"7049:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7011:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7856,"nodeType":"IfStatement","src":"7007:163:14","trueBody":{"id":7855,"nodeType":"Block","src":"7066:104:14","statements":[{"expression":{"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7843,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"7080:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7087:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"7080:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7098:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7080:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7848,"nodeType":"ExpressionStatement","src":"7080:23:14"},{"eventCall":{"arguments":[{"id":7850,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"7136:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7851,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7817,"src":"7146:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7153:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"7146:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7849,"name":"PolicyExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"7122:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7122:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7854,"nodeType":"EmitStatement","src":"7117:42:14"}]}}]},"functionSelector":"974552f9","id":7858,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7812,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"6821:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7813,"kind":"modifierInvocation","modifierName":{"id":7811,"name":"onlyRole","nameLocations":["6812:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"6812:8:14"},"nodeType":"ModifierInvocation","src":"6812:20:14"}],"name":"setExpiryTimestamp","nameLocation":"6719:18:14","nodeType":"FunctionDefinition","parameters":{"id":7810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7807,"mutability":"mutable","name":"policyId","nameLocation":"6755:8:14","nodeType":"VariableDeclaration","scope":7858,"src":"6747:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6747:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7809,"mutability":"mutable","name":"expiryTimestamp","nameLocation":"6781:15:14","nodeType":"VariableDeclaration","scope":7858,"src":"6773:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6773:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:65:14"},"returnParameters":{"id":7814,"nodeType":"ParameterList","parameters":[],"src":"6833:0:14"},"scope":8123,"src":"6710:466:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7913,"nodeType":"Block","src":"7311:378:14","statements":[{"assignments":[7870],"declarations":[{"constant":false,"id":7870,"mutability":"mutable","name":"policy","nameLocation":"7336:6:14","nodeType":"VariableDeclaration","scope":7913,"src":"7321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7869,"nodeType":"UserDefinedTypeName","pathNode":{"id":7868,"name":"Policy","nameLocations":["7321:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"7321:6:14"},"referencedDeclaration":6060,"src":"7321:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7874,"initialValue":{"baseExpression":{"id":7871,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"7345:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7873,"indexExpression":{"id":7872,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"7354:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7345:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7321:42:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7876,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"7381:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7388:8:14","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":6045,"src":"7381:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7878,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"7400:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7381:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":7880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7410:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":7875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7373:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7373:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7882,"nodeType":"ExpressionStatement","src":"7373:61:14"},{"expression":{"arguments":[{"expression":{"id":7884,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"7452:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7459:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"7452:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7469:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":7883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7444:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7888,"nodeType":"ExpressionStatement","src":"7444:45:14"},{"assignments":[7890],"declarations":[{"constant":false,"id":7890,"mutability":"mutable","name":"newExpiry","nameLocation":"7507:9:14","nodeType":"VariableDeclaration","scope":7913,"src":"7499:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7889,"name":"uint256","nodeType":"ElementaryTypeName","src":"7499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7898,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7891,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7519:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7525:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7519:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7893,"name":"daysBeforeExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"7538:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7557:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"7538:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7537:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7519:45:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7499:65:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7900,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"7582:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7901,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"7595:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7602:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"7595:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7582:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6577206578706972792065786365656473206f726967696e616c20657870697279","id":7904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7610:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6552775c3444956f99dfd3e96a4a5a197740e423e1e715df66bcf38079415142","typeString":"literal_string \"New expiry exceeds original expiry\""},"value":"New expiry exceeds original expiry"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6552775c3444956f99dfd3e96a4a5a197740e423e1e715df66bcf38079415142","typeString":"literal_string \"New expiry exceeds original expiry\""}],"id":7899,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7574:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7906,"nodeType":"ExpressionStatement","src":"7574:73:14"},{"expression":{"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7907,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"7657:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7664:6:14","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"7657:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7910,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"7673:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7657:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7912,"nodeType":"ExpressionStatement","src":"7657:25:14"}]},"functionSelector":"f99dec74","id":7914,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7865,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"7299:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7866,"kind":"modifierInvocation","modifierName":{"id":7864,"name":"onlyRole","nameLocations":["7290:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"7290:8:14"},"nodeType":"ModifierInvocation","src":"7290:20:14"}],"name":"setTimeToNearExpiry","nameLocation":"7195:19:14","nodeType":"FunctionDefinition","parameters":{"id":7863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7860,"mutability":"mutable","name":"policyId","nameLocation":"7232:8:14","nodeType":"VariableDeclaration","scope":7914,"src":"7224:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7224:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7862,"mutability":"mutable","name":"daysBeforeExpiry","nameLocation":"7258:16:14","nodeType":"VariableDeclaration","scope":7914,"src":"7250:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7861,"name":"uint256","nodeType":"ElementaryTypeName","src":"7250:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7214:66:14"},"returnParameters":{"id":7867,"nodeType":"ParameterList","parameters":[],"src":"7311:0:14"},"scope":8123,"src":"7186:503:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7965,"nodeType":"Block","src":"8028:440:14","statements":[{"assignments":[7929],"declarations":[{"constant":false,"id":7929,"mutability":"mutable","name":"policy","nameLocation":"8053:6:14","nodeType":"VariableDeclaration","scope":7965,"src":"8038:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7928,"nodeType":"UserDefinedTypeName","pathNode":{"id":7927,"name":"Policy","nameLocations":["8038:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"8038:6:14"},"referencedDeclaration":6060,"src":"8038:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7933,"initialValue":{"baseExpression":{"id":7930,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"8062:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7932,"indexExpression":{"id":7931,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"8071:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8062:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8038:42:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7935,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"8098:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:8:14","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":6045,"src":"8098:15:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7937,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"8117:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8098:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":7939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8127:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":7934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8090:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8090:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7941,"nodeType":"ExpressionStatement","src":"8090:61:14"},{"expression":{"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7942,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"8161:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":7944,"indexExpression":{"id":7943,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"8168:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7946,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"8217:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"8247:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7948,"name":"isPending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"8278:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7949,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8312:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8318:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"8312:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7951,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8358:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8364:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"8358:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7953,"name":"claimExpiryPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8376:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8358:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7945,"name":"ClaimRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"8180:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ClaimRequest_$6071_storage_ptr_$","typeString":"type(struct PolicyBase.ClaimRequest storage pointer)"}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8207:8:14","8239:6:14","8267:9:14","8301:9:14","8341:15:14"],"names":["policyId","amount","isPending","createdAt","expiryTimestamp"],"nodeType":"FunctionCall","src":"8180:224:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_memory_ptr","typeString":"struct PolicyBase.ClaimRequest memory"}},"src":"8161:243:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"id":7957,"nodeType":"ExpressionStatement","src":"8161:243:14"},{"eventCall":{"arguments":[{"id":7959,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7917,"src":"8430:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7960,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"8440:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":7961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8447:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"8440:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7962,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"8454:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7958,"name":"ClaimFiled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"8419:10:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7964,"nodeType":"EmitStatement","src":"8414:47:14"}]},"documentation":{"id":7915,"nodeType":"StructuredDocumentation","src":"7695:193:14","text":"@notice Create a mock claim directly (for testing only)\n @param policyId The ID of the policy\n @param amount Claim amount\n @param isPending Whether the claim is pending"},"functionSelector":"a9544464","id":7966,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7924,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"8016:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7925,"kind":"modifierInvocation","modifierName":{"id":7923,"name":"onlyRole","nameLocations":["8007:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8007:8:14"},"nodeType":"ModifierInvocation","src":"8007:20:14"}],"name":"createMockClaim","nameLocation":"7902:15:14","nodeType":"FunctionDefinition","parameters":{"id":7922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"policyId","nameLocation":"7935:8:14","nodeType":"VariableDeclaration","scope":7966,"src":"7927:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7927:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7919,"mutability":"mutable","name":"amount","nameLocation":"7961:6:14","nodeType":"VariableDeclaration","scope":7966,"src":"7953:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7918,"name":"uint256","nodeType":"ElementaryTypeName","src":"7953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7921,"mutability":"mutable","name":"isPending","nameLocation":"7982:9:14","nodeType":"VariableDeclaration","scope":7966,"src":"7977:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7920,"name":"bool","nodeType":"ElementaryTypeName","src":"7977:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7917:80:14"},"returnParameters":{"id":7926,"nodeType":"ParameterList","parameters":[],"src":"8028:0:14"},"scope":8123,"src":"7893:575:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8040,"nodeType":"Block","src":"8617:427:14","statements":[{"assignments":[7981],"declarations":[{"constant":false,"id":7981,"mutability":"mutable","name":"claim","nameLocation":"8648:5:14","nodeType":"VariableDeclaration","scope":8040,"src":"8627:26:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"},"typeName":{"id":7980,"nodeType":"UserDefinedTypeName","pathNode":{"id":7979,"name":"ClaimRequest","nameLocations":["8627:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"8627:12:14"},"referencedDeclaration":6071,"src":"8627:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}},"visibility":"internal"}],"id":7985,"initialValue":{"baseExpression":{"id":7982,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"8656:6:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":7984,"indexExpression":{"id":7983,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"8663:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8656:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8627:45:14"},{"assignments":[7988],"declarations":[{"constant":false,"id":7988,"mutability":"mutable","name":"policy","nameLocation":"8697:6:14","nodeType":"VariableDeclaration","scope":8040,"src":"8682:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":7987,"nodeType":"UserDefinedTypeName","pathNode":{"id":7986,"name":"Policy","nameLocations":["8682:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"8682:6:14"},"referencedDeclaration":6060,"src":"8682:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":7992,"initialValue":{"baseExpression":{"id":7989,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"8706:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":7991,"indexExpression":{"id":7990,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"8715:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8706:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8682:42:14"},{"expression":{"arguments":[{"expression":{"id":7994,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"8742:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":7995,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8748:9:14","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"8742:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070656e64696e6720636c61696d","id":7996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8759:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""},"value":"No pending claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""}],"id":7993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8734:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8734:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7998,"nodeType":"ExpressionStatement","src":"8734:44:14"},{"expression":{"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7999,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"8788:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8794:9:14","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"8788:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8806:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8788:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8004,"nodeType":"ExpressionStatement","src":"8788:23:14"},{"expression":{"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8005,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"8821:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8828:9:14","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"8821:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8840:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8821:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8010,"nodeType":"ExpressionStatement","src":"8821:23:14"},{"expression":{"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8011,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"8854:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8861:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"8854:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8872:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8854:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8016,"nodeType":"ExpressionStatement","src":"8854:23:14"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8022,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"8914:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8921:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"8914:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8906:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8020,"name":"address","nodeType":"ElementaryTypeName","src":"8906:8:14","stateMutability":"payable","typeDescriptions":{}}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8906:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":8025,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"8929:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8935:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"8929:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8017,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"8887:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8893:12:14","memberName":"approveClaim","nodeType":"MemberAccess","referencedDeclaration":9180,"src":"8887:18:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8887:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8028,"nodeType":"ExpressionStatement","src":"8887:55:14"},{"eventCall":{"arguments":[{"id":8030,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"8971:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8031,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"8981:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"8981:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8033,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"8995:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9001:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"8995:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8029,"name":"ClaimApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"8957:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8957:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8036,"nodeType":"EmitStatement","src":"8952:56:14"},{"expression":{"expression":{"id":8037,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"9025:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9031:6:14","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"9025:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7978,"id":8039,"nodeType":"Return","src":"9018:19:14"}]},"functionSelector":"20056ed3","id":8041,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7971,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"8565:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7972,"kind":"modifierInvocation","modifierName":{"id":7970,"name":"onlyRole","nameLocations":["8556:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"8556:8:14"},"nodeType":"ModifierInvocation","src":"8556:20:14"},{"arguments":[{"id":7974,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"8589:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7975,"kind":"modifierInvocation","modifierName":{"id":7973,"name":"validPolicy","nameLocations":["8577:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"8577:11:14"},"nodeType":"ModifierInvocation","src":"8577:21:14"}],"name":"approveClaimWithoutVerification","nameLocation":"8483:31:14","nodeType":"FunctionDefinition","parameters":{"id":7969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"mutability":"mutable","name":"policyId","nameLocation":"8532:8:14","nodeType":"VariableDeclaration","scope":8041,"src":"8524:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8524:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8514:32:14"},"returnParameters":{"id":7978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8041,"src":"8608:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7976,"name":"uint256","nodeType":"ElementaryTypeName","src":"8608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8607:9:14"},"scope":8123,"src":"8474:570:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8053,"nodeType":"Block","src":"9135:48:14","statements":[{"expression":{"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8049,"name":"mockVaultReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"9145:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8050,"name":"newReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"9165:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9145:31:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8052,"nodeType":"ExpressionStatement","src":"9145:31:14"}]},"functionSelector":"91cfb505","id":8054,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8046,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"9123:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8047,"kind":"modifierInvocation","modifierName":{"id":8045,"name":"onlyRole","nameLocations":["9114:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9114:8:14"},"nodeType":"ModifierInvocation","src":"9114:20:14"}],"name":"setMockVaultReceiver","nameLocation":"9063:20:14","nodeType":"FunctionDefinition","parameters":{"id":8044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8043,"mutability":"mutable","name":"newReceiver","nameLocation":"9092:11:14","nodeType":"VariableDeclaration","scope":8054,"src":"9084:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8042,"name":"address","nodeType":"ElementaryTypeName","src":"9084:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9083:21:14"},"returnParameters":{"id":8048,"nodeType":"ParameterList","parameters":[],"src":"9135:0:14"},"scope":8123,"src":"9054:129:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8089,"nodeType":"Block","src":"9290:175:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9316:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_PolicyBaseMock_$8123","typeString":"contract PolicyBaseMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PolicyBaseMock_$8123","typeString":"contract PolicyBaseMock"}],"id":8066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9308:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8065,"name":"address","nodeType":"ElementaryTypeName","src":"9308:7:14","typeDescriptions":{}}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9308:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9322:7:14","memberName":"balance","nodeType":"MemberAccess","src":"9308:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8070,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"9333:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9308:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":8072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9341:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":8064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9300:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8074,"nodeType":"ExpressionStatement","src":"9300:64:14"},{"assignments":[8076,null],"declarations":[{"constant":false,"id":8076,"mutability":"mutable","name":"sent","nameLocation":"9380:4:14","nodeType":"VariableDeclaration","scope":8089,"src":"9375:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8075,"name":"bool","nodeType":"ElementaryTypeName","src":"9375:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8083,"initialValue":{"arguments":[{"hexValue":"","id":8081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9413:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":8077,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"9390:2:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9393:4:14","memberName":"call","nodeType":"MemberAccess","src":"9390:7:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":8079,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"9405:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9390:22:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9390:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9374:42:14"},{"expression":{"arguments":[{"id":8085,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8076,"src":"9434:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":8086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9440:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":8084,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9426:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9426:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8088,"nodeType":"ExpressionStatement","src":"9426:32:14"}]},"functionSelector":"8b82e07a","id":8090,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8061,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"9278:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8062,"kind":"modifierInvocation","modifierName":{"id":8060,"name":"onlyRole","nameLocations":["9269:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9269:8:14"},"nodeType":"ModifierInvocation","src":"9269:20:14"}],"name":"simulateVaultTransfer","nameLocation":"9202:21:14","nodeType":"FunctionDefinition","parameters":{"id":8059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8056,"mutability":"mutable","name":"to","nameLocation":"9240:2:14","nodeType":"VariableDeclaration","scope":8090,"src":"9224:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8055,"name":"address","nodeType":"ElementaryTypeName","src":"9224:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":8058,"mutability":"mutable","name":"amount","nameLocation":"9252:6:14","nodeType":"VariableDeclaration","scope":8090,"src":"9244:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8057,"name":"uint256","nodeType":"ElementaryTypeName","src":"9244:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9223:36:14"},"returnParameters":{"id":8063,"nodeType":"ParameterList","parameters":[],"src":"9290:0:14"},"scope":8123,"src":"9193:272:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8121,"nodeType":"Block","src":"9592:149:14","statements":[{"assignments":[8103],"declarations":[{"constant":false,"id":8103,"mutability":"mutable","name":"policy","nameLocation":"9617:6:14","nodeType":"VariableDeclaration","scope":8121,"src":"9602:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8102,"nodeType":"UserDefinedTypeName","pathNode":{"id":8101,"name":"Policy","nameLocations":["9602:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"9602:6:14"},"referencedDeclaration":6060,"src":"9602:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8107,"initialValue":{"baseExpression":{"id":8104,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"9626:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8106,"indexExpression":{"id":8105,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"9635:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9626:18:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9602:42:14"},{"expression":{"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8108,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"9654:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9661:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"9654:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9654:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8113,"nodeType":"ExpressionStatement","src":"9654:23:14"},{"eventCall":{"arguments":[{"id":8115,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"9708:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8116,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"9718:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9725:5:14","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"9718:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":8118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9732:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8114,"name":"PolicyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"9692:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9692:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8120,"nodeType":"EmitStatement","src":"9687:47:14"}]},"functionSelector":"29216c7c","id":8122,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8095,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"9558:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8096,"kind":"modifierInvocation","modifierName":{"id":8094,"name":"onlyRole","nameLocations":["9549:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"9549:8:14"},"nodeType":"ModifierInvocation","src":"9549:20:14"},{"arguments":[{"id":8098,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"9582:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8099,"kind":"modifierInvocation","modifierName":{"id":8097,"name":"validPolicy","nameLocations":["9570:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"9570:11:14"},"nodeType":"ModifierInvocation","src":"9570:21:14"}],"name":"cancelPolicyWithoutTransfer","nameLocation":"9480:27:14","nodeType":"FunctionDefinition","parameters":{"id":8093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8092,"mutability":"mutable","name":"policyId","nameLocation":"9525:8:14","nodeType":"VariableDeclaration","scope":8122,"src":"9517:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9507:32:14"},"returnParameters":{"id":8100,"nodeType":"ParameterList","parameters":[],"src":"9592:0:14"},"scope":8123,"src":"9471:270:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8124,"src":"214:9529:14","usedErrors":[305,308,2021,2026,2031],"usedEvents":[317,326,335,6097,6105,6113,6121,6129,6133,6139,6149,6155,6161,6167]}],"src":"32:9711:14"},"id":14},"contracts/plans/HealthCareLite.sol":{"ast":{"absolutePath":"contracts/plans/HealthCareLite.sol","exportedSymbols":{"AccessControl":[295],"Context":[556],"ECDSA":[2358],"ERC165":[2468],"HealthCareLite":[8687],"IAccessControl":[378],"InsuranceVault":[9290],"MessageHashUtils":[2444],"Ownable":[526],"PolicyBase":[7172],"Strings":[2010]},"id":8688,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8125,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"contracts/base/PolicyBase.sol","file":"../base/PolicyBase.sol","id":8126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8688,"sourceUnit":7173,"src":"58:32:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/InsuranceVault.sol","file":"../utils/InsuranceVault.sol","id":8127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8688,"sourceUnit":9291,"src":"91:37:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8129,"name":"PolicyBase","nameLocations":["398:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":7172,"src":"398:10:15"},"id":8130,"nodeType":"InheritanceSpecifier","src":"398:10:15"}],"canonicalName":"HealthCareLite","contractDependencies":[],"contractKind":"contract","documentation":{"id":8128,"nodeType":"StructuredDocumentation","src":"130:241:15","text":"@title HealthCareLite\n @notice Entry-level health insurance contract with annual maximum coverage and basic hospitalization benefits\n @dev Extends PolicyBase for core functionality with signature verification and vault integration"},"fullyImplemented":true,"id":8687,"linearizedBaseContracts":[8687,7172,295,2468,2480,378,556],"name":"HealthCareLite","nameLocation":"380:14:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":8133,"mutability":"constant","name":"DURATION","nameLocation":"481:8:15","nodeType":"VariableDeclaration","scope":8687,"src":"456:44:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8131,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333635","id":8132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"492:8:15","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"visibility":"private"},{"constant":false,"id":8137,"mutability":"mutable","name":"claimAmounts","nameLocation":"605:12:15","nodeType":"VariableDeclaration","scope":8687,"src":"569:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":8136,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"577:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"569:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8135,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"b1efb5a54d173a08f1d7ae00e21150da481ac80d259826760104a5ba97be6fa8","id":8145,"name":"PremiumCalculated","nameLocation":"682:17:15","nodeType":"EventDefinition","parameters":{"id":8144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8139,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"716:8:15","nodeType":"VariableDeclaration","scope":8145,"src":"700:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"700:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8141,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"742:4:15","nodeType":"VariableDeclaration","scope":8145,"src":"726:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8140,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8143,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"756:7:15","nodeType":"VariableDeclaration","scope":8145,"src":"748:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8142,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"699:65:15"},"src":"676:89:15"},{"anonymous":false,"eventSelector":"957a909a771d0c1c8b37c8f5c6c9df37d8d7c521d3d99445839ede9153d06358","id":8153,"name":"ClaimTransferred","nameLocation":"776:16:15","nodeType":"EventDefinition","parameters":{"id":8152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8147,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"809:8:15","nodeType":"VariableDeclaration","scope":8153,"src":"793:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"793:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8149,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"835:11:15","nodeType":"VariableDeclaration","scope":8153,"src":"819:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8148,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8151,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"856:6:15","nodeType":"VariableDeclaration","scope":8153,"src":"848:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8150,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"792:71:15"},"src":"770:94:15"},{"anonymous":false,"eventSelector":"effda959fad3422ef4e602f1642198e56536dbbf192da630dcbc451b5b5c203d","id":8161,"name":"PolicyRefunded","nameLocation":"875:14:15","nodeType":"EventDefinition","parameters":{"id":8160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8155,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"906:8:15","nodeType":"VariableDeclaration","scope":8161,"src":"890:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8157,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"932:5:15","nodeType":"VariableDeclaration","scope":8161,"src":"916:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8156,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8159,"indexed":false,"mutability":"mutable","name":"refundAmount","nameLocation":"947:12:15","nodeType":"VariableDeclaration","scope":8161,"src":"939:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8158,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"889:71:15"},"src":"869:92:15"},{"body":{"id":8173,"nodeType":"Block","src":"1154:54:15","statements":[]},"documentation":{"id":8162,"nodeType":"StructuredDocumentation","src":"974:52:15","text":"@dev Constructor passes parameters to PolicyBase"},"id":8174,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8169,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"1118:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8170,"name":"_vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"1134:13:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":8171,"kind":"baseConstructorSpecifier","modifierName":{"id":8168,"name":"PolicyBase","nameLocations":["1107:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":7172,"src":"1107:10:15"},"nodeType":"ModifierInvocation","src":"1107:41:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8164,"mutability":"mutable","name":"_trustedSigner","nameLocation":"1051:14:15","nodeType":"VariableDeclaration","scope":8174,"src":"1043:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8163,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8166,"mutability":"mutable","name":"_vaultAddress","nameLocation":"1083:13:15","nodeType":"VariableDeclaration","scope":8174,"src":"1067:29:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8165,"name":"address","nodeType":"ElementaryTypeName","src":"1067:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1042:55:15"},"returnParameters":{"id":8172,"nodeType":"ParameterList","parameters":[],"src":"1154:0:15"},"scope":8687,"src":"1031:177:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6643],"body":{"id":8187,"nodeType":"Block","src":"1352:43:15","statements":[{"expression":{"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8181,"name":"claimAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"1362:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8183,"indexExpression":{"id":8182,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"1375:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1362:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1387:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1362:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8186,"nodeType":"ExpressionStatement","src":"1362:26:15"}]},"documentation":{"id":8175,"nodeType":"StructuredDocumentation","src":"1218:65:15","text":"@notice Process policy-specific data (minimal implementation)"},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"_processPolicyData","nameLocation":"1297:18:15","nodeType":"FunctionDefinition","overrides":{"id":8179,"nodeType":"OverrideSpecifier","overrides":[],"src":"1343:8:15"},"parameters":{"id":8178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"mutability":"mutable","name":"policyId","nameLocation":"1324:8:15","nodeType":"VariableDeclaration","scope":8188,"src":"1316:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1316:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1315:18:15"},"returnParameters":{"id":8180,"nodeType":"ParameterList","parameters":[],"src":"1352:0:15"},"scope":8687,"src":"1288:107:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8223,"nodeType":"Block","src":"1682:354:15","statements":[{"assignments":[8203],"declarations":[{"constant":false,"id":8203,"mutability":"mutable","name":"actualDuration","nameLocation":"1700:14:15","nodeType":"VariableDeclaration","scope":8223,"src":"1692:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8205,"initialValue":{"id":8204,"name":"DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"1717:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1692:33:15"},{"assignments":[8207],"declarations":[{"constant":false,"id":8207,"mutability":"mutable","name":"policyId","nameLocation":"1743:8:15","nodeType":"VariableDeclaration","scope":8223,"src":"1735:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1735:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8216,"initialValue":{"arguments":[{"id":8210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"1775:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8211,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"1782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8212,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"1791:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8213,"name":"actualDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"1803:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8214,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"1819:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8208,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1754:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_HealthCareLite_$8687_$","typeString":"type(contract super HealthCareLite)"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:14:15","memberName":"purchasePolicy","nodeType":"MemberAccess","referencedDeclaration":6637,"src":"1754:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,uint256,bytes memory) returns (bytes32)"}},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1754:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1735:94:15"},{"eventCall":{"arguments":[{"id":8218,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"2004:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8219,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"2014:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8220,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"2021:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8217,"name":"PremiumCalculated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"1986:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8222,"nodeType":"EmitStatement","src":"1981:48:15"}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"1405:79:15","text":"@notice Purchase policy with ETH payment and backend signature verification"},"functionSelector":"aa04cd14","id":8224,"implemented":true,"kind":"function","modifiers":[],"name":"purchaseHealthPolicy","nameLocation":"1498:20:15","nodeType":"FunctionDefinition","parameters":{"id":8200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"owner","nameLocation":"1536:5:15","nodeType":"VariableDeclaration","scope":8224,"src":"1528:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8190,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"premium","nameLocation":"1559:7:15","nodeType":"VariableDeclaration","scope":8224,"src":"1551:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8195,"mutability":"mutable","name":"sumAssured","nameLocation":"1584:10:15","nodeType":"VariableDeclaration","scope":8224,"src":"1576:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8224,"src":"1604:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8199,"mutability":"mutable","name":"signature","nameLocation":"1651:9:15","nodeType":"VariableDeclaration","scope":8224,"src":"1638:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8198,"name":"bytes","nodeType":"ElementaryTypeName","src":"1638:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1518:148:15"},"returnParameters":{"id":8201,"nodeType":"ParameterList","parameters":[],"src":"1682:0:15"},"scope":8687,"src":"1489:547:15","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[6837],"body":{"id":8332,"nodeType":"Block","src":"2279:837:15","statements":[{"assignments":[8241],"declarations":[{"constant":false,"id":8241,"mutability":"mutable","name":"claim","nameLocation":"2310:5:15","nodeType":"VariableDeclaration","scope":8332,"src":"2289:26:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"},"typeName":{"id":8240,"nodeType":"UserDefinedTypeName","pathNode":{"id":8239,"name":"ClaimRequest","nameLocations":["2289:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"2289:12:15"},"referencedDeclaration":6071,"src":"2289:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}},"visibility":"internal"}],"id":8245,"initialValue":{"baseExpression":{"id":8242,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"2318:6:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":8244,"indexExpression":{"id":8243,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"2325:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2318:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2289:45:15"},{"assignments":[8248],"declarations":[{"constant":false,"id":8248,"mutability":"mutable","name":"policy","nameLocation":"2359:6:15","nodeType":"VariableDeclaration","scope":8332,"src":"2344:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8247,"nodeType":"UserDefinedTypeName","pathNode":{"id":8246,"name":"Policy","nameLocations":["2344:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"2344:6:15"},"referencedDeclaration":6060,"src":"2344:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8252,"initialValue":{"baseExpression":{"id":8249,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"2368:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8251,"indexExpression":{"id":8250,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"2377:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2368:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2344:42:15"},{"expression":{"arguments":[{"expression":{"id":8254,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"2404:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2410:9:15","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"2404:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070656e64696e6720636c61696d","id":8256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2421:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""},"value":"No pending claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""}],"id":8253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2396:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2396:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8258,"nodeType":"ExpressionStatement","src":"2396:44:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8260,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2458:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2464:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"2458:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8262,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"2477:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2483:15:15","memberName":"expiryTimestamp","nodeType":"MemberAccess","referencedDeclaration":6070,"src":"2477:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2458:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20726571756573742065787069726564","id":8265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2500:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6","typeString":"literal_string \"Claim request expired\""},"value":"Claim request expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6","typeString":"literal_string \"Claim request expired\""}],"id":8259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2450:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:74:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8267,"nodeType":"ExpressionStatement","src":"2450:74:15"},{"expression":{"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8268,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"2543:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2549:9:15","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"2543:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2561:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2543:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8273,"nodeType":"ExpressionStatement","src":"2543:23:15"},{"expression":{"id":8279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8274,"name":"claimAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"2576:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8276,"indexExpression":{"id":8275,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"2589:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2576:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":8277,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"2602:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2608:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"2602:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2576:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8280,"nodeType":"ExpressionStatement","src":"2576:38:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8281,"name":"claimAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"2637:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8283,"indexExpression":{"id":8282,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"2650:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2637:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8284,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"2663:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2670:10:15","memberName":"sumAssured","nodeType":"MemberAccess","referencedDeclaration":6051,"src":"2663:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2637:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8300,"nodeType":"IfStatement","src":"2633:134:15","trueBody":{"id":8299,"nodeType":"Block","src":"2682:85:15","statements":[{"expression":{"id":8291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8287,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"2696:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2703:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"2696:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2714:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2696:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8292,"nodeType":"ExpressionStatement","src":"2696:23:15"},{"expression":{"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8293,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"2733:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2740:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"2733:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2752:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2733:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8298,"nodeType":"ExpressionStatement","src":"2733:23:15"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8306,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"2908:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2915:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"2908:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2900:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8304,"name":"address","nodeType":"ElementaryTypeName","src":"2900:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":8309,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"2923:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2929:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"2923:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8301,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"2881:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2887:12:15","memberName":"approveClaim","nodeType":"MemberAccess","referencedDeclaration":9180,"src":"2881:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8312,"nodeType":"ExpressionStatement","src":"2881:55:15"},{"eventCall":{"arguments":[{"id":8314,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"2974:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8315,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"2984:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2991:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"2984:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8317,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"2998:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3004:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"2998:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8313,"name":"ClaimApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"2960:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8320,"nodeType":"EmitStatement","src":"2955:56:15"},{"eventCall":{"arguments":[{"id":8322,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"3043:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8323,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"3053:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3060:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"3053:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8325,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"3067:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3073:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"3067:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8321,"name":"ClaimTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"3026:16:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8328,"nodeType":"EmitStatement","src":"3021:59:15"},{"expression":{"expression":{"id":8329,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8241,"src":"3097:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3103:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"3097:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8238,"id":8331,"nodeType":"Return","src":"3090:19:15"}]},"documentation":{"id":8225,"nodeType":"StructuredDocumentation","src":"2046:63:15","text":"@notice Admin approves claim and transfers funds from vault"},"functionSelector":"3719f096","id":8333,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8231,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"2205:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8232,"kind":"modifierInvocation","modifierName":{"id":8230,"name":"onlyRole","nameLocations":["2196:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2196:8:15"},"nodeType":"ModifierInvocation","src":"2196:20:15"},{"arguments":[{"id":8234,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"2238:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8235,"kind":"modifierInvocation","modifierName":{"id":8233,"name":"validPolicy","nameLocations":["2226:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"2226:11:15"},"nodeType":"ModifierInvocation","src":"2226:21:15"}],"name":"approveClaim","nameLocation":"2123:12:15","nodeType":"FunctionDefinition","overrides":{"id":8229,"nodeType":"OverrideSpecifier","overrides":[],"src":"2179:8:15"},"parameters":{"id":8228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8227,"mutability":"mutable","name":"policyId","nameLocation":"2144:8:15","nodeType":"VariableDeclaration","scope":8333,"src":"2136:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2136:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2135:18:15"},"returnParameters":{"id":8238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8333,"src":"2265:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2264:9:15"},"scope":8687,"src":"2114:1002:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8372,"nodeType":"Block","src":"3256:244:15","statements":[{"assignments":[8343],"declarations":[{"constant":false,"id":8343,"mutability":"mutable","name":"policy","nameLocation":"3280:6:15","nodeType":"VariableDeclaration","scope":8372,"src":"3266:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8342,"nodeType":"UserDefinedTypeName","pathNode":{"id":8341,"name":"Policy","nameLocations":["3266:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"3266:6:15"},"referencedDeclaration":6060,"src":"3266:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8347,"initialValue":{"baseExpression":{"id":8344,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"3289:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8346,"indexExpression":{"id":8345,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"3298:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3289:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3266:41:15"},{"condition":{"id":8350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3321:16:15","subExpression":{"expression":{"id":8348,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3322:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3329:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"3322:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8353,"nodeType":"IfStatement","src":"3317:30:15","trueBody":{"expression":{"hexValue":"30","id":8351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3346:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8340,"id":8352,"nodeType":"Return","src":"3339:8:15"}},{"assignments":[8355],"declarations":[{"constant":false,"id":8355,"mutability":"mutable","name":"claimed","nameLocation":"3365:7:15","nodeType":"VariableDeclaration","scope":8372,"src":"3357:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8359,"initialValue":{"baseExpression":{"id":8356,"name":"claimAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"3375:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8358,"indexExpression":{"id":8357,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"3388:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3375:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3357:40:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8360,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"3411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8361,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3422:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3429:10:15","memberName":"sumAssured","nodeType":"MemberAccess","referencedDeclaration":6051,"src":"3422:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3411:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8366,"nodeType":"IfStatement","src":"3407:42:15","trueBody":{"expression":{"hexValue":"30","id":8364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3448:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8340,"id":8365,"nodeType":"Return","src":"3441:8:15"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8367,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"3466:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3473:10:15","memberName":"sumAssured","nodeType":"MemberAccess","referencedDeclaration":6051,"src":"3466:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8369,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"3486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3466:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8340,"id":8371,"nodeType":"Return","src":"3459:34:15"}]},"documentation":{"id":8334,"nodeType":"StructuredDocumentation","src":"3126:47:15","text":"@notice Get remaining coverage for a policy"},"functionSelector":"cb804860","id":8373,"implemented":true,"kind":"function","modifiers":[],"name":"getRemainingCoverage","nameLocation":"3187:20:15","nodeType":"FunctionDefinition","parameters":{"id":8337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8336,"mutability":"mutable","name":"policyId","nameLocation":"3216:8:15","nodeType":"VariableDeclaration","scope":8373,"src":"3208:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3208:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3207:18:15"},"returnParameters":{"id":8340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8373,"src":"3247:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:15"},"scope":8687,"src":"3178:322:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8430,"nodeType":"Block","src":"3641:339:15","statements":[{"assignments":[8383],"declarations":[{"constant":false,"id":8383,"mutability":"mutable","name":"p","nameLocation":"3665:1:15","nodeType":"VariableDeclaration","scope":8430,"src":"3651:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8382,"nodeType":"UserDefinedTypeName","pathNode":{"id":8381,"name":"Policy","nameLocations":["3651:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"3651:6:15"},"referencedDeclaration":6060,"src":"3651:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8387,"initialValue":{"baseExpression":{"id":8384,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"3669:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8386,"indexExpression":{"id":8385,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8376,"src":"3678:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3669:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3651:36:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3701:11:15","subExpression":{"expression":{"id":8388,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"3702:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3704:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"3702:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8391,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3716:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3722:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"3716:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8393,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"3735:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3737:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"3735:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3716:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3701:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8399,"nodeType":"IfStatement","src":"3697:56:15","trueBody":{"expression":{"hexValue":"30","id":8397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3752:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8380,"id":8398,"nodeType":"Return","src":"3745:8:15"}},{"assignments":[8401],"declarations":[{"constant":false,"id":8401,"mutability":"mutable","name":"unusedDuration","nameLocation":"3771:14:15","nodeType":"VariableDeclaration","scope":8430,"src":"3763:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8407,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8402,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"3788:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3790:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"3788:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8404,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3799:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3805:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"3799:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3788:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3763:51:15"},{"assignments":[8409],"declarations":[{"constant":false,"id":8409,"mutability":"mutable","name":"totalDuration","nameLocation":"3832:13:15","nodeType":"VariableDeclaration","scope":8430,"src":"3824:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3824:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8415,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8410,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"3848:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3850:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"3848:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8412,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"3859:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3861:9:15","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":6059,"src":"3859:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3848:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3824:46:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8416,"name":"totalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"3884:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3901:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3884:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8421,"nodeType":"IfStatement","src":"3880:32:15","trueBody":{"expression":{"hexValue":"30","id":8419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3911:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8380,"id":8420,"nodeType":"Return","src":"3904:8:15"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8422,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"3930:1:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3932:7:15","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":6049,"src":"3930:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8424,"name":"unusedDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"3942:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3930:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3929:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8427,"name":"totalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"3960:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3929:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8380,"id":8429,"nodeType":"Return","src":"3922:51:15"}]},"documentation":{"id":8374,"nodeType":"StructuredDocumentation","src":"3510:53:15","text":"@notice Calculate refund based on unused duration"},"functionSelector":"8c51f60f","id":8431,"implemented":true,"kind":"function","modifiers":[],"name":"calculateRefund","nameLocation":"3577:15:15","nodeType":"FunctionDefinition","parameters":{"id":8377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8376,"mutability":"mutable","name":"policyId","nameLocation":"3601:8:15","nodeType":"VariableDeclaration","scope":8431,"src":"3593:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3593:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3592:18:15"},"returnParameters":{"id":8380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8431,"src":"3632:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3632:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3631:9:15"},"scope":8687,"src":"3568:412:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[7126],"body":{"id":8582,"nodeType":"Block","src":"4214:1315:15","statements":[{"assignments":[8446],"declarations":[{"constant":false,"id":8446,"mutability":"mutable","name":"policy","nameLocation":"4239:6:15","nodeType":"VariableDeclaration","scope":8582,"src":"4224:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8445,"nodeType":"UserDefinedTypeName","pathNode":{"id":8444,"name":"Policy","nameLocations":["4224:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"4224:6:15"},"referencedDeclaration":6060,"src":"4224:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8450,"initialValue":{"baseExpression":{"id":8447,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"4248:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8449,"indexExpression":{"id":8448,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"4257:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4248:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4224:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8452,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"4284:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4291:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"4284:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4300:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4304:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4300:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4284:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4312:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""},"value":"Not the policy owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d","typeString":"literal_string \"Not the policy owner\""}],"id":8451,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4276:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8459,"nodeType":"ExpressionStatement","src":"4276:59:15"},{"expression":{"arguments":[{"expression":{"id":8461,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"4353:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8462,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4360:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"4353:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":8463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4370:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":8460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4345:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4345:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8465,"nodeType":"ExpressionStatement","src":"4345:45:15"},{"expression":{"arguments":[{"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4408:17:15","subExpression":{"expression":{"id":8467,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"4409:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4416:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"4409:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c6963792066756c6c7920636c61696d6564","id":8470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4427:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec47c552a0e8414889fb5ebbf7be1d49d85f9d9e5d9e3476751b87f7e80e6738","typeString":"literal_string \"Policy fully claimed\""},"value":"Policy fully claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec47c552a0e8414889fb5ebbf7be1d49d85f9d9e5d9e3476751b87f7e80e6738","typeString":"literal_string \"Policy fully claimed\""}],"id":8466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4400:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8472,"nodeType":"ExpressionStatement","src":"4400:50:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4468:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4472:5:15","memberName":"value","nodeType":"MemberAccess","src":"4468:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8476,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"4481:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4468:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","id":8478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4490:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""},"value":"Incorrect premium amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6","typeString":"literal_string \"Incorrect premium amount\""}],"id":8473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4460:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4460:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8480,"nodeType":"ExpressionStatement","src":"4460:57:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8482,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4548:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4554:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"4548:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8484,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"4567:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4574:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4567:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4548:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8487,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"4584:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4591:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4584:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8489,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4600:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4606:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"4600:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4584:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3330","id":8492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4619:7:15","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"4584:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4548:78:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206561726c7920746f2072656e6577","id":8495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4640:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d76cf27bc80af243699efb8730beafe5275b692ea1efbfa6263df73ff30ee004","typeString":"literal_string \"Too early to renew\""},"value":"Too early to renew"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d76cf27bc80af243699efb8730beafe5275b692ea1efbfa6263df73ff30ee004","typeString":"literal_string \"Too early to renew\""}],"id":8481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4527:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4527:143:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8497,"nodeType":"ExpressionStatement","src":"4527:143:15"},{"assignments":[8499],"declarations":[{"constant":false,"id":8499,"mutability":"mutable","name":"actualDuration","nameLocation":"4697:14:15","nodeType":"VariableDeclaration","scope":8582,"src":"4689:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4689:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8501,"initialValue":{"id":8500,"name":"DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"4714:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4689:33:15"},{"assignments":[8503],"declarations":[{"constant":false,"id":8503,"mutability":"mutable","name":"messageHash","nameLocation":"4806:11:15","nodeType":"VariableDeclaration","scope":8582,"src":"4798:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4798:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8516,"initialValue":{"arguments":[{"arguments":[{"id":8507,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"4860:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8508,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"4870:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4877:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"4870:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8510,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"4884:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8511,"name":"actualDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"4893:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8512,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4909:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4915:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4909:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8505,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4843:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4847:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"4843:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4843:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4820:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4820:113:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4798:135:15"},{"expression":{"arguments":[{"arguments":[{"id":8519,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"4976:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8520,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"4989:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8518,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"4960:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4960:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":8522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5001:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":8517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4952:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4952:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8524,"nodeType":"ExpressionStatement","src":"4952:69:15"},{"expression":{"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8525,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"5031:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8529,"indexExpression":{"arguments":[{"id":8527,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8440,"src":"5056:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8526,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5046:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5046:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5031:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5070:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5031:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8532,"nodeType":"ExpressionStatement","src":"5031:43:15"},{"assignments":[8534,null],"declarations":[{"constant":false,"id":8534,"mutability":"mutable","name":"sent","nameLocation":"5195:4:15","nodeType":"VariableDeclaration","scope":8582,"src":"5190:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8533,"name":"bool","nodeType":"ElementaryTypeName","src":"5190:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":8545,"initialValue":{"arguments":[{"hexValue":"","id":8543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5242:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":8537,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"5212:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":8536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5204:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8535,"name":"address","nodeType":"ElementaryTypeName","src":"5204:7:15","typeDescriptions":{}}},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5219:4:15","memberName":"call","nodeType":"MemberAccess","src":"5204:19:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":8540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5231:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5235:5:15","memberName":"value","nodeType":"MemberAccess","src":"5231:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5204:37:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5189:56:15"},{"expression":{"arguments":[{"id":8547,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"5263:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5661756c74207472616e73666572206661696c6564","id":8548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5269:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4654520bfb7a1211dc62fbc344559546ad7e0d91b78b10f2db6e35265513c112","typeString":"literal_string \"Vault transfer failed\""},"value":"Vault transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4654520bfb7a1211dc62fbc344559546ad7e0d91b78b10f2db6e35265513c112","typeString":"literal_string \"Vault transfer failed\""}],"id":8546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5255:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5255:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8550,"nodeType":"ExpressionStatement","src":"5255:38:15"},{"expression":{"id":8555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8551,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"5312:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5319:7:15","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":6049,"src":"5312:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8554,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"5329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8556,"nodeType":"ExpressionStatement","src":"5312:24:15"},{"expression":{"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8557,"name":"claimAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8137,"src":"5346:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":8559,"indexExpression":{"id":8558,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"5359:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5346:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5371:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5346:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8562,"nodeType":"ExpressionStatement","src":"5346:26:15"},{"expression":{"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8563,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"5382:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8565,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5389:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"5382:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8566,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5398:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5404:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"5398:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8568,"name":"actualDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8499,"src":"5416:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5398:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5382:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8571,"nodeType":"ExpressionStatement","src":"5382:48:15"},{"eventCall":{"arguments":[{"id":8573,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"5468:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8574,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"5478:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5485:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"5478:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8576,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"5492:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5499:7:15","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":6049,"src":"5492:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8578,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8446,"src":"5508:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5515:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"5508:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8572,"name":"PolicyRenewed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"5454:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256,uint256)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8581,"nodeType":"EmitStatement","src":"5449:73:15"}]},"documentation":{"id":8432,"nodeType":"StructuredDocumentation","src":"3990:51:15","text":"@notice HealthCareLite supports yearly renewals"},"functionSelector":"4e494b7c","id":8583,"implemented":true,"kind":"function","modifiers":[],"name":"renewPolicy","nameLocation":"4055:11:15","nodeType":"FunctionDefinition","overrides":{"id":8442,"nodeType":"OverrideSpecifier","overrides":[],"src":"4205:8:15"},"parameters":{"id":8441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"policyId","nameLocation":"4084:8:15","nodeType":"VariableDeclaration","scope":8583,"src":"4076:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4076:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8436,"mutability":"mutable","name":"premium","nameLocation":"4110:7:15","nodeType":"VariableDeclaration","scope":8583,"src":"4102:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8435,"name":"uint256","nodeType":"ElementaryTypeName","src":"4102:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8583,"src":"4127:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8440,"mutability":"mutable","name":"signature","nameLocation":"4172:9:15","nodeType":"VariableDeclaration","scope":8583,"src":"4159:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8439,"name":"bytes","nodeType":"ElementaryTypeName","src":"4159:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4066:121:15"},"returnParameters":{"id":8443,"nodeType":"ParameterList","parameters":[],"src":"4214:0:15"},"scope":8687,"src":"4046:1483:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[6938],"body":{"id":8685,"nodeType":"Block","src":"5756:883:15","statements":[{"assignments":[8602],"declarations":[{"constant":false,"id":8602,"mutability":"mutable","name":"policy","nameLocation":"5781:6:15","nodeType":"VariableDeclaration","scope":8685,"src":"5766:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8601,"nodeType":"UserDefinedTypeName","pathNode":{"id":8600,"name":"Policy","nameLocations":["5766:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"5766:6:15"},"referencedDeclaration":6060,"src":"5766:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8606,"initialValue":{"baseExpression":{"id":8603,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"5790:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8605,"indexExpression":{"id":8604,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"5799:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5790:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5766:42:15"},{"expression":{"arguments":[{"expression":{"id":8608,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"5826:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5833:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"5826:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":8610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5843:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":8607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5818:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8612,"nodeType":"ExpressionStatement","src":"5818:45:15"},{"expression":{"arguments":[{"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5881:17:15","subExpression":{"expression":{"id":8614,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"5882:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5889:9:15","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"5882:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":8617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5900:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":8613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5873:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8619,"nodeType":"ExpressionStatement","src":"5873:52:15"},{"assignments":[8621],"declarations":[{"constant":false,"id":8621,"mutability":"mutable","name":"messageHash","nameLocation":"6009:11:15","nodeType":"VariableDeclaration","scope":8685,"src":"6001:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6001:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8637,"initialValue":{"arguments":[{"arguments":[{"id":8625,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"6063:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8626,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"6073:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6080:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6073:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8628,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"6087:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":8631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6109:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6101:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8629,"name":"uint256","nodeType":"ElementaryTypeName","src":"6101:7:15","typeDescriptions":{}}},"id":8632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6101:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8633,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6113:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6119:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"6113:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8623,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6046:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6050:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"6046:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8622,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6023:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:114:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6001:136:15"},{"expression":{"arguments":[{"arguments":[{"id":8640,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8621,"src":"6180:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8641,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"6193:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8639,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"6164:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":8642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6164:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":8643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6205:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":8638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6156:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8645,"nodeType":"ExpressionStatement","src":"6156:69:15"},{"expression":{"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8646,"name":"usedSignatures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"6235:14:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8650,"indexExpression":{"arguments":[{"id":8648,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8590,"src":"6260:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8647,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6250:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6250:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6235:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6274:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6235:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8653,"nodeType":"ExpressionStatement","src":"6235:43:15"},{"expression":{"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8654,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"6297:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6304:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"6297:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6315:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6297:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8659,"nodeType":"ExpressionStatement","src":"6297:23:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8665,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"6460:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6467:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6460:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6452:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8663,"name":"address","nodeType":"ElementaryTypeName","src":"6452:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6452:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":8668,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"6475:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8660,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"6435:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6441:10:15","memberName":"sendRefund","nodeType":"MemberAccess","referencedDeclaration":9228,"src":"6435:16:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8670,"nodeType":"ExpressionStatement","src":"6435:53:15"},{"eventCall":{"arguments":[{"id":8672,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"6528:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8673,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"6538:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6545:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6538:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8675,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"6552:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8671,"name":"PolicyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"6512:15:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6512:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8677,"nodeType":"EmitStatement","src":"6507:58:15"},{"eventCall":{"arguments":[{"id":8679,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"6595:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8680,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"6605:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6612:5:15","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6605:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8682,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8588,"src":"6619:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8678,"name":"PolicyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8161,"src":"6580:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6580:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8684,"nodeType":"EmitStatement","src":"6575:57:15"}]},"documentation":{"id":8584,"nodeType":"StructuredDocumentation","src":"5539:37:15","text":"@notice Cancel policy with refund"},"functionSelector":"2fe1814c","id":8686,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8594,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"5722:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8595,"kind":"modifierInvocation","modifierName":{"id":8593,"name":"onlyRole","nameLocations":["5713:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5713:8:15"},"nodeType":"ModifierInvocation","src":"5713:20:15"},{"arguments":[{"id":8597,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"5746:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8598,"kind":"modifierInvocation","modifierName":{"id":8596,"name":"validPolicy","nameLocations":["5734:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"5734:11:15"},"nodeType":"ModifierInvocation","src":"5734:21:15"}],"name":"cancelPolicy","nameLocation":"5590:12:15","nodeType":"FunctionDefinition","overrides":{"id":8592,"nodeType":"OverrideSpecifier","overrides":[],"src":"5704:8:15"},"parameters":{"id":8591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8586,"mutability":"mutable","name":"policyId","nameLocation":"5620:8:15","nodeType":"VariableDeclaration","scope":8686,"src":"5612:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5612:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8588,"mutability":"mutable","name":"refundAmount","nameLocation":"5646:12:15","nodeType":"VariableDeclaration","scope":8686,"src":"5638:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5638:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8590,"mutability":"mutable","name":"signature","nameLocation":"5681:9:15","nodeType":"VariableDeclaration","scope":8686,"src":"5668:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8589,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5602:94:15"},"returnParameters":{"id":8599,"nodeType":"ParameterList","parameters":[],"src":"5756:0:15"},"scope":8687,"src":"5581:1058:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8688,"src":"371:6270:15","usedErrors":[305,308,2021,2026,2031],"usedEvents":[317,326,335,6097,6105,6113,6121,6129,6133,6139,6149,6155,6161,6167,8145,8153,8161]}],"src":"32:6609:15"},"id":15},"contracts/plans/LifeCareLite.sol":{"ast":{"absolutePath":"contracts/plans/LifeCareLite.sol","exportedSymbols":{"AccessControl":[295],"Context":[556],"ECDSA":[2358],"ERC165":[2468],"IAccessControl":[378],"InsuranceVault":[9290],"LifeCareLite":[9073],"MessageHashUtils":[2444],"Ownable":[526],"PolicyBase":[7172],"Strings":[2010]},"id":9074,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8689,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:16"},{"absolutePath":"contracts/base/PolicyBase.sol","file":"../base/PolicyBase.sol","id":8690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9074,"sourceUnit":7173,"src":"58:32:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/InsuranceVault.sol","file":"../utils/InsuranceVault.sol","id":8691,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9074,"sourceUnit":9291,"src":"91:37:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8693,"name":"PolicyBase","nameLocations":["369:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":7172,"src":"369:10:16"},"id":8694,"nodeType":"InheritanceSpecifier","src":"369:10:16"}],"canonicalName":"LifeCareLite","contractDependencies":[],"contractKind":"contract","documentation":{"id":8692,"nodeType":"StructuredDocumentation","src":"130:214:16","text":"@title LifeCareLite\n @notice Life insurance plan with fixed maturity and admin-verified premium structure\n @dev Extends PolicyBase for core functionality with signature verification and vault integration"},"fullyImplemented":true,"id":9073,"linearizedBaseContracts":[9073,7172,295,2468,2480,378,556],"name":"LifeCareLite","nameLocation":"353:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":8699,"mutability":"constant","name":"MAX_DURATION","nameLocation":"453:12:16","nodeType":"VariableDeclaration","scope":9073,"src":"428:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8695,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_2522880000_by_1","typeString":"int_const 2522880000"},"id":8698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3830","id":8696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"468:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":8697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"473:8:16","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"468:13:16","typeDescriptions":{"typeIdentifier":"t_rational_2522880000_by_1","typeString":"int_const 2522880000"}},"visibility":"private"},{"anonymous":false,"eventSelector":"b1efb5a54d173a08f1d7ae00e21150da481ac80d259826760104a5ba97be6fa8","id":8707,"name":"PremiumCalculated","nameLocation":"512:17:16","nodeType":"EventDefinition","parameters":{"id":8706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8701,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"546:8:16","nodeType":"VariableDeclaration","scope":8707,"src":"530:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"530:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8703,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"572:4:16","nodeType":"VariableDeclaration","scope":8707,"src":"556:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8702,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8705,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"586:7:16","nodeType":"VariableDeclaration","scope":8707,"src":"578:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8704,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:65:16"},"src":"506:89:16"},{"anonymous":false,"eventSelector":"957a909a771d0c1c8b37c8f5c6c9df37d8d7c521d3d99445839ede9153d06358","id":8715,"name":"ClaimTransferred","nameLocation":"606:16:16","nodeType":"EventDefinition","parameters":{"id":8714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"639:8:16","nodeType":"VariableDeclaration","scope":8715,"src":"623:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"623:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8711,"indexed":true,"mutability":"mutable","name":"beneficiary","nameLocation":"665:11:16","nodeType":"VariableDeclaration","scope":8715,"src":"649:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8710,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8713,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"686:6:16","nodeType":"VariableDeclaration","scope":8715,"src":"678:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8712,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"622:71:16"},"src":"600:94:16"},{"anonymous":false,"eventSelector":"effda959fad3422ef4e602f1642198e56536dbbf192da630dcbc451b5b5c203d","id":8723,"name":"PolicyRefunded","nameLocation":"705:14:16","nodeType":"EventDefinition","parameters":{"id":8722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8717,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"736:8:16","nodeType":"VariableDeclaration","scope":8723,"src":"720:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"720:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8719,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"762:5:16","nodeType":"VariableDeclaration","scope":8723,"src":"746:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8718,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8721,"indexed":false,"mutability":"mutable","name":"refundAmount","nameLocation":"777:12:16","nodeType":"VariableDeclaration","scope":8723,"src":"769:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8720,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"719:71:16"},"src":"699:92:16"},{"anonymous":false,"eventSelector":"86c1ecc07c250e70ebd20978be8a2c3c89364df0bdf82af94b5a3d09aaf3aa74","id":8729,"name":"RenewalAttemptRejected","nameLocation":"802:22:16","nodeType":"EventDefinition","parameters":{"id":8728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8725,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"841:8:16","nodeType":"VariableDeclaration","scope":8729,"src":"825:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"825:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8727,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"867:5:16","nodeType":"VariableDeclaration","scope":8729,"src":"851:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8726,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"824:49:16"},"src":"796:78:16"},{"body":{"id":8740,"nodeType":"Block","src":"1007:91:16","statements":[]},"id":8741,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8736,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8731,"src":"971:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8737,"name":"_vaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8733,"src":"987:13:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":8738,"kind":"baseConstructorSpecifier","modifierName":{"id":8735,"name":"PolicyBase","nameLocations":["960:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":7172,"src":"960:10:16"},"nodeType":"ModifierInvocation","src":"960:41:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8731,"mutability":"mutable","name":"_trustedSigner","nameLocation":"904:14:16","nodeType":"VariableDeclaration","scope":8741,"src":"896:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8730,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8733,"mutability":"mutable","name":"_vaultAddress","nameLocation":"936:13:16","nodeType":"VariableDeclaration","scope":8741,"src":"920:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8732,"name":"address","nodeType":"ElementaryTypeName","src":"920:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"895:55:16"},"returnParameters":{"id":8739,"nodeType":"ParameterList","parameters":[],"src":"1007:0:16"},"scope":9073,"src":"884:214:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6643],"body":{"id":8748,"nodeType":"Block","src":"1283:143:16","statements":[]},"documentation":{"id":8742,"nodeType":"StructuredDocumentation","src":"1104:110:16","text":"@notice Process policy-specific data (minimal implementation)\n @param policyId The ID of the policy"},"id":8749,"implemented":true,"kind":"function","modifiers":[],"name":"_processPolicyData","nameLocation":"1228:18:16","nodeType":"FunctionDefinition","overrides":{"id":8746,"nodeType":"OverrideSpecifier","overrides":[],"src":"1274:8:16"},"parameters":{"id":8745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8744,"mutability":"mutable","name":"policyId","nameLocation":"1255:8:16","nodeType":"VariableDeclaration","scope":8749,"src":"1247:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1247:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1246:18:16"},"returnParameters":{"id":8747,"nodeType":"ParameterList","parameters":[],"src":"1283:0:16"},"scope":9073,"src":"1219:207:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6637],"body":{"id":8792,"nodeType":"Block","src":"2008:702:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8767,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"2026:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8768,"name":"MAX_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8699,"src":"2038:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2026:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d6178696d756d206475726174696f6e","id":8770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2052:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b490cf61f7fe5378a94bf56dea6cc28a840b8ac643af2528c5ed87be45ffc410","typeString":"literal_string \"Exceeds maximum duration\""},"value":"Exceeds maximum duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b490cf61f7fe5378a94bf56dea6cc28a840b8ac643af2528c5ed87be45ffc410","typeString":"literal_string \"Exceeds maximum duration\""}],"id":8766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2018:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2018:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8772,"nodeType":"ExpressionStatement","src":"2018:61:16"},{"assignments":[8774],"declarations":[{"constant":false,"id":8774,"mutability":"mutable","name":"policyId","nameLocation":"2210:8:16","nodeType":"VariableDeclaration","scope":8792,"src":"2202:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2202:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8783,"initialValue":{"arguments":[{"id":8777,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"2255:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8778,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"2274:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8779,"name":"sumAssured","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"2295:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8780,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"2319:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8781,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8760,"src":"2341:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8775,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2221:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LifeCareLite_$9073_$","typeString":"type(contract super LifeCareLite)"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2227:14:16","memberName":"purchasePolicy","nodeType":"MemberAccess","referencedDeclaration":6637,"src":"2221:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address,uint256,uint256,uint256,bytes memory) returns (bytes32)"}},"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:139:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2202:158:16"},{"eventCall":{"arguments":[{"id":8785,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"2584:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8752,"src":"2607:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8787,"name":"premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8754,"src":"2627:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8784,"name":"PremiumCalculated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"2553:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:91:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8789,"nodeType":"EmitStatement","src":"2548:96:16"},{"expression":{"id":8790,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8774,"src":"2670:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8765,"id":8791,"nodeType":"Return","src":"2663:15:16"}]},"documentation":{"id":8750,"nodeType":"StructuredDocumentation","src":"1436:361:16","text":"@notice Purchase policy with ETH payment and backend signature verification\n @param owner Address of the policy owner\n @param premium Premium amount calculated by backend\n @param sumAssured Sum assured amount\n @param duration Policy duration in seconds\n @param signature Signature from the backend verifying the parameters"},"functionSelector":"b87fb65c","id":8793,"implemented":true,"kind":"function","modifiers":[],"name":"purchasePolicy","nameLocation":"1811:14:16","nodeType":"FunctionDefinition","overrides":{"id":8762,"nodeType":"OverrideSpecifier","overrides":[],"src":"1981:8:16"},"parameters":{"id":8761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8752,"mutability":"mutable","name":"owner","nameLocation":"1843:5:16","nodeType":"VariableDeclaration","scope":8793,"src":"1835:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8751,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8754,"mutability":"mutable","name":"premium","nameLocation":"1866:7:16","nodeType":"VariableDeclaration","scope":8793,"src":"1858:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8753,"name":"uint256","nodeType":"ElementaryTypeName","src":"1858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8756,"mutability":"mutable","name":"sumAssured","nameLocation":"1891:10:16","nodeType":"VariableDeclaration","scope":8793,"src":"1883:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8758,"mutability":"mutable","name":"duration","nameLocation":"1919:8:16","nodeType":"VariableDeclaration","scope":8793,"src":"1911:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1911:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8760,"mutability":"mutable","name":"signature","nameLocation":"1950:9:16","nodeType":"VariableDeclaration","scope":8793,"src":"1937:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8759,"name":"bytes","nodeType":"ElementaryTypeName","src":"1937:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1825:140:16"},"returnParameters":{"id":8765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8793,"src":"1999:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1999:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1998:9:16"},"scope":9073,"src":"1802:908:16","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[6837],"body":{"id":8886,"nodeType":"Block","src":"2998:730:16","statements":[{"assignments":[8810],"declarations":[{"constant":false,"id":8810,"mutability":"mutable","name":"claim","nameLocation":"3062:5:16","nodeType":"VariableDeclaration","scope":8886,"src":"3041:26:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"},"typeName":{"id":8809,"nodeType":"UserDefinedTypeName","pathNode":{"id":8808,"name":"ClaimRequest","nameLocations":["3041:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":6071,"src":"3041:12:16"},"referencedDeclaration":6071,"src":"3041:12:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest"}},"visibility":"internal"}],"id":8814,"initialValue":{"baseExpression":{"id":8811,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"3070:6:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_ClaimRequest_$6071_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.ClaimRequest storage ref)"}},"id":8813,"indexExpression":{"id":8812,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"3077:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3070:16:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage","typeString":"struct PolicyBase.ClaimRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3041:45:16"},{"assignments":[8817],"declarations":[{"constant":false,"id":8817,"mutability":"mutable","name":"policy","nameLocation":"3111:6:16","nodeType":"VariableDeclaration","scope":8886,"src":"3096:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8816,"nodeType":"UserDefinedTypeName","pathNode":{"id":8815,"name":"Policy","nameLocations":["3096:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"3096:6:16"},"referencedDeclaration":6060,"src":"3096:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8821,"initialValue":{"baseExpression":{"id":8818,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"3120:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8820,"indexExpression":{"id":8819,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"3129:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3120:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3096:42:16"},{"expression":{"arguments":[{"expression":{"id":8823,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3165:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3171:9:16","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"3165:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2070656e64696e6720636c61696d","id":8825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3182:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""},"value":"No pending claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535","typeString":"literal_string \"No pending claim\""}],"id":8822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8827,"nodeType":"ExpressionStatement","src":"3157:44:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8829,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3219:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3225:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"3219:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8831,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3238:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3244:15:16","memberName":"expiryTimestamp","nodeType":"MemberAccess","referencedDeclaration":6070,"src":"3238:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3219:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20726571756573742065787069726564","id":8834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3261:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6","typeString":"literal_string \"Claim request expired\""},"value":"Claim request expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6","typeString":"literal_string \"Claim request expired\""}],"id":8828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3211:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3211:74:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8836,"nodeType":"ExpressionStatement","src":"3211:74:16"},{"expression":{"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8837,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3339:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3345:9:16","memberName":"isPending","nodeType":"MemberAccess","referencedDeclaration":6066,"src":"3339:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3357:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3339:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8842,"nodeType":"ExpressionStatement","src":"3339:23:16"},{"expression":{"id":8847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8843,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"3372:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3379:9:16","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"3372:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3391:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3372:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8848,"nodeType":"ExpressionStatement","src":"3372:23:16"},{"expression":{"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8849,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"3405:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3412:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"3405:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3423:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3405:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8854,"nodeType":"ExpressionStatement","src":"3405:23:16"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8860,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"3511:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3518:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"3511:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3503:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":8858,"name":"address","nodeType":"ElementaryTypeName","src":"3503:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3503:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":8863,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3526:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3532:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"3526:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8855,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"3484:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3490:12:16","memberName":"approveClaim","nodeType":"MemberAccess","referencedDeclaration":9180,"src":"3484:18:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3484:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8866,"nodeType":"ExpressionStatement","src":"3484:55:16"},{"eventCall":{"arguments":[{"id":8868,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"3577:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8869,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"3587:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3594:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"3587:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8871,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3601:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3607:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"3601:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8867,"name":"ClaimApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"3563:13:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3563:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8874,"nodeType":"EmitStatement","src":"3558:56:16"},{"eventCall":{"arguments":[{"id":8876,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"3646:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8877,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"3656:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":8878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3663:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"3656:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8879,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3670:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3676:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"3670:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8875,"name":"ClaimTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8715,"src":"3629:16:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3629:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8882,"nodeType":"EmitStatement","src":"3624:59:16"},{"expression":{"expression":{"id":8883,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"3709:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimRequest_$6071_storage_ptr","typeString":"struct PolicyBase.ClaimRequest storage pointer"}},"id":8884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3715:6:16","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"3709:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8807,"id":8885,"nodeType":"Return","src":"3702:19:16"}]},"documentation":{"id":8794,"nodeType":"StructuredDocumentation","src":"2720:108:16","text":"@notice Admin approves claim and transfers funds from vault\n @param policyId The ID of the policy"},"functionSelector":"3719f096","id":8887,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8800,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"2924:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8801,"kind":"modifierInvocation","modifierName":{"id":8799,"name":"onlyRole","nameLocations":["2915:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2915:8:16"},"nodeType":"ModifierInvocation","src":"2915:20:16"},{"arguments":[{"id":8803,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"2957:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8804,"kind":"modifierInvocation","modifierName":{"id":8802,"name":"validPolicy","nameLocations":["2945:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"2945:11:16"},"nodeType":"ModifierInvocation","src":"2945:21:16"}],"name":"approveClaim","nameLocation":"2842:12:16","nodeType":"FunctionDefinition","overrides":{"id":8798,"nodeType":"OverrideSpecifier","overrides":[],"src":"2898:8:16"},"parameters":{"id":8797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8796,"mutability":"mutable","name":"policyId","nameLocation":"2863:8:16","nodeType":"VariableDeclaration","scope":8887,"src":"2855:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2855:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2854:18:16"},"returnParameters":{"id":8807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8887,"src":"2984:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2984:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2983:9:16"},"scope":9073,"src":"2833:895:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8944,"nodeType":"Block","src":"3959:539:16","statements":[{"assignments":[8897],"declarations":[{"constant":false,"id":8897,"mutability":"mutable","name":"p","nameLocation":"3983:1:16","nodeType":"VariableDeclaration","scope":8944,"src":"3969:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8896,"nodeType":"UserDefinedTypeName","pathNode":{"id":8895,"name":"Policy","nameLocations":["3969:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"3969:6:16"},"referencedDeclaration":6060,"src":"3969:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":8901,"initialValue":{"baseExpression":{"id":8898,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"3987:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8900,"indexExpression":{"id":8899,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8890,"src":"3996:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3987:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3969:36:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4019:11:16","subExpression":{"expression":{"id":8902,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4020:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4022:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"4020:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8905,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4034:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4040:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"4034:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":8907,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4053:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4055:6:16","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4053:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4034:27:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4019:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8913,"nodeType":"IfStatement","src":"4015:56:16","trueBody":{"expression":{"hexValue":"30","id":8911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4070:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8894,"id":8912,"nodeType":"Return","src":"4063:8:16"}},{"assignments":[8915],"declarations":[{"constant":false,"id":8915,"mutability":"mutable","name":"unusedDuration","nameLocation":"4149:14:16","nodeType":"VariableDeclaration","scope":8944,"src":"4141:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4141:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8916,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4166:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4168:6:16","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4166:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8918,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4177:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4183:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"4177:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4166:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4141:51:16"},{"assignments":[8923],"declarations":[{"constant":false,"id":8923,"mutability":"mutable","name":"totalDuration","nameLocation":"4210:13:16","nodeType":"VariableDeclaration","scope":8944,"src":"4202:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8929,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8924,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4226:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4228:6:16","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":6053,"src":"4226:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8926,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4237:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4239:9:16","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":6059,"src":"4237:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4226:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4202:46:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8930,"name":"totalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"4271:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4288:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4271:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8935,"nodeType":"IfStatement","src":"4267:32:16","trueBody":{"expression":{"hexValue":"30","id":8933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4298:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8894,"id":8934,"nodeType":"Return","src":"4291:8:16"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8936,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8897,"src":"4448:1:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_memory_ptr","typeString":"struct PolicyBase.Policy memory"}},"id":8937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4450:7:16","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":6049,"src":"4448:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8938,"name":"unusedDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8915,"src":"4460:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4448:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4447:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8941,"name":"totalDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"4478:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4447:44:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8894,"id":8943,"nodeType":"Return","src":"4440:51:16"}]},"documentation":{"id":8888,"nodeType":"StructuredDocumentation","src":"3738:143:16","text":"@notice Calculate refund based on unused duration (pure calculation)\n @param policyId ID of the policy\n @return Refund amount"},"functionSelector":"8c51f60f","id":8945,"implemented":true,"kind":"function","modifiers":[],"name":"calculateRefund","nameLocation":"3895:15:16","nodeType":"FunctionDefinition","parameters":{"id":8891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8890,"mutability":"mutable","name":"policyId","nameLocation":"3919:8:16","nodeType":"VariableDeclaration","scope":8945,"src":"3911:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3911:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3910:18:16"},"returnParameters":{"id":8894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8945,"src":"3950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3950:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3949:9:16"},"scope":9073,"src":"3886:612:16","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[7126],"body":{"id":8976,"nodeType":"Block","src":"4771:172:16","statements":[{"eventCall":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":8962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4836:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4840:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4836:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8964,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4848:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4854:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"4848:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8960,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4819:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4823:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"4819:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4819:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8959,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4809:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4809:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4867:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4871:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4867:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8958,"name":"RenewalAttemptRejected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8729,"src":"4786:22:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4786:92:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8971,"nodeType":"EmitStatement","src":"4781:97:16"},{"expression":{"arguments":[{"hexValue":"4c696665436172654c69746520646f6573206e6f7420737570706f72742072656e6577616c73","id":8973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4895:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_78ae99b82253fbc913b86f4e962ed0778c6c00327d9a53a67997f06083b051bf","typeString":"literal_string \"LifeCareLite does not support renewals\""},"value":"LifeCareLite does not support renewals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_78ae99b82253fbc913b86f4e962ed0778c6c00327d9a53a67997f06083b051bf","typeString":"literal_string \"LifeCareLite does not support renewals\""}],"id":8972,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4888:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4888:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8975,"nodeType":"ExpressionStatement","src":"4888:48:16"}]},"documentation":{"id":8946,"nodeType":"StructuredDocumentation","src":"4508:80:16","text":"@notice This plan does not support renewal (parameters intentionally unused)"},"functionSelector":"4e494b7c","id":8977,"implemented":true,"kind":"function","modifiers":[],"name":"renewPolicy","nameLocation":"4602:11:16","nodeType":"FunctionDefinition","overrides":{"id":8956,"nodeType":"OverrideSpecifier","overrides":[],"src":"4762:8:16"},"parameters":{"id":8955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8977,"src":"4623:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4623:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8977,"src":"4653:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8949,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8977,"src":"4682:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8951,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8977,"src":"4712:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8953,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4613:131:16"},"returnParameters":{"id":8957,"nodeType":"ParameterList","parameters":[],"src":"4771:0:16"},"scope":9073,"src":"4593:350:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[6938],"body":{"id":9071,"nodeType":"Block","src":"5360:961:16","statements":[{"assignments":[8996],"declarations":[{"constant":false,"id":8996,"mutability":"mutable","name":"policy","nameLocation":"5430:6:16","nodeType":"VariableDeclaration","scope":9071,"src":"5415:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"},"typeName":{"id":8995,"nodeType":"UserDefinedTypeName","pathNode":{"id":8994,"name":"Policy","nameLocations":["5415:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":6060,"src":"5415:6:16"},"referencedDeclaration":6060,"src":"5415:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy"}},"visibility":"internal"}],"id":9000,"initialValue":{"baseExpression":{"id":8997,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"5439:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Policy_$6060_storage_$","typeString":"mapping(bytes32 => struct PolicyBase.Policy storage ref)"}},"id":8999,"indexExpression":{"id":8998,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"5448:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5439:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage","typeString":"struct PolicyBase.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5415:42:16"},{"expression":{"arguments":[{"expression":{"id":9002,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"5484:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5491:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"5484:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206e6f7420616374697665","id":9004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5501:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""},"value":"Policy not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718","typeString":"literal_string \"Policy not active\""}],"id":9001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5476:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9006,"nodeType":"ExpressionStatement","src":"5476:45:16"},{"expression":{"arguments":[{"id":9010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5539:17:16","subExpression":{"expression":{"id":9008,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"5540:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5547:9:16","memberName":"isClaimed","nodeType":"MemberAccess","referencedDeclaration":6057,"src":"5540:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","id":9011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5558:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""},"value":"Policy already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56","typeString":"literal_string \"Policy already claimed\""}],"id":9007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5531:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5531:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9013,"nodeType":"ExpressionStatement","src":"5531:52:16"},{"assignments":[9015],"declarations":[{"constant":false,"id":9015,"mutability":"mutable","name":"messageHash","nameLocation":"5697:11:16","nodeType":"VariableDeclaration","scope":9071,"src":"5689:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5689:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9031,"initialValue":{"arguments":[{"arguments":[{"id":9019,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"5751:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9020,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"5761:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5768:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"5761:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9022,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8982,"src":"5775:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":9025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5797:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5789:7:16","typeDescriptions":{}}},"id":9026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9027,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5801:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5807:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"5801:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9017,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5734:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5738:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"5734:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5734:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9016,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5711:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:114:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5689:136:16"},{"expression":{"arguments":[{"arguments":[{"id":9034,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9015,"src":"5935:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9035,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8984,"src":"5948:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9033,"name":"verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"5919:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,bytes memory) view returns (bool)"}},"id":9036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5919:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":9037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5960:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":9032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5911:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5911:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9039,"nodeType":"ExpressionStatement","src":"5911:69:16"},{"expression":{"id":9044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9040,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"6034:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6041:8:16","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6055,"src":"6034:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6052:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6034:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9045,"nodeType":"ExpressionStatement","src":"6034:23:16"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":9051,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"6142:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6149:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6142:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6134:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":9049,"name":"address","nodeType":"ElementaryTypeName","src":"6134:8:16","stateMutability":"payable","typeDescriptions":{}}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6134:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":9054,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8982,"src":"6157:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9046,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"6117:5:16","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}},"id":9048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6123:10:16","memberName":"sendRefund","nodeType":"MemberAccess","referencedDeclaration":9228,"src":"6117:16:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6117:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9056,"nodeType":"ExpressionStatement","src":"6117:53:16"},{"eventCall":{"arguments":[{"id":9058,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"6210:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9059,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"6220:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6227:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6220:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9061,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8982,"src":"6234:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9057,"name":"PolicyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"6194:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6194:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9063,"nodeType":"EmitStatement","src":"6189:58:16"},{"eventCall":{"arguments":[{"id":9065,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"6277:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":9066,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"6287:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$6060_storage_ptr","typeString":"struct PolicyBase.Policy storage pointer"}},"id":9067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6294:5:16","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6047,"src":"6287:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9068,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8982,"src":"6301:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9064,"name":"PolicyRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8723,"src":"6262:14:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,uint256)"}},"id":9069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6262:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9070,"nodeType":"EmitStatement","src":"6257:57:16"}]},"documentation":{"id":8978,"nodeType":"StructuredDocumentation","src":"4953:227:16","text":"@notice Override cancelPolicy to use the vault for refunds \n @param policyId ID of the policy \n @param refundAmount Amount to refund \n @param signature Signature from trusted signer approving the refund"},"functionSelector":"2fe1814c","id":9072,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8988,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"5326:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8989,"kind":"modifierInvocation","modifierName":{"id":8987,"name":"onlyRole","nameLocations":["5317:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"5317:8:16"},"nodeType":"ModifierInvocation","src":"5317:20:16"},{"arguments":[{"id":8991,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8980,"src":"5350:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8992,"kind":"modifierInvocation","modifierName":{"id":8990,"name":"validPolicy","nameLocations":["5338:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":6421,"src":"5338:11:16"},"nodeType":"ModifierInvocation","src":"5338:21:16"}],"name":"cancelPolicy","nameLocation":"5194:12:16","nodeType":"FunctionDefinition","overrides":{"id":8986,"nodeType":"OverrideSpecifier","overrides":[],"src":"5308:8:16"},"parameters":{"id":8985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8980,"mutability":"mutable","name":"policyId","nameLocation":"5224:8:16","nodeType":"VariableDeclaration","scope":9072,"src":"5216:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5216:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8982,"mutability":"mutable","name":"refundAmount","nameLocation":"5250:12:16","nodeType":"VariableDeclaration","scope":9072,"src":"5242:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8981,"name":"uint256","nodeType":"ElementaryTypeName","src":"5242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8984,"mutability":"mutable","name":"signature","nameLocation":"5285:9:16","nodeType":"VariableDeclaration","scope":9072,"src":"5272:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8983,"name":"bytes","nodeType":"ElementaryTypeName","src":"5272:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5206:94:16"},"returnParameters":{"id":8993,"nodeType":"ParameterList","parameters":[],"src":"5360:0:16"},"scope":9073,"src":"5185:1136:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9074,"src":"344:5979:16","usedErrors":[305,308,2021,2026,2031],"usedEvents":[317,326,335,6097,6105,6113,6121,6129,6133,6139,6149,6155,6161,6167,8707,8715,8723,8729]}],"src":"32:6291:16"},"id":16},"contracts/utils/InsuranceVault.sol":{"ast":{"absolutePath":"contracts/utils/InsuranceVault.sol","exportedSymbols":{"Context":[556],"InsuranceVault":[9290],"Ownable":[526]},"id":9291,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9075,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9291,"sourceUnit":527,"src":"57:52:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9078,"name":"Ownable","nameLocations":["504:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"504:7:17"},"id":9079,"nodeType":"InheritanceSpecifier","src":"504:7:17"}],"canonicalName":"InsuranceVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":9077,"nodeType":"StructuredDocumentation","src":"111:366:17","text":"@title InsuranceVault\n @notice Holds and manages ETH funds for insurance premiums, claims, and refunds\n @dev Acts as the central treasury for all insurance plans.\n Only the contract owner can approve payouts or issue refunds.\n Incoming ETH (premiums) are logged via events.\n Does not implement business logic—only handles secure fund transfers."},"fullyImplemented":true,"id":9290,"linearizedBaseContracts":[9290,526,556],"name":"InsuranceVault","nameLocation":"486:14:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"a21795436a9f6a3b412fd6780f01a49907f2181e76e938496b0a41991d99b61c","id":9085,"name":"PremiumPaid","nameLocation":"524:11:17","nodeType":"EventDefinition","parameters":{"id":9084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9081,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"552:4:17","nodeType":"VariableDeclaration","scope":9085,"src":"536:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9080,"name":"address","nodeType":"ElementaryTypeName","src":"536:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9083,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"566:6:17","nodeType":"VariableDeclaration","scope":9085,"src":"558:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9082,"name":"uint256","nodeType":"ElementaryTypeName","src":"558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"535:38:17"},"src":"518:56:17"},{"anonymous":false,"eventSelector":"f42cf8c29487b42c009006cba2a2a0ca0388229f3183e6e957e0a0b163585cb4","id":9091,"name":"ClaimPaid","nameLocation":"585:9:17","nodeType":"EventDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9087,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"611:2:17","nodeType":"VariableDeclaration","scope":9091,"src":"595:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9086,"name":"address","nodeType":"ElementaryTypeName","src":"595:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9089,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"623:6:17","nodeType":"VariableDeclaration","scope":9091,"src":"615:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9088,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"594:36:17"},"src":"579:52:17"},{"anonymous":false,"eventSelector":"a171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76","id":9097,"name":"RefundIssued","nameLocation":"642:12:17","nodeType":"EventDefinition","parameters":{"id":9096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9093,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"671:4:17","nodeType":"VariableDeclaration","scope":9097,"src":"655:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9092,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9095,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"685:6:17","nodeType":"VariableDeclaration","scope":9097,"src":"677:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9094,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:38:17"},"src":"636:57:17"},{"anonymous":false,"eventSelector":"a692503bc54c9f1d1483729b6058a24987097ff492084b1a8adf8cae08e4fb43","id":9103,"name":"FundWithdrawn","nameLocation":"704:13:17","nodeType":"EventDefinition","parameters":{"id":9102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9099,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"734:2:17","nodeType":"VariableDeclaration","scope":9103,"src":"718:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9098,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9101,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"746:6:17","nodeType":"VariableDeclaration","scope":9103,"src":"738:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9100,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"717:36:17"},"src":"698:56:17"},{"body":{"id":9111,"nodeType":"Block","src":"820:2:17","statements":[]},"id":9112,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9108,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9105,"src":"806:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9109,"kind":"baseConstructorSpecifier","modifierName":{"id":9107,"name":"Ownable","nameLocations":["798:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"798:7:17"},"nodeType":"ModifierInvocation","src":"798:21:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9105,"mutability":"mutable","name":"initialOwner","nameLocation":"784:12:17","nodeType":"VariableDeclaration","scope":9112,"src":"776:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9104,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"775:22:17"},"returnParameters":{"id":9110,"nodeType":"ParameterList","parameters":[],"src":"820:0:17"},"scope":9290,"src":"764:58:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9131,"nodeType":"Block","src":"905:125:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"923:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"927:5:17","memberName":"value","nodeType":"MemberAccess","src":"923:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"935:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"923:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072656d69756d206d7573742062652067726561746572207468616e207a65726f","id":9121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"938:35:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_41ad1fd7a377c65128ff91ef311367a52ddb89bdfb5e7f26ae1cf32863ee3f28","typeString":"literal_string \"Premium must be greater than zero\""},"value":"Premium must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41ad1fd7a377c65128ff91ef311367a52ddb89bdfb5e7f26ae1cf32863ee3f28","typeString":"literal_string \"Premium must be greater than zero\""}],"id":9116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"915:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9123,"nodeType":"ExpressionStatement","src":"915:59:17"},{"eventCall":{"arguments":[{"expression":{"id":9125,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1001:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1005:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1001:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9127,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1013:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1017:5:17","memberName":"value","nodeType":"MemberAccess","src":"1013:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9124,"name":"PremiumPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"989:11:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"989:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9130,"nodeType":"EmitStatement","src":"984:39:17"}]},"documentation":{"id":9113,"nodeType":"StructuredDocumentation","src":"832:41:17","text":"@notice Accept premium payments (ETH)"},"id":9132,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9114,"nodeType":"ParameterList","parameters":[],"src":"885:2:17"},"returnParameters":{"id":9115,"nodeType":"ParameterList","parameters":[],"src":"905:0:17"},"scope":9290,"src":"878:152:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":9179,"nodeType":"Block","src":"1281:297:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9145,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1307:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":9144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1299:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9143,"name":"address","nodeType":"ElementaryTypeName","src":"1299:7:17","typeDescriptions":{}}},"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1299:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1313:7:17","memberName":"balance","nodeType":"MemberAccess","src":"1299:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9148,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"1324:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1299:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520696e207661756c74","id":9150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1332:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807","typeString":"literal_string \"Insufficient balance in vault\""},"value":"Insufficient balance in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807","typeString":"literal_string \"Insufficient balance in vault\""}],"id":9142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1291:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9152,"nodeType":"ExpressionStatement","src":"1291:73:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9154,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"1382:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1391:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1382:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d20616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":9157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1394:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b","typeString":"literal_string \"Claim amount must be greater than zero\""},"value":"Claim amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b","typeString":"literal_string \"Claim amount must be greater than zero\""}],"id":9153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1374:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9159,"nodeType":"ExpressionStatement","src":"1374:61:17"},{"assignments":[9161,null],"declarations":[{"constant":false,"id":9161,"mutability":"mutable","name":"sent","nameLocation":"1451:4:17","nodeType":"VariableDeclaration","scope":9179,"src":"1446:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9160,"name":"bool","nodeType":"ElementaryTypeName","src":"1446:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9168,"initialValue":{"arguments":[{"hexValue":"","id":9166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1484:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":9162,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9135,"src":"1461:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1464:4:17","memberName":"call","nodeType":"MemberAccess","src":"1461:7:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"1476:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1461:22:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1461:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1445:42:17"},{"expression":{"arguments":[{"id":9170,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9161,"src":"1505:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d207472616e73666572206661696c6564","id":9171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1511:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5775e57055cbb5cfe0fc8e9bd3bda256090136749d4c3c86da222459ad4b40c2","typeString":"literal_string \"Claim transfer failed\""},"value":"Claim transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5775e57055cbb5cfe0fc8e9bd3bda256090136749d4c3c86da222459ad4b40c2","typeString":"literal_string \"Claim transfer failed\""}],"id":9169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1497:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9173,"nodeType":"ExpressionStatement","src":"1497:38:17"},{"eventCall":{"arguments":[{"id":9175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9135,"src":"1560:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":9176,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"1564:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9174,"name":"ClaimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9091,"src":"1550:9:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1550:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9178,"nodeType":"EmitStatement","src":"1545:26:17"}]},"documentation":{"id":9133,"nodeType":"StructuredDocumentation","src":"1040:159:17","text":"@notice Approve and send a claim payout to a policyholder\n @param to The address of the policyholder\n @param amount The amount to be paid out"},"functionSelector":"f2ad7908","id":9180,"implemented":true,"kind":"function","modifiers":[{"id":9140,"kind":"modifierInvocation","modifierName":{"id":9139,"name":"onlyOwner","nameLocations":["1271:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1271:9:17"},"nodeType":"ModifierInvocation","src":"1271:9:17"}],"name":"approveClaim","nameLocation":"1213:12:17","nodeType":"FunctionDefinition","parameters":{"id":9138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9135,"mutability":"mutable","name":"to","nameLocation":"1242:2:17","nodeType":"VariableDeclaration","scope":9180,"src":"1226:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9134,"name":"address","nodeType":"ElementaryTypeName","src":"1226:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":9137,"mutability":"mutable","name":"amount","nameLocation":"1254:6:17","nodeType":"VariableDeclaration","scope":9180,"src":"1246:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:36:17"},"returnParameters":{"id":9141,"nodeType":"ParameterList","parameters":[],"src":"1281:0:17"},"scope":9290,"src":"1204:374:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9227,"nodeType":"Block","src":"1810:302:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9193,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1836:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":9192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1828:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9191,"name":"address","nodeType":"ElementaryTypeName","src":"1828:7:17","typeDescriptions":{}}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1842:7:17","memberName":"balance","nodeType":"MemberAccess","src":"1828:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"1853:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1828:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520696e207661756c74","id":9198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1861:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807","typeString":"literal_string \"Insufficient balance in vault\""},"value":"Insufficient balance in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807","typeString":"literal_string \"Insufficient balance in vault\""}],"id":9190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1820:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1820:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9200,"nodeType":"ExpressionStatement","src":"1820:73:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9202,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"1911:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1920:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1911:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e6420616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":9205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1923:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4854df01cd43fa4f3764362141a44c4127f5146495ae05638f85c0291c151c0","typeString":"literal_string \"Refund amount must be greater than zero\""},"value":"Refund amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c4854df01cd43fa4f3764362141a44c4127f5146495ae05638f85c0291c151c0","typeString":"literal_string \"Refund amount must be greater than zero\""}],"id":9201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1903:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1903:62:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9207,"nodeType":"ExpressionStatement","src":"1903:62:17"},{"assignments":[9209,null],"declarations":[{"constant":false,"id":9209,"mutability":"mutable","name":"sent","nameLocation":"1981:4:17","nodeType":"VariableDeclaration","scope":9227,"src":"1976:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9208,"name":"bool","nodeType":"ElementaryTypeName","src":"1976:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9216,"initialValue":{"arguments":[{"hexValue":"","id":9214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2014:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":9210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9183,"src":"1991:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1994:4:17","memberName":"call","nodeType":"MemberAccess","src":"1991:7:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9212,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"2006:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1991:22:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1991:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1975:42:17"},{"expression":{"arguments":[{"id":9218,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9209,"src":"2035:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64207472616e73666572206661696c6564","id":9219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2041:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd015e898359de13ed0b79597164e03bcb74e39fc3ea668dcea861d13fc2f0e5","typeString":"literal_string \"Refund transfer failed\""},"value":"Refund transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd015e898359de13ed0b79597164e03bcb74e39fc3ea668dcea861d13fc2f0e5","typeString":"literal_string \"Refund transfer failed\""}],"id":9217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2027:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2027:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9221,"nodeType":"ExpressionStatement","src":"2027:39:17"},{"eventCall":{"arguments":[{"id":9223,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9183,"src":"2094:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":9224,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9185,"src":"2098:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9222,"name":"RefundIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9097,"src":"2081:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9226,"nodeType":"EmitStatement","src":"2076:29:17"}]},"documentation":{"id":9181,"nodeType":"StructuredDocumentation","src":"1588:142:17","text":"@notice Issue a refund to a policyholder\n @param to The address of the policyholder\n @param amount The amount to be refunded"},"functionSelector":"7e72ad1c","id":9228,"implemented":true,"kind":"function","modifiers":[{"id":9188,"kind":"modifierInvocation","modifierName":{"id":9187,"name":"onlyOwner","nameLocations":["1800:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"1800:9:17"},"nodeType":"ModifierInvocation","src":"1800:9:17"}],"name":"sendRefund","nameLocation":"1744:10:17","nodeType":"FunctionDefinition","parameters":{"id":9186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9183,"mutability":"mutable","name":"to","nameLocation":"1771:2:17","nodeType":"VariableDeclaration","scope":9228,"src":"1755:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9182,"name":"address","nodeType":"ElementaryTypeName","src":"1755:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":9185,"mutability":"mutable","name":"amount","nameLocation":"1783:6:17","nodeType":"VariableDeclaration","scope":9228,"src":"1775:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1775:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1754:36:17"},"returnParameters":{"id":9189,"nodeType":"ParameterList","parameters":[],"src":"1810:0:17"},"scope":9290,"src":"1735:377:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9275,"nodeType":"Block","src":"2355:307:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9241,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2381:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":9240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9239,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{}}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2387:7:17","memberName":"balance","nodeType":"MemberAccess","src":"2373:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9244,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"2398:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2373:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520696e207661756c74","id":9246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2406:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807","typeString":"literal_string \"Insufficient balance in vault\""},"value":"Insufficient balance in vault"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807","typeString":"literal_string \"Insufficient balance in vault\""}],"id":9238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2365:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9248,"nodeType":"ExpressionStatement","src":"2365:73:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9250,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"2456:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2465:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2456:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":9253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2468:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b11095aafbe99943afbbb6f068d05109a1c5eba4809c60c5650aede961689b9f","typeString":"literal_string \"Withdraw amount must be greater than zero\""},"value":"Withdraw amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b11095aafbe99943afbbb6f068d05109a1c5eba4809c60c5650aede961689b9f","typeString":"literal_string \"Withdraw amount must be greater than zero\""}],"id":9249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2448:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2448:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9255,"nodeType":"ExpressionStatement","src":"2448:64:17"},{"assignments":[9257,null],"declarations":[{"constant":false,"id":9257,"mutability":"mutable","name":"sent","nameLocation":"2528:4:17","nodeType":"VariableDeclaration","scope":9275,"src":"2523:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9256,"name":"bool","nodeType":"ElementaryTypeName","src":"2523:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9264,"initialValue":{"arguments":[{"hexValue":"","id":9262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2561:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":9258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9231,"src":"2538:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2541:4:17","memberName":"call","nodeType":"MemberAccess","src":"2538:7:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9260,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"2553:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2538:22:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2522:42:17"},{"expression":{"arguments":[{"id":9266,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"2582:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177207472616e73666572206661696c6564","id":9267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2588:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a","typeString":"literal_string \"Withdraw transfer failed\""},"value":"Withdraw transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a","typeString":"literal_string \"Withdraw transfer failed\""}],"id":9265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2574:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2574:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9269,"nodeType":"ExpressionStatement","src":"2574:41:17"},{"eventCall":{"arguments":[{"id":9271,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9231,"src":"2644:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":9272,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"2648:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9270,"name":"FundWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9103,"src":"2630:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9274,"nodeType":"EmitStatement","src":"2625:30:17"}]},"documentation":{"id":9229,"nodeType":"StructuredDocumentation","src":"2122:150:17","text":"@notice Withdraw funds from the vault (Admin Only)\n @param to The address to withdraw funds to\n @param amount The amount to withdraw"},"functionSelector":"c1075329","id":9276,"implemented":true,"kind":"function","modifiers":[{"id":9236,"kind":"modifierInvocation","modifierName":{"id":9235,"name":"onlyOwner","nameLocations":["2345:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2345:9:17"},"nodeType":"ModifierInvocation","src":"2345:9:17"}],"name":"withdrawFunds","nameLocation":"2286:13:17","nodeType":"FunctionDefinition","parameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9231,"mutability":"mutable","name":"to","nameLocation":"2316:2:17","nodeType":"VariableDeclaration","scope":9276,"src":"2300:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9230,"name":"address","nodeType":"ElementaryTypeName","src":"2300:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":9233,"mutability":"mutable","name":"amount","nameLocation":"2328:6:17","nodeType":"VariableDeclaration","scope":9276,"src":"2320:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2299:36:17"},"returnParameters":{"id":9237,"nodeType":"ParameterList","parameters":[],"src":"2355:0:17"},"scope":9290,"src":"2277:385:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9288,"nodeType":"Block","src":"2833:45:17","statements":[{"expression":{"expression":{"arguments":[{"id":9284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2858:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_InsuranceVault_$9290","typeString":"contract InsuranceVault"}],"id":9283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2850:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9282,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:17","typeDescriptions":{}}},"id":9285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:7:17","memberName":"balance","nodeType":"MemberAccess","src":"2850:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9281,"id":9287,"nodeType":"Return","src":"2843:28:17"}]},"documentation":{"id":9277,"nodeType":"StructuredDocumentation","src":"2672:97:17","text":"@notice Get the current balance of the vault\n @return The current balance of the vault"},"functionSelector":"ed12e8ef","id":9289,"implemented":true,"kind":"function","modifiers":[],"name":"getVaultBalance","nameLocation":"2783:15:17","nodeType":"FunctionDefinition","parameters":{"id":9278,"nodeType":"ParameterList","parameters":[],"src":"2798:2:17"},"returnParameters":{"id":9281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9289,"src":"2824:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2824:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2823:9:17"},"scope":9290,"src":"2774:104:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9291,"src":"477:2403:17","usedErrors":[392,397],"usedEvents":[403,9085,9091,9097,9103]}],"src":"32:2848:17"},"id":17}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cb8026103b37e335d367be611893cc85b642daf48902948c5c235464991ce0064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB8 MUL PUSH2 0x3B3 PUSH31 0x335D367BE611893CC85B642DAF48902948C5C235464991CE0064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cb8026103b37e335d367be611893cc85b642daf48902948c5c235464991ce0064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB8 MUL PUSH2 0x3B3 PUSH31 0x335D367BE611893CC85B642DAF48902948C5C235464991CE0064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088b908b477a588bbc4eef25b45c5de74c136da97db084cfc572945c426e72c9e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB9 ADDMOD 0xB4 PUSH24 0xA588BBC4EEF25B45C5DE74C136DA97DB084CFC572945C426 0xE7 0x2C SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088b908b477a588bbc4eef25b45c5de74c136da97db084cfc572945c426e72c9e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB9 ADDMOD 0xB4 PUSH24 0xA588BBC4EEF25B45C5DE74C136DA97DB084CFC572945C426 0xE7 0x2C SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/base/PolicyBase.sol":{"PolicyBase":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"AdminGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"ClaimExpiryPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimFiled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"PolicyCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"PolicyExpired","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sumAssured","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"PolicyPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newExpiry","type":"uint256"}],"name":"PolicyRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"}],"name":"TrustedSignerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldVault","type":"address"},{"indexed":true,"internalType":"address","name":"newVault","type":"address"}],"name":"VaultUpdated","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"approveClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"refundAmount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"cancelPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimExpiryPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fileClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getClaim","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiryTimestamp","type":"uint256"}],"internalType":"struct PolicyBase.ClaimRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getPolicy","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct PolicyBase.Policy","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"grantAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"markExpiredPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"purchasePolicy","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"renewPolicy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"revokeAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"periodInDays","type":"uint256"}],"name":"setClaimExpiryPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newSigner","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newVault","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract InsuranceVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","approveClaim(bytes32)":"3719f096","cancelPolicy(bytes32,uint256,bytes)":"2fe1814c","claimExpiryPeriod()":"30d95b53","emergencyWithdraw(uint256)":"5312ea8e","fileClaim(bytes32,uint256,bytes)":"5052cb49","getClaim(bytes32)":"c9100bcb","getPolicy(bytes32)":"a3f685f9","getRoleAdmin(bytes32)":"248a9ca3","grantAdminRole(address)":"c634b78e","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","markExpiredPolicy(bytes32)":"b0529da2","purchasePolicy(address,uint256,uint256,uint256,bytes)":"b87fb65c","renewPolicy(bytes32,uint256,uint256,bytes)":"4e494b7c","renounceRole(bytes32,address)":"36568abe","revokeAdminRole(address)":"9a19c7b0","revokeRole(bytes32,address)":"d547741f","setClaimExpiryPeriod(uint256)":"19c0d1fa","setTrustedSigner(address)":"56a1c701","setVault(address)":"6817031b","supportsInterface(bytes4)":"01ffc9a7","trustedSigner()":"f74d5480","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"ClaimExpiryPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimFiled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PolicyExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"PolicyPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiry\",\"type\":\"uint256\"}],\"name\":\"PolicyRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"TrustedSignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"VaultUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"approveClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"cancelPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimExpiryPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fileClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.ClaimRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getPolicy\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.Policy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"markExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"purchasePolicy\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"renewPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"periodInDays\",\"type\":\"uint256\"}],\"name\":\"setClaimExpiryPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract InsuranceVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"approveClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"cancelPolicy(bytes32,uint256,bytes)\":{\"params\":{\"policyId\":\"The ID of the policy\",\"refundAmount\":\"Refund amount\",\"signature\":\"Signature from the backend verifying the refund amount\"}},\"emergencyWithdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}},\"fileClaim(bytes32,uint256,bytes)\":{\"params\":{\"amount\":\"Claim amount\",\"policyId\":\"The ID of the policy\",\"signature\":\"Signature from the backend verifying the claim\"}},\"getClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"markExpiredPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"params\":{\"duration\":\"Policy duration in seconds\",\"owner\":\"Address of the policy owner\",\"premium\":\"Premium amount calculated by backend\",\"signature\":\"Signature from the backend verifying the parameters\",\"sumAssured\":\"Sum assured amount\"}},\"renewPolicy(bytes32,uint256,uint256,bytes)\":{\"params\":{\"duration\":\"Additional duration in seconds\",\"policyId\":\"The ID of the policy\",\"premium\":\"New premium amount\",\"signature\":\"Signature from the backend verifying the renewal parameters\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimExpiryPeriod(uint256)\":{\"params\":{\"periodInDays\":\"Number of days a claim remains valid\"}},\"setTrustedSigner(address)\":{\"params\":{\"newSigner\":\"Address of the backend that will sign premium and claim amounts\"}},\"setVault(address)\":{\"params\":{\"newVault\":\"Address of the new vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"PolicyBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveClaim(bytes32)\":{\"notice\":\"Approve a claim after admin review\"},\"cancelPolicy(bytes32,uint256,bytes)\":{\"notice\":\"Cancel the policy with backend verification\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Emergency withdraw function (only for admin)\"},\"fileClaim(bytes32,uint256,bytes)\":{\"notice\":\"File a claim for the insurance with signature verification\"},\"getClaim(bytes32)\":{\"notice\":\"Get claim details\"},\"getPolicy(bytes32)\":{\"notice\":\"Get policy details\"},\"grantAdminRole(address)\":{\"notice\":\"Grant admin role (only default admin can do this)\"},\"markExpiredPolicy(bytes32)\":{\"notice\":\"Mark a policy as expired\"},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Purchase a new policy with backend-verified premium\"},\"renewPolicy(bytes32,uint256,uint256,bytes)\":{\"notice\":\"Renew an existing policy with backend-verified premium\"},\"revokeAdminRole(address)\":{\"notice\":\"Revoke admin role (only default admin can do this)\"},\"setClaimExpiryPeriod(uint256)\":{\"notice\":\"Set the claim expiry period\"},\"setTrustedSigner(address)\":{\"notice\":\"Set the trusted signer address\"},\"setVault(address)\":{\"notice\":\"Set the vault address\"}},\"notice\":\"Abstract base contract for insurance plans with signature verification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/base/PolicyBase.sol\":\"PolicyBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/base/PolicyBase.sol\":{\"keccak256\":\"0x555ae3aeceaa8b801b618d4c81768e8fc4faa13ce4531e4a6fd9eb924efd7926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18224c2ebd1c0fb75462a1791303086d1907609e60777f1db2385b4655686b7a\",\"dweb:/ipfs/QmVPqATESLLM2VpC67qC1PEW36jBY9MS57Ym497x4iZJqk\"]},\"contracts/utils/InsuranceVault.sol\":{\"keccak256\":\"0xd6ba55d73f4d10601c8a80c9de92154a2b0be98cc6c93a6146a9aea6e8ffb5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a99626984a220c68a6e19592536581477b445caae18158c0e733f75ccb862c97\",\"dweb:/ipfs/QmXLqCxfrLYvLd6hzUxCtnU2FmeP3ge52KskSJP9gH9oUG\"]}},\"version\":1}"}},"contracts/mock/PolicyBaseMock.sol":{"PolicyBaseMock":{"abi":[{"inputs":[{"internalType":"address","name":"_trustedSigner","type":"address"},{"internalType":"address payable","name":"_vaultAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"AdminGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"ClaimExpiryPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimFiled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"PolicyCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"PolicyExpired","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sumAssured","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"PolicyPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newExpiry","type":"uint256"}],"name":"PolicyRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"}],"name":"TrustedSignerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldVault","type":"address"},{"indexed":true,"internalType":"address","name":"newVault","type":"address"}],"name":"VaultUpdated","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"timeToAdvance","type":"uint256"}],"name":"advanceTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"approveClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"approveClaimWithoutVerification","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"refundAmount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"cancelPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"cancelPolicyWithoutTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimExpiryPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isPending","type":"bool"}],"name":"createMockClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fileClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fileClaimWithoutSignature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"forceExpirePolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getClaim","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiryTimestamp","type":"uint256"}],"internalType":"struct PolicyBase.ClaimRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getMockPolicyData","outputs":[{"components":[{"internalType":"string","name":"metadata","type":"string"},{"internalType":"bool","name":"processed","type":"bool"}],"internalType":"struct PolicyBaseMock.MockPolicyData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getPolicy","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct PolicyBase.Policy","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"grantAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"markExpiredPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"purchasePolicy","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"purchasePolicyWithSignature","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"purchasePolicyWithoutSignature","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"renewPolicy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"renewPolicyWithoutSignature","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"revokeAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"periodInDays","type":"uint256"}],"name":"setClaimExpiryPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"}],"name":"setClaimState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"expiryTimestamp","type":"uint256"}],"name":"setExpiryTimestamp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newReceiver","type":"address"}],"name":"setMockVaultReceiver","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"daysBeforeExpiry","type":"uint256"}],"name":"setTimeToNearExpiry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newSigner","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newVault","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"simulateVaultTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract InsuranceVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_6221":{"entryPoint":null,"id":6221,"parameterSlots":2,"returnSlots":0},"@_7210":{"entryPoint":null,"id":7210,"parameterSlots":2,"returnSlots":0},"@_grantRole_256":{"entryPoint":373,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_payable_fromMemory":{"entryPoint":573,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1246:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:18"},"nodeType":"YulFunctionCall","src":"125:12:18"},"nodeType":"YulExpressionStatement","src":"125:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:18"},"nodeType":"YulFunctionCall","src":"104:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:18"},"nodeType":"YulFunctionCall","src":"100:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:18"},"nodeType":"YulFunctionCall","src":"89:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:18"},"nodeType":"YulFunctionCall","src":"79:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:18"},"nodeType":"YulFunctionCall","src":"72:50:18"},"nodeType":"YulIf","src":"69:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:18","type":""}],"src":"14:131:18"},{"body":{"nodeType":"YulBlock","src":"256:287:18","statements":[{"body":{"nodeType":"YulBlock","src":"302:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"311:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"314:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"304:6:18"},"nodeType":"YulFunctionCall","src":"304:12:18"},"nodeType":"YulExpressionStatement","src":"304:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"277:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"286:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"273:3:18"},"nodeType":"YulFunctionCall","src":"273:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"298:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"269:3:18"},"nodeType":"YulFunctionCall","src":"269:32:18"},"nodeType":"YulIf","src":"266:52:18"},{"nodeType":"YulVariableDeclaration","src":"327:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"346:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"340:5:18"},"nodeType":"YulFunctionCall","src":"340:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"331:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"390:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"365:24:18"},"nodeType":"YulFunctionCall","src":"365:31:18"},"nodeType":"YulExpressionStatement","src":"365:31:18"},{"nodeType":"YulAssignment","src":"405:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"415:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"405:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"429:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:18"},"nodeType":"YulFunctionCall","src":"450:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"444:5:18"},"nodeType":"YulFunctionCall","src":"444:25:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"433:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"503:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"478:24:18"},"nodeType":"YulFunctionCall","src":"478:33:18"},"nodeType":"YulExpressionStatement","src":"478:33:18"},{"nodeType":"YulAssignment","src":"520:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"530:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"520:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"214:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"225:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"237:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"245:6:18","type":""}],"src":"150:393:18"},{"body":{"nodeType":"YulBlock","src":"722:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"739:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"750:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"732:6:18"},"nodeType":"YulFunctionCall","src":"732:21:18"},"nodeType":"YulExpressionStatement","src":"732:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"773:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"784:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"769:3:18"},"nodeType":"YulFunctionCall","src":"769:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"789:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:18"},"nodeType":"YulFunctionCall","src":"762:30:18"},"nodeType":"YulExpressionStatement","src":"762:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"823:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:18"},"nodeType":"YulFunctionCall","src":"808:18:18"},{"hexValue":"496e76616c6964207369676e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"828:24:18","type":"","value":"Invalid signer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"801:6:18"},"nodeType":"YulFunctionCall","src":"801:52:18"},"nodeType":"YulExpressionStatement","src":"801:52:18"},{"nodeType":"YulAssignment","src":"862:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"874:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"885:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:18"},"nodeType":"YulFunctionCall","src":"870:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"862:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"699:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"713:4:18","type":""}],"src":"548:346:18"},{"body":{"nodeType":"YulBlock","src":"1073:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1101:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1083:6:18"},"nodeType":"YulFunctionCall","src":"1083:21:18"},"nodeType":"YulExpressionStatement","src":"1083:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1124:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1135:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:18"},"nodeType":"YulFunctionCall","src":"1120:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"1140:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1113:6:18"},"nodeType":"YulFunctionCall","src":"1113:30:18"},"nodeType":"YulExpressionStatement","src":"1113:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:18"},"nodeType":"YulFunctionCall","src":"1159:18:18"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nodeType":"YulLiteral","src":"1179:23:18","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:18"},"nodeType":"YulFunctionCall","src":"1152:51:18"},"nodeType":"YulExpressionStatement","src":"1152:51:18"},{"nodeType":"YulAssignment","src":"1212:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1224:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1235:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:18"},"nodeType":"YulFunctionCall","src":"1220:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1212:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1050:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1064:4:18","type":""}],"src":"899:345:18"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid signer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x93A80 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3E50 CODESIZE SUB DUP1 PUSH3 0x3E50 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3B SWAP2 PUSH3 0x23D JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6572206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207661756C7420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x90 JUMP JUMPDEST PUSH3 0xFE PUSH1 0x0 CALLER PUSH3 0x175 JUMP JUMPDEST POP PUSH3 0x12B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x175 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND ADDRESS OR SWAP1 SSTORE POP PUSH3 0x27C SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x21A JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1D1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x21E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x25E DUP2 PUSH3 0x224 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x271 DUP2 PUSH3 0x224 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BC4 DUP1 PUSH3 0x28C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DEF90B7 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xA9544464 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC9100BCB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x93F JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x95F JUMPI DUP1 PUSH4 0xF99DEC74 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9544464 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xB04A733B EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xB0529DA2 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xB87FB65C EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x974552F9 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xA3F685F9 EQ PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6DEF90B7 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x6E9747CA EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x8B82E07A EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x91CFB505 EQ PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30D95B53 GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x528331DB GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x528331DB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5F64E78A EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30D95B53 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x3719F096 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x4E494B7C EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x5052CB49 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29216C7C GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x29216C7C EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x2AADB560 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x2F1ED59E EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x2FE1814C EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8B3BF82 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x19C0D1FA EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x20056ED3 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2EE JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x291 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820666F7277617264696E6720746F207661756C74206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x3306 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xCDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x414 CALLDATASIZE PUSH1 0x4 PUSH2 0x338E JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x34F2 JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x1802 JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x354C JUMP JUMPDEST PUSH2 0x1A86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x1D1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x1DBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x1E6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x1EEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x1F9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x35A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x5FF CALLDATASIZE PUSH1 0x4 PUSH2 0x3607 JUMP JUMPDEST PUSH2 0x2118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x220C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x65F CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2270 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x2324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x772 PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 SWAP1 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3633 JUMP JUMPDEST PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x809 CALLDATASIZE PUSH1 0x4 PUSH2 0x3668 JUMP JUMPDEST PUSH2 0x24F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x829 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x2831 JUMP JUMPDEST PUSH2 0x388 PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x3668 JUMP JUMPDEST PUSH2 0x28FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x85C CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x2C4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8FB PUSH2 0x87C CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x95A CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x2CF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x97F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x9B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2D1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x97F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA08 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA26 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SLOAD DUP8 EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE PUSH1 0x5 ADD DUP1 SLOAD SWAP3 ISZERO ISZERO SWAP4 ISZERO ISZERO PUSH2 0x100 MUL SWAP1 SWAP5 AND PUSH2 0xFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA3 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F64206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xB03 DUP4 PUSH3 0x15180 PUSH2 0x371A JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB792057619E1A3B0E2768725EF4CB4FC3CBF647C992D306E6876522E3FC0CDBC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB61 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xCF2 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0xD26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP7 SWAP2 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10DB185A5B48195E18D959591CC81CDD5B48185CDCDD5C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0xE6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP4 ADD SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST DUP4 CALLVALUE EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x1000 SWAP1 DUP5 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1078 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP9 SWAP2 PUSH32 0x16FE3AA381DE20CB3E0FB3F9AE8D20168747DF7E26DBC2B381AD5025EE5CA086 SWAP2 PUSH2 0x10C7 SWAP2 DUP11 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10F2 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH2 0x10FC DUP4 DUP4 PUSH2 0x2E19 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x111A DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1211 DUP2 DUP7 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x122D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP6 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 DUP5 ADD SLOAD SWAP2 MLOAD PUSH4 0x1F9CAB47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7E72AD1C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xF8590CD6B8C44BE7A2BC57131F10E203EC5F7D7F2F761E1508A8CC964ECB9EB7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x138C JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1396 DUP3 DUP3 PUSH2 0x2F62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13B5 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x13E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481C995C5D595CDD08195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1549 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP3 POP POP POP PUSH1 0x1 DUP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x163F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x165E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x16CE DUP2 DUP6 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x16EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x1725 SWAP1 DUP7 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP9 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x177C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x179D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP11 SWAP2 PUSH32 0x16FE3AA381DE20CB3E0FB3F9AE8D20168747DF7E26DBC2B381AD5025EE5CA086 SWAP2 PUSH2 0x17EC SWAP2 DUP13 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 GT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10DB185A5B48195E18D959591CC81CDD5B48185CDCDD5C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x1934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1973 DUP2 DUP6 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP4 ADD SWAP2 PUSH2 0x19E6 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP5 ADD SLOAD SWAP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1AAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1ACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1AEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1B0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3960 JUMP JUMPDEST DUP3 CALLVALUE EQ PUSH2 0x1B2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B37 DUP6 TIMESTAMP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1C59 DUP2 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP8 DUP8 PUSH2 0x1D04 DUP9 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2A DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1D4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC1075329 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC1075329 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC8 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964207369676E65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x4A297CF5D32586F80D2B0708A39D2DA1F46E6AE7722171E1C51DFD685B5B8AA8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1E82 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1EB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x1EE1 JUMPI DUP3 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1ED6 SWAP2 SWAP1 PUSH2 0x39C6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10FC SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF9 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x483BDEDAAF23706A9800AC1AF0D852B34927780D79F9D6BA60A80C7CAD75EA39 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1FB2 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1FFD PUSH1 0x1 TIMESTAMP PUSH2 0x39C6 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x207F SWAP1 PUSH2 0x39D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20AB SWAP1 PUSH2 0x39D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2130 DUP2 PUSH2 0x2E0C JUMP JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x2177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2224 DUP2 PUSH2 0x2E0C JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2288 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 EQ PUSH2 0x22B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE TIMESTAMP DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x22D1 JUMPI POP PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x10FC JUMPI PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232F DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x237D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x23CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA103932BB37B5B29039B2B633 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x1396 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x23FA DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 EQ PUSH2 0x2428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x245B SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP4 ADD SLOAD SWAP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP8 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x2563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x2583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3929 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x25A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3960 JUMP JUMPDEST DUP4 CALLVALUE EQ PUSH2 0x25C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 CHAINID PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x25FF DUP2 DUP4 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x261B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2649 DUP8 TIMESTAMP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x267F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x26B8 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x276B DUP2 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP9 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x27DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP10 DUP10 PUSH2 0x2816 DUP11 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x2865 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x28B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE481B9BDD08195E1C1A5C9959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x294D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x296D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x298D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3929 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x29AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3960 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x29CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 CHAINID PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2A09 DUP2 DUP5 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x2A25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2A53 DUP9 TIMESTAMP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2A89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 TIMESTAMP PUSH2 0x2AC2 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x2B75 DUP2 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2BE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP11 DUP11 PUSH2 0x2C20 DUP12 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C59 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x2CBF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x2E19 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1C4E23DE8D72C94B22992BD4D7B6786B215BA876AF214FF63E6A0CA38FC97AF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2D13 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH2 0x10FC DUP4 DUP4 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2D35 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 EQ PUSH2 0x2D63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x2D87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D96 DUP5 PUSH3 0x15180 PUSH2 0x371A JUMP JUMPDEST PUSH2 0x2DA0 SWAP1 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 GT ISZERO PUSH2 0x2E01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206578706972792065786365656473206F726967696E616C2065787069 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7279 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x2E16 DUP2 CALLER PUSH2 0x3084 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E25 DUP4 DUP4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2E5B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xA08 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA08 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP5 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 PUSH2 0x2F48 DUP3 DUP6 PUSH2 0x30C1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6E DUP4 DUP4 PUSH2 0x2247 JUMP JUMPDEST ISZERO PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0xD DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH13 0x54657374204D65746164617461 PUSH1 0x98 SHL PUSH1 0x60 DUP4 ADD MSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x3065 SWAP1 DUP3 PUSH2 0x3A98 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x308E DUP3 DUP3 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x30BD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x2E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30D1 DUP7 DUP7 PUSH2 0x30EB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x30E1 DUP3 DUP3 PUSH2 0x3138 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x3125 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x3117 DUP9 DUP3 DUP6 DUP6 PUSH2 0x31F1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x3131 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x314C JUMPI PUSH2 0x314C PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x3155 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3169 JUMPI PUSH2 0x3169 PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x3187 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x319B JUMPI PUSH2 0x319B PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x31BC JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH2 0x31D0 PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x30BD JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x322C JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x32B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x32AC JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x32B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x32EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x332C PUSH1 0x20 DUP7 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP3 POP PUSH2 0x333A PUSH1 0x40 DUP7 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3348 PUSH1 0x60 DUP7 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x337F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x33F4 DUP2 PUSH2 0x33BA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3441 JUMPI PUSH2 0x3441 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3469 JUMPI PUSH2 0x3469 PUSH2 0x33FF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x3482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34E8 DUP7 DUP3 DUP8 ADD PUSH2 0x3415 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3540 DUP8 DUP3 DUP9 ADD PUSH2 0x3415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x356D DUP2 PUSH2 0x33BA JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32EA DUP2 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD PUSH1 0x40 DUP3 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35DA JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP4 ADD PUSH2 0x35BE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP8 ADD ADD MSTORE DUP3 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x361A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3625 DUP2 PUSH2 0x33BA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x365F PUSH1 0x40 DUP6 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x368B DUP2 PUSH2 0x33BA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36C8 DUP9 DUP3 DUP10 ADD PUSH2 0x3415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x141BDB1A58DE48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x3704 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x3704 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207072656D69756D20616D6F756E740000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5072656D69756D207472616E7366657220746F207661756C74206661696C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D75737420626520706F7369746976650000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x53756D2061737375726564206D75737420626520706F73697469766500000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x506F6C69637920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x3704 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x39ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3A0D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP6 MSTORE PUSH1 0x14 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x34 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x94 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3A71 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A90 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A7D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB2 JUMPI PUSH2 0x3AB2 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x3AC6 DUP2 PUSH2 0x3AC0 DUP5 SLOAD PUSH2 0x39D9 JUMP JUMPDEST DUP5 PUSH2 0x3A4A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AFB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3AE3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3A90 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B2A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3B0B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3B48 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA264697066735822122071AE6D53E37D7ED3EFF44BC1 PUSH24 0xC6D34C9B8044601AA5E81C1A36959CE68082B164736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"214:9529:14:-:0;;;982:6:13;947:41;;449:173:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;536:14;552:13;-1:-1:-1;;;;;2612:28:13;;2604:63;;;;-1:-1:-1;;;2604:63:13;;750:2:18;2604:63:13;;;732:21:18;789:2;769:18;;;762:30;828:24;808:18;;;801:52;870:18;;2604:63:13;;;;;;;;;-1:-1:-1;;;;;2685:27:13;;2677:61;;;;-1:-1:-1;;;2677:61:13;;1101:2:18;2677:61:13;;;1083:21:18;1140:2;1120:18;;;1113:30;1179:23;1159:18;;;1152:51;1220:18;;2677:61:13;899:345:18;2677:61:13;2834:42;2232:4:0;2865:10:13;2834;:42::i;:::-;-1:-1:-1;2886:34:13;711:23;2909:10;2886;:34::i;:::-;-1:-1:-1;2977:13:13;:30;;-1:-1:-1;;;;;2977:30:13;;;-1:-1:-1;;;;;;2977:30:13;;;;;;;3055:5;:37;;;;;;;;;;;;;;;;2977:30;3150:22;;582:17:14::1;:33:::0;;;;::::1;610:4;582:33;::::0;;-1:-1:-1;214:9529:14;;-1:-1:-1;214:9529:14;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:131:18:-;-1:-1:-1;;;;;89:31:18;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:18;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;899:345::-;214:9529:14;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_6035":{"entryPoint":null,"id":6035,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@_7171":{"entryPoint":null,"id":7171,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":12420,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":11788,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":11801,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@_processPolicyData_7226":{"entryPoint":12308,"id":7226,"parameterSlots":1,"returnSlots":0},"@_revokeRole_294":{"entryPoint":12130,"id":294,"parameterSlots":2,"returnSlots":1},"@_throwError_2357":{"entryPoint":12600,"id":2357,"parameterSlots":2,"returnSlots":0},"@advanceTime_7599":{"entryPoint":7786,"id":7599,"parameterSlots":2,"returnSlots":0},"@approveClaimWithoutVerification_8041":{"entryPoint":2887,"id":8041,"parameterSlots":1,"returnSlots":1},"@approveClaim_6837":{"entryPoint":5019,"id":6837,"parameterSlots":1,"returnSlots":1},"@cancelPolicyWithoutTransfer_8122":{"entryPoint":3290,"id":8122,"parameterSlots":1,"returnSlots":0},"@cancelPolicy_6938":{"entryPoint":4354,"id":6938,"parameterSlots":3,"returnSlots":0},"@claimExpiryPeriod_6043":{"entryPoint":null,"id":6043,"parameterSlots":0,"returnSlots":0},"@createMockClaim_7966":{"entryPoint":9186,"id":7966,"parameterSlots":3,"returnSlots":0},"@emergencyWithdraw_7149":{"entryPoint":7455,"id":7149,"parameterSlots":1,"returnSlots":0},"@fileClaimWithoutSignature_7665":{"entryPoint":3470,"id":7665,"parameterSlots":2,"returnSlots":0},"@fileClaim_6750":{"entryPoint":6146,"id":6750,"parameterSlots":3,"returnSlots":0},"@forceExpirePolicy_7556":{"entryPoint":8090,"id":7556,"parameterSlots":1,"returnSlots":0},"@generatePolicyId_6440":{"entryPoint":12237,"id":6440,"parameterSlots":2,"returnSlots":1},"@getClaim_6966":{"entryPoint":null,"id":6966,"parameterSlots":1,"returnSlots":1},"@getMockPolicyData_7513":{"entryPoint":8259,"id":7513,"parameterSlots":1,"returnSlots":1},"@getPolicy_6952":{"entryPoint":null,"id":6952,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@grantAdminRole_6373":{"entryPoint":11342,"id":6373,"parameterSlots":1,"returnSlots":0},"@grantRole_147":{"entryPoint":4311,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":8775,"id":80,"parameterSlots":2,"returnSlots":1},"@markExpiredPolicy_7007":{"entryPoint":10289,"id":7007,"parameterSlots":1,"returnSlots":0},"@purchasePolicyWithSignature_7500":{"entryPoint":9462,"id":7500,"parameterSlots":5,"returnSlots":0},"@purchasePolicyWithoutSignature_7346":{"entryPoint":6790,"id":7346,"parameterSlots":4,"returnSlots":0},"@purchasePolicy_6637":{"entryPoint":10494,"id":6637,"parameterSlots":5,"returnSlots":1},"@recover_2114":{"entryPoint":12481,"id":2114,"parameterSlots":2,"returnSlots":1},"@renewPolicyWithoutSignature_7805":{"entryPoint":3890,"id":7805,"parameterSlots":3,"returnSlots":0},"@renewPolicy_7126":{"entryPoint":5546,"id":7126,"parameterSlots":4,"returnSlots":0},"@renounceRole_189":{"entryPoint":4963,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeAdminRole_6406":{"entryPoint":8996,"id":6406,"parameterSlots":1,"returnSlots":0},"@revokeRole_166":{"entryPoint":11512,"id":166,"parameterSlots":2,"returnSlots":0},"@setClaimExpiryPeriod_6344":{"entryPoint":2712,"id":6344,"parameterSlots":1,"returnSlots":0},"@setClaimState_7720":{"entryPoint":2574,"id":7720,"parameterSlots":4,"returnSlots":0},"@setExpiryTimestamp_7858":{"entryPoint":8816,"id":7858,"parameterSlots":2,"returnSlots":0},"@setMockVaultReceiver_8054":{"entryPoint":8716,"id":8054,"parameterSlots":1,"returnSlots":0},"@setTimeToNearExpiry_7914":{"entryPoint":11549,"id":7914,"parameterSlots":2,"returnSlots":0},"@setTrustedSigner_6274":{"entryPoint":7613,"id":6274,"parameterSlots":1,"returnSlots":0},"@setVault_6312":{"entryPoint":7918,"id":6312,"parameterSlots":1,"returnSlots":0},"@simulateVaultTransfer_8090":{"entryPoint":8472,"id":8090,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2467":{"entryPoint":null,"id":2467,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":2519,"id":62,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_2373":{"entryPoint":null,"id":2373,"parameterSlots":1,"returnSlots":1},"@trustedSigner_6037":{"entryPoint":null,"id":6037,"parameterSlots":0,"returnSlots":0},"@tryRecover_2084":{"entryPoint":12523,"id":2084,"parameterSlots":2,"returnSlots":3},"@tryRecover_2272":{"entryPoint":12785,"id":2272,"parameterSlots":4,"returnSlots":3},"@vault_6040":{"entryPoint":null,"id":6040,"parameterSlots":0,"returnSlots":0},"@verifySignature_6479":{"entryPoint":11947,"id":6479,"parameterSlots":2,"returnSlots":1},"abi_decode_bool":{"entryPoint":13041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":13333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":13831,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256":{"entryPoint":13644,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":13928,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":13263,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_boolt_boolt_bool":{"entryPoint":13062,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":13164,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_bool":{"entryPoint":13875,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr":{"entryPoint":13474,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_uint256":{"entryPoint":13198,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":13554,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":12992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":13139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":14867,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14488,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6552775c3444956f99dfd3e96a4a5a197740e423e1e715df66bcf38079415142__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14380,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14279,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14220,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14743,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14633,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_MockPolicyData_$7184_memory_ptr__to_t_struct$_MockPolicyData_$7184_memory_ptr__fromStack_reversed":{"entryPoint":13732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14260,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14106,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14790,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":14922,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":15000,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":14809,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":14084,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15192,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13311,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":13242,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:26034:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"205:14:18","statements":[{"nodeType":"YulAssignment","src":"207:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"214:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"207:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"189:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"197:3:18","type":""}],"src":"14:205:18"},{"body":{"nodeType":"YulBlock","src":"398:180:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"426:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"408:6:18"},"nodeType":"YulFunctionCall","src":"408:21:18"},"nodeType":"YulExpressionStatement","src":"408:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"449:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"445:3:18"},"nodeType":"YulFunctionCall","src":"445:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:18","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"438:6:18"},"nodeType":"YulFunctionCall","src":"438:30:18"},"nodeType":"YulExpressionStatement","src":"438:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"488:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"499:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"484:3:18"},"nodeType":"YulFunctionCall","src":"484:18:18"},{"hexValue":"45544820666f7277617264696e6720746f207661756c74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"504:32:18","type":"","value":"ETH forwarding to vault failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"477:6:18"},"nodeType":"YulFunctionCall","src":"477:60:18"},"nodeType":"YulExpressionStatement","src":"477:60:18"},{"nodeType":"YulAssignment","src":"546:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"558:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"569:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"554:3:18"},"nodeType":"YulFunctionCall","src":"554:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"546:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"375:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"389:4:18","type":""}],"src":"224:354:18"},{"body":{"nodeType":"YulBlock","src":"652:217:18","statements":[{"body":{"nodeType":"YulBlock","src":"698:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"710:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"700:6:18"},"nodeType":"YulFunctionCall","src":"700:12:18"},"nodeType":"YulExpressionStatement","src":"700:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"673:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"682:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"669:3:18"},"nodeType":"YulFunctionCall","src":"669:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"694:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"665:3:18"},"nodeType":"YulFunctionCall","src":"665:32:18"},"nodeType":"YulIf","src":"662:52:18"},{"nodeType":"YulVariableDeclaration","src":"723:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"749:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"736:12:18"},"nodeType":"YulFunctionCall","src":"736:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"727:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"823:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:18"},"nodeType":"YulFunctionCall","src":"825:12:18"},"nodeType":"YulExpressionStatement","src":"825:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"792:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"808:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"799:3:18"},"nodeType":"YulFunctionCall","src":"799:20:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"788:3:18"},"nodeType":"YulFunctionCall","src":"788:32:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"778:2:18"},"nodeType":"YulFunctionCall","src":"778:43:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"771:6:18"},"nodeType":"YulFunctionCall","src":"771:51:18"},"nodeType":"YulIf","src":"768:71:18"},{"nodeType":"YulAssignment","src":"848:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"858:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"848:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"618:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"629:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"641:6:18","type":""}],"src":"583:286:18"},{"body":{"nodeType":"YulBlock","src":"969:92:18","statements":[{"nodeType":"YulAssignment","src":"979:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1002:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:18"},"nodeType":"YulFunctionCall","src":"987:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"979:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1046:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1039:6:18"},"nodeType":"YulFunctionCall","src":"1039:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1032:6:18"},"nodeType":"YulFunctionCall","src":"1032:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1014:6:18"},"nodeType":"YulFunctionCall","src":"1014:41:18"},"nodeType":"YulExpressionStatement","src":"1014:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"938:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"949:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"960:4:18","type":""}],"src":"874:187:18"},{"body":{"nodeType":"YulBlock","src":"1112:114:18","statements":[{"nodeType":"YulAssignment","src":"1122:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1131:12:18"},"nodeType":"YulFunctionCall","src":"1131:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1122:5:18"}]},{"body":{"nodeType":"YulBlock","src":"1204:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1213:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1206:6:18"},"nodeType":"YulFunctionCall","src":"1206:12:18"},"nodeType":"YulExpressionStatement","src":"1206:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1173:5:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1194:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1187:6:18"},"nodeType":"YulFunctionCall","src":"1187:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1180:6:18"},"nodeType":"YulFunctionCall","src":"1180:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1170:2:18"},"nodeType":"YulFunctionCall","src":"1170:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1163:6:18"},"nodeType":"YulFunctionCall","src":"1163:40:18"},"nodeType":"YulIf","src":"1160:60:18"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1091:6:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1102:5:18","type":""}],"src":"1066:160:18"},{"body":{"nodeType":"YulBlock","src":"1343:273:18","statements":[{"body":{"nodeType":"YulBlock","src":"1390:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1399:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1402:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1392:6:18"},"nodeType":"YulFunctionCall","src":"1392:12:18"},"nodeType":"YulExpressionStatement","src":"1392:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1364:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1373:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1360:3:18"},"nodeType":"YulFunctionCall","src":"1360:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1385:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1356:3:18"},"nodeType":"YulFunctionCall","src":"1356:33:18"},"nodeType":"YulIf","src":"1353:53:18"},{"nodeType":"YulAssignment","src":"1415:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1438:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:18"},"nodeType":"YulFunctionCall","src":"1425:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1415:6:18"}]},{"nodeType":"YulAssignment","src":"1457:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1487:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1498:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1483:3:18"},"nodeType":"YulFunctionCall","src":"1483:18:18"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"1467:15:18"},"nodeType":"YulFunctionCall","src":"1467:35:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1457:6:18"}]},{"nodeType":"YulAssignment","src":"1511:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1541:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1552:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1537:3:18"},"nodeType":"YulFunctionCall","src":"1537:18:18"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"1521:15:18"},"nodeType":"YulFunctionCall","src":"1521:35:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1511:6:18"}]},{"nodeType":"YulAssignment","src":"1565:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1606:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1591:3:18"},"nodeType":"YulFunctionCall","src":"1591:18:18"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"1575:15:18"},"nodeType":"YulFunctionCall","src":"1575:35:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1565:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_boolt_boolt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1285:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1296:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1308:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1316:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1324:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1332:6:18","type":""}],"src":"1231:385:18"},{"body":{"nodeType":"YulBlock","src":"1691:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1737:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1746:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1749:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1739:6:18"},"nodeType":"YulFunctionCall","src":"1739:12:18"},"nodeType":"YulExpressionStatement","src":"1739:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1712:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1721:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1708:3:18"},"nodeType":"YulFunctionCall","src":"1708:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1733:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1704:3:18"},"nodeType":"YulFunctionCall","src":"1704:32:18"},"nodeType":"YulIf","src":"1701:52:18"},{"nodeType":"YulAssignment","src":"1762:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1785:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1772:12:18"},"nodeType":"YulFunctionCall","src":"1772:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1762:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1657:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1668:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1680:6:18","type":""}],"src":"1621:180:18"},{"body":{"nodeType":"YulBlock","src":"1876:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1922:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1934:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1924:6:18"},"nodeType":"YulFunctionCall","src":"1924:12:18"},"nodeType":"YulExpressionStatement","src":"1924:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1897:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1906:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1893:3:18"},"nodeType":"YulFunctionCall","src":"1893:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1918:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1889:3:18"},"nodeType":"YulFunctionCall","src":"1889:32:18"},"nodeType":"YulIf","src":"1886:52:18"},{"nodeType":"YulAssignment","src":"1947:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1957:12:18"},"nodeType":"YulFunctionCall","src":"1957:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1947:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1842:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1853:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1865:6:18","type":""}],"src":"1806:180:18"},{"body":{"nodeType":"YulBlock","src":"2092:76:18","statements":[{"nodeType":"YulAssignment","src":"2102:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2114:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2125:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2110:3:18"},"nodeType":"YulFunctionCall","src":"2110:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2102:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2144:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"2155:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2137:6:18"},"nodeType":"YulFunctionCall","src":"2137:25:18"},"nodeType":"YulExpressionStatement","src":"2137:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2061:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2072:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2083:4:18","type":""}],"src":"1991:177:18"},{"body":{"nodeType":"YulBlock","src":"2274:76:18","statements":[{"nodeType":"YulAssignment","src":"2284:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2296:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2307:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2292:3:18"},"nodeType":"YulFunctionCall","src":"2292:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2284:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"2337:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2319:6:18"},"nodeType":"YulFunctionCall","src":"2319:25:18"},"nodeType":"YulExpressionStatement","src":"2319:25:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2243:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2254:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2265:4:18","type":""}],"src":"2173:177:18"},{"body":{"nodeType":"YulBlock","src":"2442:161:18","statements":[{"body":{"nodeType":"YulBlock","src":"2488:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2497:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2500:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2490:6:18"},"nodeType":"YulFunctionCall","src":"2490:12:18"},"nodeType":"YulExpressionStatement","src":"2490:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2463:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2472:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2459:3:18"},"nodeType":"YulFunctionCall","src":"2459:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2484:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2455:3:18"},"nodeType":"YulFunctionCall","src":"2455:32:18"},"nodeType":"YulIf","src":"2452:52:18"},{"nodeType":"YulAssignment","src":"2513:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2536:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2523:12:18"},"nodeType":"YulFunctionCall","src":"2523:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2513:6:18"}]},{"nodeType":"YulAssignment","src":"2555:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2582:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2593:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2578:3:18"},"nodeType":"YulFunctionCall","src":"2578:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2565:12:18"},"nodeType":"YulFunctionCall","src":"2565:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2555:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2400:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2411:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2423:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2431:6:18","type":""}],"src":"2355:248:18"},{"body":{"nodeType":"YulBlock","src":"2712:212:18","statements":[{"body":{"nodeType":"YulBlock","src":"2758:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2767:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2770:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2760:6:18"},"nodeType":"YulFunctionCall","src":"2760:12:18"},"nodeType":"YulExpressionStatement","src":"2760:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2733:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2742:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2729:3:18"},"nodeType":"YulFunctionCall","src":"2729:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2754:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2725:3:18"},"nodeType":"YulFunctionCall","src":"2725:32:18"},"nodeType":"YulIf","src":"2722:52:18"},{"nodeType":"YulAssignment","src":"2783:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2806:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2793:12:18"},"nodeType":"YulFunctionCall","src":"2793:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2783:6:18"}]},{"nodeType":"YulAssignment","src":"2825:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2852:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2863:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2848:3:18"},"nodeType":"YulFunctionCall","src":"2848:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2835:12:18"},"nodeType":"YulFunctionCall","src":"2835:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2825:6:18"}]},{"nodeType":"YulAssignment","src":"2876:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2903:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2914:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2899:3:18"},"nodeType":"YulFunctionCall","src":"2899:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2886:12:18"},"nodeType":"YulFunctionCall","src":"2886:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2876:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2662:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2673:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2685:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2693:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2701:6:18","type":""}],"src":"2608:316:18"},{"body":{"nodeType":"YulBlock","src":"2974:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"3038:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3047:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3050:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3040:6:18"},"nodeType":"YulFunctionCall","src":"3040:12:18"},"nodeType":"YulExpressionStatement","src":"3040:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2997:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3008:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3019:3:18"},"nodeType":"YulFunctionCall","src":"3019:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3032:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3015:3:18"},"nodeType":"YulFunctionCall","src":"3015:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3004:3:18"},"nodeType":"YulFunctionCall","src":"3004:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2994:2:18"},"nodeType":"YulFunctionCall","src":"2994:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2987:6:18"},"nodeType":"YulFunctionCall","src":"2987:50:18"},"nodeType":"YulIf","src":"2984:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2963:5:18","type":""}],"src":"2929:131:18"},{"body":{"nodeType":"YulBlock","src":"3152:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"3198:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3207:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3210:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3200:6:18"},"nodeType":"YulFunctionCall","src":"3200:12:18"},"nodeType":"YulExpressionStatement","src":"3200:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3173:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3182:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3169:3:18"},"nodeType":"YulFunctionCall","src":"3169:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3194:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3165:3:18"},"nodeType":"YulFunctionCall","src":"3165:32:18"},"nodeType":"YulIf","src":"3162:52:18"},{"nodeType":"YulAssignment","src":"3223:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3246:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3233:12:18"},"nodeType":"YulFunctionCall","src":"3233:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3223:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3265:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3295:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3306:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3291:3:18"},"nodeType":"YulFunctionCall","src":"3291:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3278:12:18"},"nodeType":"YulFunctionCall","src":"3278:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3269:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3344:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3319:24:18"},"nodeType":"YulFunctionCall","src":"3319:31:18"},"nodeType":"YulExpressionStatement","src":"3319:31:18"},{"nodeType":"YulAssignment","src":"3359:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"3369:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3359:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3110:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3121:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3133:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3141:6:18","type":""}],"src":"3065:315:18"},{"body":{"nodeType":"YulBlock","src":"3417:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3441:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3446:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3437:3:18"},"nodeType":"YulFunctionCall","src":"3437:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3427:6:18"},"nodeType":"YulFunctionCall","src":"3427:31:18"},"nodeType":"YulExpressionStatement","src":"3427:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3474:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3477:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3467:6:18"},"nodeType":"YulFunctionCall","src":"3467:15:18"},"nodeType":"YulExpressionStatement","src":"3467:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3498:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3501:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3491:6:18"},"nodeType":"YulFunctionCall","src":"3491:15:18"},"nodeType":"YulExpressionStatement","src":"3491:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3385:127:18"},{"body":{"nodeType":"YulBlock","src":"3569:666:18","statements":[{"body":{"nodeType":"YulBlock","src":"3618:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3627:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3630:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3620:6:18"},"nodeType":"YulFunctionCall","src":"3620:12:18"},"nodeType":"YulExpressionStatement","src":"3620:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3597:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3605:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:18"},"nodeType":"YulFunctionCall","src":"3593:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"3612:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3589:3:18"},"nodeType":"YulFunctionCall","src":"3589:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3582:6:18"},"nodeType":"YulFunctionCall","src":"3582:35:18"},"nodeType":"YulIf","src":"3579:55:18"},{"nodeType":"YulVariableDeclaration","src":"3643:30:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3666:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3653:12:18"},"nodeType":"YulFunctionCall","src":"3653:20:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3647:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3682:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3692:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3686:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3733:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3735:16:18"},"nodeType":"YulFunctionCall","src":"3735:18:18"},"nodeType":"YulExpressionStatement","src":"3735:18:18"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3725:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"3729:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3722:2:18"},"nodeType":"YulFunctionCall","src":"3722:10:18"},"nodeType":"YulIf","src":"3719:36:18"},{"nodeType":"YulVariableDeclaration","src":"3764:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3778:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3774:3:18"},"nodeType":"YulFunctionCall","src":"3774:7:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3768:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3790:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3810:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3804:5:18"},"nodeType":"YulFunctionCall","src":"3804:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3794:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3822:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3844:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3868:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3872:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3864:3:18"},"nodeType":"YulFunctionCall","src":"3864:13:18"},{"name":"_3","nodeType":"YulIdentifier","src":"3879:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3860:3:18"},"nodeType":"YulFunctionCall","src":"3860:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"3884:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3856:3:18"},"nodeType":"YulFunctionCall","src":"3856:31:18"},{"name":"_3","nodeType":"YulIdentifier","src":"3889:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3852:3:18"},"nodeType":"YulFunctionCall","src":"3852:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3840:3:18"},"nodeType":"YulFunctionCall","src":"3840:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3826:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3952:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3954:16:18"},"nodeType":"YulFunctionCall","src":"3954:18:18"},"nodeType":"YulExpressionStatement","src":"3954:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3911:10:18"},{"name":"_2","nodeType":"YulIdentifier","src":"3923:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3908:2:18"},"nodeType":"YulFunctionCall","src":"3908:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3931:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3943:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3928:2:18"},"nodeType":"YulFunctionCall","src":"3928:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3905:2:18"},"nodeType":"YulFunctionCall","src":"3905:46:18"},"nodeType":"YulIf","src":"3902:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3990:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3994:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:18"},"nodeType":"YulFunctionCall","src":"3983:22:18"},"nodeType":"YulExpressionStatement","src":"3983:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4021:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4029:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4014:6:18"},"nodeType":"YulFunctionCall","src":"4014:18:18"},"nodeType":"YulExpressionStatement","src":"4014:18:18"},{"body":{"nodeType":"YulBlock","src":"4080:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4089:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4092:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4082:6:18"},"nodeType":"YulFunctionCall","src":"4082:12:18"},"nodeType":"YulExpressionStatement","src":"4082:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4055:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4063:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4051:3:18"},"nodeType":"YulFunctionCall","src":"4051:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"4068:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4047:3:18"},"nodeType":"YulFunctionCall","src":"4047:26:18"},{"name":"end","nodeType":"YulIdentifier","src":"4075:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4044:2:18"},"nodeType":"YulFunctionCall","src":"4044:35:18"},"nodeType":"YulIf","src":"4041:55:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4122:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4130:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4118:3:18"},"nodeType":"YulFunctionCall","src":"4118:17:18"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4141:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4149:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4137:3:18"},"nodeType":"YulFunctionCall","src":"4137:17:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4156:2:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4105:12:18"},"nodeType":"YulFunctionCall","src":"4105:54:18"},"nodeType":"YulExpressionStatement","src":"4105:54:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4183:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"4191:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4179:3:18"},"nodeType":"YulFunctionCall","src":"4179:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"4196:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4175:3:18"},"nodeType":"YulFunctionCall","src":"4175:26:18"},{"kind":"number","nodeType":"YulLiteral","src":"4203:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4168:6:18"},"nodeType":"YulFunctionCall","src":"4168:37:18"},"nodeType":"YulExpressionStatement","src":"4168:37:18"},{"nodeType":"YulAssignment","src":"4214:15:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4223:6:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4214:5:18"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3543:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3551:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3559:5:18","type":""}],"src":"3517:718:18"},{"body":{"nodeType":"YulBlock","src":"4353:343:18","statements":[{"body":{"nodeType":"YulBlock","src":"4399:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4408:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4411:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4401:6:18"},"nodeType":"YulFunctionCall","src":"4401:12:18"},"nodeType":"YulExpressionStatement","src":"4401:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4374:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4383:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4370:3:18"},"nodeType":"YulFunctionCall","src":"4370:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4395:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4366:3:18"},"nodeType":"YulFunctionCall","src":"4366:32:18"},"nodeType":"YulIf","src":"4363:52:18"},{"nodeType":"YulAssignment","src":"4424:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4434:12:18"},"nodeType":"YulFunctionCall","src":"4434:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4424:6:18"}]},{"nodeType":"YulAssignment","src":"4466:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4493:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4504:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:18"},"nodeType":"YulFunctionCall","src":"4489:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4476:12:18"},"nodeType":"YulFunctionCall","src":"4476:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4466:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"4517:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4548:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4559:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4544:3:18"},"nodeType":"YulFunctionCall","src":"4544:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4531:12:18"},"nodeType":"YulFunctionCall","src":"4531:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4521:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4606:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4615:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4618:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4608:6:18"},"nodeType":"YulFunctionCall","src":"4608:12:18"},"nodeType":"YulExpressionStatement","src":"4608:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4578:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4586:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4575:2:18"},"nodeType":"YulFunctionCall","src":"4575:30:18"},"nodeType":"YulIf","src":"4572:50:18"},{"nodeType":"YulAssignment","src":"4631:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4662:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4673:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4658:3:18"},"nodeType":"YulFunctionCall","src":"4658:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4682:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4641:16:18"},"nodeType":"YulFunctionCall","src":"4641:49:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4631:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4303:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4314:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4326:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4334:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4342:6:18","type":""}],"src":"4240:456:18"},{"body":{"nodeType":"YulBlock","src":"4831:395:18","statements":[{"body":{"nodeType":"YulBlock","src":"4878:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4887:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4890:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4880:6:18"},"nodeType":"YulFunctionCall","src":"4880:12:18"},"nodeType":"YulExpressionStatement","src":"4880:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4852:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4848:3:18"},"nodeType":"YulFunctionCall","src":"4848:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4873:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4844:3:18"},"nodeType":"YulFunctionCall","src":"4844:33:18"},"nodeType":"YulIf","src":"4841:53:18"},{"nodeType":"YulAssignment","src":"4903:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4926:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4913:12:18"},"nodeType":"YulFunctionCall","src":"4913:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4903:6:18"}]},{"nodeType":"YulAssignment","src":"4945:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4983:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:18"},"nodeType":"YulFunctionCall","src":"4968:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4955:12:18"},"nodeType":"YulFunctionCall","src":"4955:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4945:6:18"}]},{"nodeType":"YulAssignment","src":"4996:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5034:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:18"},"nodeType":"YulFunctionCall","src":"5019:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5006:12:18"},"nodeType":"YulFunctionCall","src":"5006:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4996:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5047:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5078:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5089:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5074:3:18"},"nodeType":"YulFunctionCall","src":"5074:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5061:12:18"},"nodeType":"YulFunctionCall","src":"5061:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5051:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5136:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5145:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5148:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5138:6:18"},"nodeType":"YulFunctionCall","src":"5138:12:18"},"nodeType":"YulExpressionStatement","src":"5138:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5108:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5116:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5105:2:18"},"nodeType":"YulFunctionCall","src":"5105:30:18"},"nodeType":"YulIf","src":"5102:50:18"},{"nodeType":"YulAssignment","src":"5161:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5192:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5203:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5188:3:18"},"nodeType":"YulFunctionCall","src":"5188:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5212:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5171:16:18"},"nodeType":"YulFunctionCall","src":"5171:49:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5161:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4773:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4784:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4796:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4804:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4812:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4820:6:18","type":""}],"src":"4701:525:18"},{"body":{"nodeType":"YulBlock","src":"5352:331:18","statements":[{"body":{"nodeType":"YulBlock","src":"5399:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5408:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5411:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5401:6:18"},"nodeType":"YulFunctionCall","src":"5401:12:18"},"nodeType":"YulExpressionStatement","src":"5401:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5373:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5382:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5369:3:18"},"nodeType":"YulFunctionCall","src":"5369:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5394:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5365:3:18"},"nodeType":"YulFunctionCall","src":"5365:33:18"},"nodeType":"YulIf","src":"5362:53:18"},{"nodeType":"YulVariableDeclaration","src":"5424:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5450:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5437:12:18"},"nodeType":"YulFunctionCall","src":"5437:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5428:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5494:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5469:24:18"},"nodeType":"YulFunctionCall","src":"5469:31:18"},"nodeType":"YulExpressionStatement","src":"5469:31:18"},{"nodeType":"YulAssignment","src":"5509:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5519:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5509:6:18"}]},{"nodeType":"YulAssignment","src":"5533:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5560:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5571:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:18"},"nodeType":"YulFunctionCall","src":"5556:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5543:12:18"},"nodeType":"YulFunctionCall","src":"5543:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5533:6:18"}]},{"nodeType":"YulAssignment","src":"5584:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5622:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5607:3:18"},"nodeType":"YulFunctionCall","src":"5607:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5594:12:18"},"nodeType":"YulFunctionCall","src":"5594:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5584:6:18"}]},{"nodeType":"YulAssignment","src":"5635:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5662:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5673:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5658:3:18"},"nodeType":"YulFunctionCall","src":"5658:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5645:12:18"},"nodeType":"YulFunctionCall","src":"5645:32:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5635:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5294:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5305:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5317:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5325:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5333:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5341:6:18","type":""}],"src":"5231:452:18"},{"body":{"nodeType":"YulBlock","src":"5758:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"5804:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5813:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5816:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5806:6:18"},"nodeType":"YulFunctionCall","src":"5806:12:18"},"nodeType":"YulExpressionStatement","src":"5806:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5779:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5788:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5775:3:18"},"nodeType":"YulFunctionCall","src":"5775:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5800:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5771:3:18"},"nodeType":"YulFunctionCall","src":"5771:32:18"},"nodeType":"YulIf","src":"5768:52:18"},{"nodeType":"YulVariableDeclaration","src":"5829:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5855:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5842:12:18"},"nodeType":"YulFunctionCall","src":"5842:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5833:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5899:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5874:24:18"},"nodeType":"YulFunctionCall","src":"5874:31:18"},"nodeType":"YulExpressionStatement","src":"5874:31:18"},{"nodeType":"YulAssignment","src":"5914:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5924:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5914:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5724:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5735:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5747:6:18","type":""}],"src":"5688:247:18"},{"body":{"nodeType":"YulBlock","src":"6018:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"6064:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6073:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6076:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6066:6:18"},"nodeType":"YulFunctionCall","src":"6066:12:18"},"nodeType":"YulExpressionStatement","src":"6066:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6039:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6035:3:18"},"nodeType":"YulFunctionCall","src":"6035:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6060:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6031:3:18"},"nodeType":"YulFunctionCall","src":"6031:32:18"},"nodeType":"YulIf","src":"6028:52:18"},{"nodeType":"YulVariableDeclaration","src":"6089:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6102:12:18"},"nodeType":"YulFunctionCall","src":"6102:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6093:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6159:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6134:24:18"},"nodeType":"YulFunctionCall","src":"6134:31:18"},"nodeType":"YulExpressionStatement","src":"6134:31:18"},{"nodeType":"YulAssignment","src":"6174:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"6184:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6174:6:18"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5984:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5995:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6007:6:18","type":""}],"src":"5940:255:18"},{"body":{"nodeType":"YulBlock","src":"6365:602:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6375:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6385:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6379:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6403:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6414:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6396:6:18"},"nodeType":"YulFunctionCall","src":"6396:21:18"},"nodeType":"YulExpressionStatement","src":"6396:21:18"},{"nodeType":"YulVariableDeclaration","src":"6426:33:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6452:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6446:5:18"},"nodeType":"YulFunctionCall","src":"6446:13:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6430:12:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6479:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6490:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6475:3:18"},"nodeType":"YulFunctionCall","src":"6475:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"6495:4:18","type":"","value":"0x40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6468:6:18"},"nodeType":"YulFunctionCall","src":"6468:32:18"},"nodeType":"YulExpressionStatement","src":"6468:32:18"},{"nodeType":"YulVariableDeclaration","src":"6509:33:18","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6529:12:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6523:5:18"},"nodeType":"YulFunctionCall","src":"6523:19:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6513:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6562:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6573:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6558:3:18"},"nodeType":"YulFunctionCall","src":"6558:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"6578:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6551:6:18"},"nodeType":"YulFunctionCall","src":"6551:34:18"},"nodeType":"YulExpressionStatement","src":"6551:34:18"},{"nodeType":"YulVariableDeclaration","src":"6594:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6603:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6598:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6663:97:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6692:9:18"},{"name":"i","nodeType":"YulIdentifier","src":"6703:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6688:3:18"},"nodeType":"YulFunctionCall","src":"6688:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"6707:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6684:3:18"},"nodeType":"YulFunctionCall","src":"6684:27:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6727:12:18"},{"name":"i","nodeType":"YulIdentifier","src":"6741:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6723:3:18"},"nodeType":"YulFunctionCall","src":"6723:20:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6745:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6719:3:18"},"nodeType":"YulFunctionCall","src":"6719:29:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6713:5:18"},"nodeType":"YulFunctionCall","src":"6713:36:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6677:6:18"},"nodeType":"YulFunctionCall","src":"6677:73:18"},"nodeType":"YulExpressionStatement","src":"6677:73:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6624:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"6627:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6621:2:18"},"nodeType":"YulFunctionCall","src":"6621:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6635:19:18","statements":[{"nodeType":"YulAssignment","src":"6637:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6646:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6649:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:18"},"nodeType":"YulFunctionCall","src":"6642:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6637:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"6617:3:18","statements":[]},"src":"6613:147:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6784:9:18"},{"name":"length","nodeType":"YulIdentifier","src":"6795:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6780:3:18"},"nodeType":"YulFunctionCall","src":"6780:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"6804:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6776:3:18"},"nodeType":"YulFunctionCall","src":"6776:32:18"},{"kind":"number","nodeType":"YulLiteral","src":"6810:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6769:6:18"},"nodeType":"YulFunctionCall","src":"6769:43:18"},"nodeType":"YulExpressionStatement","src":"6769:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6832:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6843:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6828:3:18"},"nodeType":"YulFunctionCall","src":"6828:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6874:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"6882:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6870:3:18"},"nodeType":"YulFunctionCall","src":"6870:15:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6864:5:18"},"nodeType":"YulFunctionCall","src":"6864:22:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6857:6:18"},"nodeType":"YulFunctionCall","src":"6857:30:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6850:6:18"},"nodeType":"YulFunctionCall","src":"6850:38:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6821:6:18"},"nodeType":"YulFunctionCall","src":"6821:68:18"},"nodeType":"YulExpressionStatement","src":"6821:68:18"},{"nodeType":"YulAssignment","src":"6898:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6914:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6933:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6941:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6929:3:18"},"nodeType":"YulFunctionCall","src":"6929:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6950:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6946:3:18"},"nodeType":"YulFunctionCall","src":"6946:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6925:3:18"},"nodeType":"YulFunctionCall","src":"6925:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6910:3:18"},"nodeType":"YulFunctionCall","src":"6910:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"6957:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:18"},"nodeType":"YulFunctionCall","src":"6906:55:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6898:4:18"}]}]},"name":"abi_encode_tuple_t_struct$_MockPolicyData_$7184_memory_ptr__to_t_struct$_MockPolicyData_$7184_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6334:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6345:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6356:4:18","type":""}],"src":"6200:767:18"},{"body":{"nodeType":"YulBlock","src":"7067:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"7113:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7122:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7125:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7115:6:18"},"nodeType":"YulFunctionCall","src":"7115:12:18"},"nodeType":"YulExpressionStatement","src":"7115:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7088:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7097:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7084:3:18"},"nodeType":"YulFunctionCall","src":"7084:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"7109:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7080:3:18"},"nodeType":"YulFunctionCall","src":"7080:32:18"},"nodeType":"YulIf","src":"7077:52:18"},{"nodeType":"YulVariableDeclaration","src":"7138:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7164:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7151:12:18"},"nodeType":"YulFunctionCall","src":"7151:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7142:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7208:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7183:24:18"},"nodeType":"YulFunctionCall","src":"7183:31:18"},"nodeType":"YulExpressionStatement","src":"7183:31:18"},{"nodeType":"YulAssignment","src":"7223:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"7233:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7223:6:18"}]},{"nodeType":"YulAssignment","src":"7247:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7274:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7285:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7270:3:18"},"nodeType":"YulFunctionCall","src":"7270:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7257:12:18"},"nodeType":"YulFunctionCall","src":"7257:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7247:6:18"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7025:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7036:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7048:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7056:6:18","type":""}],"src":"6972:323:18"},{"body":{"nodeType":"YulBlock","src":"7449:583:18","statements":[{"nodeType":"YulAssignment","src":"7459:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7471:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7482:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7467:3:18"},"nodeType":"YulFunctionCall","src":"7467:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7459:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7502:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7519:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7513:5:18"},"nodeType":"YulFunctionCall","src":"7513:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7495:6:18"},"nodeType":"YulFunctionCall","src":"7495:32:18"},"nodeType":"YulExpressionStatement","src":"7495:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7547:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7558:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:18"},"nodeType":"YulFunctionCall","src":"7543:20:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7579:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7587:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7575:3:18"},"nodeType":"YulFunctionCall","src":"7575:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7569:5:18"},"nodeType":"YulFunctionCall","src":"7569:24:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7603:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7608:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7599:3:18"},"nodeType":"YulFunctionCall","src":"7599:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"7612:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7595:3:18"},"nodeType":"YulFunctionCall","src":"7595:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7565:3:18"},"nodeType":"YulFunctionCall","src":"7565:50:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:18"},"nodeType":"YulFunctionCall","src":"7536:80:18"},"nodeType":"YulExpressionStatement","src":"7536:80:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7636:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7647:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7632:3:18"},"nodeType":"YulFunctionCall","src":"7632:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7664:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7672:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7660:3:18"},"nodeType":"YulFunctionCall","src":"7660:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7654:5:18"},"nodeType":"YulFunctionCall","src":"7654:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:18"},"nodeType":"YulFunctionCall","src":"7625:54:18"},"nodeType":"YulExpressionStatement","src":"7625:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7699:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7710:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7695:3:18"},"nodeType":"YulFunctionCall","src":"7695:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7727:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7735:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7723:3:18"},"nodeType":"YulFunctionCall","src":"7723:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7717:5:18"},"nodeType":"YulFunctionCall","src":"7717:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7688:6:18"},"nodeType":"YulFunctionCall","src":"7688:54:18"},"nodeType":"YulExpressionStatement","src":"7688:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7762:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7773:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7758:3:18"},"nodeType":"YulFunctionCall","src":"7758:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7790:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7798:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:18"},"nodeType":"YulFunctionCall","src":"7786:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7780:5:18"},"nodeType":"YulFunctionCall","src":"7780:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7751:6:18"},"nodeType":"YulFunctionCall","src":"7751:54:18"},"nodeType":"YulExpressionStatement","src":"7751:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7825:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7836:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7821:3:18"},"nodeType":"YulFunctionCall","src":"7821:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7867:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7875:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7863:3:18"},"nodeType":"YulFunctionCall","src":"7863:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7857:5:18"},"nodeType":"YulFunctionCall","src":"7857:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7850:6:18"},"nodeType":"YulFunctionCall","src":"7850:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7843:6:18"},"nodeType":"YulFunctionCall","src":"7843:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7814:6:18"},"nodeType":"YulFunctionCall","src":"7814:70:18"},"nodeType":"YulExpressionStatement","src":"7814:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7904:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7915:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7900:3:18"},"nodeType":"YulFunctionCall","src":"7900:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7946:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7954:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7942:3:18"},"nodeType":"YulFunctionCall","src":"7942:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7936:5:18"},"nodeType":"YulFunctionCall","src":"7936:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7929:6:18"},"nodeType":"YulFunctionCall","src":"7929:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7922:6:18"},"nodeType":"YulFunctionCall","src":"7922:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7893:6:18"},"nodeType":"YulFunctionCall","src":"7893:70:18"},"nodeType":"YulExpressionStatement","src":"7893:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7983:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7994:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7979:3:18"},"nodeType":"YulFunctionCall","src":"7979:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8011:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8019:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:18"},"nodeType":"YulFunctionCall","src":"8007:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8001:5:18"},"nodeType":"YulFunctionCall","src":"8001:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7972:6:18"},"nodeType":"YulFunctionCall","src":"7972:54:18"},"nodeType":"YulExpressionStatement","src":"7972:54:18"}]},"name":"abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7418:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7429:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7440:4:18","type":""}],"src":"7300:732:18"},{"body":{"nodeType":"YulBlock","src":"8138:215:18","statements":[{"body":{"nodeType":"YulBlock","src":"8184:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8193:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8196:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8186:6:18"},"nodeType":"YulFunctionCall","src":"8186:12:18"},"nodeType":"YulExpressionStatement","src":"8186:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8159:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8168:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8155:3:18"},"nodeType":"YulFunctionCall","src":"8155:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8180:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8151:3:18"},"nodeType":"YulFunctionCall","src":"8151:32:18"},"nodeType":"YulIf","src":"8148:52:18"},{"nodeType":"YulAssignment","src":"8209:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8219:12:18"},"nodeType":"YulFunctionCall","src":"8219:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8209:6:18"}]},{"nodeType":"YulAssignment","src":"8251:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8278:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8289:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8274:3:18"},"nodeType":"YulFunctionCall","src":"8274:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8261:12:18"},"nodeType":"YulFunctionCall","src":"8261:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8251:6:18"}]},{"nodeType":"YulAssignment","src":"8302:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8332:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8343:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8328:3:18"},"nodeType":"YulFunctionCall","src":"8328:18:18"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"8312:15:18"},"nodeType":"YulFunctionCall","src":"8312:35:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8302:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8088:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8099:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8111:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8119:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8127:6:18","type":""}],"src":"8037:316:18"},{"body":{"nodeType":"YulBlock","src":"8505:514:18","statements":[{"body":{"nodeType":"YulBlock","src":"8552:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8561:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8564:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8554:6:18"},"nodeType":"YulFunctionCall","src":"8554:12:18"},"nodeType":"YulExpressionStatement","src":"8554:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8526:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8535:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8522:3:18"},"nodeType":"YulFunctionCall","src":"8522:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8547:3:18","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8518:3:18"},"nodeType":"YulFunctionCall","src":"8518:33:18"},"nodeType":"YulIf","src":"8515:53:18"},{"nodeType":"YulVariableDeclaration","src":"8577:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8603:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8590:12:18"},"nodeType":"YulFunctionCall","src":"8590:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8581:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8647:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8622:24:18"},"nodeType":"YulFunctionCall","src":"8622:31:18"},"nodeType":"YulExpressionStatement","src":"8622:31:18"},{"nodeType":"YulAssignment","src":"8662:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"8672:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8662:6:18"}]},{"nodeType":"YulAssignment","src":"8686:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8713:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8724:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8709:3:18"},"nodeType":"YulFunctionCall","src":"8709:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8696:12:18"},"nodeType":"YulFunctionCall","src":"8696:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8686:6:18"}]},{"nodeType":"YulAssignment","src":"8737:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8764:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8775:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8760:3:18"},"nodeType":"YulFunctionCall","src":"8760:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8747:12:18"},"nodeType":"YulFunctionCall","src":"8747:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8737:6:18"}]},{"nodeType":"YulAssignment","src":"8788:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8815:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8826:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8811:3:18"},"nodeType":"YulFunctionCall","src":"8811:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8798:12:18"},"nodeType":"YulFunctionCall","src":"8798:32:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8788:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"8839:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8870:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8881:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:18"},"nodeType":"YulFunctionCall","src":"8866:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8853:12:18"},"nodeType":"YulFunctionCall","src":"8853:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8843:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8929:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8938:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8941:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8931:6:18"},"nodeType":"YulFunctionCall","src":"8931:12:18"},"nodeType":"YulExpressionStatement","src":"8931:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8901:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8909:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8898:2:18"},"nodeType":"YulFunctionCall","src":"8898:30:18"},"nodeType":"YulIf","src":"8895:50:18"},{"nodeType":"YulAssignment","src":"8954:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8985:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8996:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:18"},"nodeType":"YulFunctionCall","src":"8981:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9005:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"8964:16:18"},"nodeType":"YulFunctionCall","src":"8964:49:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8954:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8439:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8450:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8462:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8470:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8478:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8486:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8494:6:18","type":""}],"src":"8358:661:18"},{"body":{"nodeType":"YulBlock","src":"9185:352:18","statements":[{"nodeType":"YulAssignment","src":"9195:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9207:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9218:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9203:3:18"},"nodeType":"YulFunctionCall","src":"9203:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9195:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9238:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9255:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9249:5:18"},"nodeType":"YulFunctionCall","src":"9249:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9231:6:18"},"nodeType":"YulFunctionCall","src":"9231:32:18"},"nodeType":"YulExpressionStatement","src":"9231:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9283:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9294:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9279:3:18"},"nodeType":"YulFunctionCall","src":"9279:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9311:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9319:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9307:3:18"},"nodeType":"YulFunctionCall","src":"9307:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9301:5:18"},"nodeType":"YulFunctionCall","src":"9301:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9272:6:18"},"nodeType":"YulFunctionCall","src":"9272:54:18"},"nodeType":"YulExpressionStatement","src":"9272:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9346:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9357:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9342:3:18"},"nodeType":"YulFunctionCall","src":"9342:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9388:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9396:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9384:3:18"},"nodeType":"YulFunctionCall","src":"9384:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9378:5:18"},"nodeType":"YulFunctionCall","src":"9378:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9371:6:18"},"nodeType":"YulFunctionCall","src":"9371:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9364:6:18"},"nodeType":"YulFunctionCall","src":"9364:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9335:6:18"},"nodeType":"YulFunctionCall","src":"9335:70:18"},"nodeType":"YulExpressionStatement","src":"9335:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9425:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9436:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9421:3:18"},"nodeType":"YulFunctionCall","src":"9421:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9453:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9461:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9449:3:18"},"nodeType":"YulFunctionCall","src":"9449:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9443:5:18"},"nodeType":"YulFunctionCall","src":"9443:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9414:6:18"},"nodeType":"YulFunctionCall","src":"9414:54:18"},"nodeType":"YulExpressionStatement","src":"9414:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9488:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9499:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9484:3:18"},"nodeType":"YulFunctionCall","src":"9484:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9516:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9524:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9512:3:18"},"nodeType":"YulFunctionCall","src":"9512:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9506:5:18"},"nodeType":"YulFunctionCall","src":"9506:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9477:6:18"},"nodeType":"YulFunctionCall","src":"9477:54:18"},"nodeType":"YulExpressionStatement","src":"9477:54:18"}]},"name":"abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9154:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9165:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9176:4:18","type":""}],"src":"9024:513:18"},{"body":{"nodeType":"YulBlock","src":"9643:102:18","statements":[{"nodeType":"YulAssignment","src":"9653:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9676:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9661:3:18"},"nodeType":"YulFunctionCall","src":"9661:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9653:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9695:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9710:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9726:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9731:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9722:3:18"},"nodeType":"YulFunctionCall","src":"9722:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"9735:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9718:3:18"},"nodeType":"YulFunctionCall","src":"9718:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9706:3:18"},"nodeType":"YulFunctionCall","src":"9706:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9688:6:18"},"nodeType":"YulFunctionCall","src":"9688:51:18"},"nodeType":"YulExpressionStatement","src":"9688:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9612:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9623:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9634:4:18","type":""}],"src":"9542:203:18"},{"body":{"nodeType":"YulBlock","src":"9882:102:18","statements":[{"nodeType":"YulAssignment","src":"9892:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9904:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9915:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9900:3:18"},"nodeType":"YulFunctionCall","src":"9900:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9892:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9934:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9949:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9965:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9970:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9961:3:18"},"nodeType":"YulFunctionCall","src":"9961:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"9974:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9957:3:18"},"nodeType":"YulFunctionCall","src":"9957:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9945:3:18"},"nodeType":"YulFunctionCall","src":"9945:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9927:6:18"},"nodeType":"YulFunctionCall","src":"9927:51:18"},"nodeType":"YulExpressionStatement","src":"9927:51:18"}]},"name":"abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9851:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9862:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9873:4:18","type":""}],"src":"9750:234:18"},{"body":{"nodeType":"YulBlock","src":"10163:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10180:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10191:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10173:6:18"},"nodeType":"YulFunctionCall","src":"10173:21:18"},"nodeType":"YulExpressionStatement","src":"10173:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10214:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10225:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10210:3:18"},"nodeType":"YulFunctionCall","src":"10210:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"10230:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10203:6:18"},"nodeType":"YulFunctionCall","src":"10203:30:18"},"nodeType":"YulExpressionStatement","src":"10203:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10253:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10264:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10249:3:18"},"nodeType":"YulFunctionCall","src":"10249:18:18"},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"10269:23:18","type":"","value":"Policy does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10242:6:18"},"nodeType":"YulFunctionCall","src":"10242:51:18"},"nodeType":"YulExpressionStatement","src":"10242:51:18"},{"nodeType":"YulAssignment","src":"10302:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10314:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10325:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10310:3:18"},"nodeType":"YulFunctionCall","src":"10310:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10302:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10140:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10154:4:18","type":""}],"src":"9989:345:18"},{"body":{"nodeType":"YulBlock","src":"10513:173:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10530:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10541:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10523:6:18"},"nodeType":"YulFunctionCall","src":"10523:21:18"},"nodeType":"YulExpressionStatement","src":"10523:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10564:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10575:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10560:3:18"},"nodeType":"YulFunctionCall","src":"10560:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"10580:2:18","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10553:6:18"},"nodeType":"YulFunctionCall","src":"10553:30:18"},"nodeType":"YulExpressionStatement","src":"10553:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10603:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10614:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10599:3:18"},"nodeType":"YulFunctionCall","src":"10599:18:18"},{"hexValue":"506572696f64206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"10619:25:18","type":"","value":"Period must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10592:6:18"},"nodeType":"YulFunctionCall","src":"10592:53:18"},"nodeType":"YulExpressionStatement","src":"10592:53:18"},{"nodeType":"YulAssignment","src":"10654:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10677:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:18"},"nodeType":"YulFunctionCall","src":"10662:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10654:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10490:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10504:4:18","type":""}],"src":"10339:347:18"},{"body":{"nodeType":"YulBlock","src":"10723:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10740:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10747:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10752:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10743:3:18"},"nodeType":"YulFunctionCall","src":"10743:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10733:6:18"},"nodeType":"YulFunctionCall","src":"10733:31:18"},"nodeType":"YulExpressionStatement","src":"10733:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10780:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10783:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10773:6:18"},"nodeType":"YulFunctionCall","src":"10773:15:18"},"nodeType":"YulExpressionStatement","src":"10773:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10804:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10807:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10797:6:18"},"nodeType":"YulFunctionCall","src":"10797:15:18"},"nodeType":"YulExpressionStatement","src":"10797:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10691:127:18"},{"body":{"nodeType":"YulBlock","src":"10875:116:18","statements":[{"nodeType":"YulAssignment","src":"10885:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10900:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"10903:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10896:3:18"},"nodeType":"YulFunctionCall","src":"10896:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"10885:7:18"}]},{"body":{"nodeType":"YulBlock","src":"10963:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10965:16:18"},"nodeType":"YulFunctionCall","src":"10965:18:18"},"nodeType":"YulExpressionStatement","src":"10965:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10934:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10927:6:18"},"nodeType":"YulFunctionCall","src":"10927:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"10941:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"10948:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"10957:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10944:3:18"},"nodeType":"YulFunctionCall","src":"10944:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10938:2:18"},"nodeType":"YulFunctionCall","src":"10938:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10924:2:18"},"nodeType":"YulFunctionCall","src":"10924:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10917:6:18"},"nodeType":"YulFunctionCall","src":"10917:45:18"},"nodeType":"YulIf","src":"10914:71:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10854:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"10857:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"10863:7:18","type":""}],"src":"10823:168:18"},{"body":{"nodeType":"YulBlock","src":"11125:119:18","statements":[{"nodeType":"YulAssignment","src":"11135:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11147:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11158:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11143:3:18"},"nodeType":"YulFunctionCall","src":"11143:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11135:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11177:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"11188:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11170:6:18"},"nodeType":"YulFunctionCall","src":"11170:25:18"},"nodeType":"YulExpressionStatement","src":"11170:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11215:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11226:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11211:3:18"},"nodeType":"YulFunctionCall","src":"11211:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"11231:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11204:6:18"},"nodeType":"YulFunctionCall","src":"11204:34:18"},"nodeType":"YulExpressionStatement","src":"11204:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11086:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11097:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11105:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11116:4:18","type":""}],"src":"10996:248:18"},{"body":{"nodeType":"YulBlock","src":"11423:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11440:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11433:6:18"},"nodeType":"YulFunctionCall","src":"11433:21:18"},"nodeType":"YulExpressionStatement","src":"11433:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11474:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11485:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11470:3:18"},"nodeType":"YulFunctionCall","src":"11470:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11490:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11463:6:18"},"nodeType":"YulFunctionCall","src":"11463:30:18"},"nodeType":"YulExpressionStatement","src":"11463:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11513:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11524:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11509:3:18"},"nodeType":"YulFunctionCall","src":"11509:18:18"},{"hexValue":"506f6c696379206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"11529:19:18","type":"","value":"Policy not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11502:6:18"},"nodeType":"YulFunctionCall","src":"11502:47:18"},"nodeType":"YulExpressionStatement","src":"11502:47:18"},{"nodeType":"YulAssignment","src":"11558:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11570:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11581:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11566:3:18"},"nodeType":"YulFunctionCall","src":"11566:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11558:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11400:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11414:4:18","type":""}],"src":"11249:341:18"},{"body":{"nodeType":"YulBlock","src":"11769:166:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11786:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11797:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11779:6:18"},"nodeType":"YulFunctionCall","src":"11779:21:18"},"nodeType":"YulExpressionStatement","src":"11779:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11820:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11831:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:18"},"nodeType":"YulFunctionCall","src":"11816:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11836:2:18","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11809:6:18"},"nodeType":"YulFunctionCall","src":"11809:30:18"},"nodeType":"YulExpressionStatement","src":"11809:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11859:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11870:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11855:3:18"},"nodeType":"YulFunctionCall","src":"11855:18:18"},{"hexValue":"4e6f2070656e64696e6720636c61696d","kind":"string","nodeType":"YulLiteral","src":"11875:18:18","type":"","value":"No pending claim"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11848:6:18"},"nodeType":"YulFunctionCall","src":"11848:46:18"},"nodeType":"YulExpressionStatement","src":"11848:46:18"},{"nodeType":"YulAssignment","src":"11903:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11915:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11926:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11911:3:18"},"nodeType":"YulFunctionCall","src":"11911:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11903:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11746:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11760:4:18","type":""}],"src":"11595:340:18"},{"body":{"nodeType":"YulBlock","src":"12085:145:18","statements":[{"nodeType":"YulAssignment","src":"12095:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12107:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12118:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12103:3:18"},"nodeType":"YulFunctionCall","src":"12103:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12095:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12137:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12152:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12168:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12173:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12164:3:18"},"nodeType":"YulFunctionCall","src":"12164:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"12177:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12160:3:18"},"nodeType":"YulFunctionCall","src":"12160:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12148:3:18"},"nodeType":"YulFunctionCall","src":"12148:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12130:6:18"},"nodeType":"YulFunctionCall","src":"12130:51:18"},"nodeType":"YulExpressionStatement","src":"12130:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12201:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12212:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12197:3:18"},"nodeType":"YulFunctionCall","src":"12197:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"12217:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12190:6:18"},"nodeType":"YulFunctionCall","src":"12190:34:18"},"nodeType":"YulExpressionStatement","src":"12190:34:18"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12046:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12057:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12065:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12076:4:18","type":""}],"src":"11940:290:18"},{"body":{"nodeType":"YulBlock","src":"12344:76:18","statements":[{"nodeType":"YulAssignment","src":"12354:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12366:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:18"},"nodeType":"YulFunctionCall","src":"12362:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12354:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12396:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"12407:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12389:6:18"},"nodeType":"YulFunctionCall","src":"12389:25:18"},"nodeType":"YulExpressionStatement","src":"12389:25:18"}]},"name":"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12313:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12324:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12335:4:18","type":""}],"src":"12235:185:18"},{"body":{"nodeType":"YulBlock","src":"12599:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12616:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12627:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12609:6:18"},"nodeType":"YulFunctionCall","src":"12609:21:18"},"nodeType":"YulExpressionStatement","src":"12609:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12650:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12661:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12646:3:18"},"nodeType":"YulFunctionCall","src":"12646:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"12666:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12639:6:18"},"nodeType":"YulFunctionCall","src":"12639:30:18"},"nodeType":"YulExpressionStatement","src":"12639:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12689:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12700:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12685:3:18"},"nodeType":"YulFunctionCall","src":"12685:18:18"},{"hexValue":"436c61696d20657863656564732073756d2061737375726564","kind":"string","nodeType":"YulLiteral","src":"12705:27:18","type":"","value":"Claim exceeds sum assured"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12678:6:18"},"nodeType":"YulFunctionCall","src":"12678:55:18"},"nodeType":"YulExpressionStatement","src":"12678:55:18"},{"nodeType":"YulAssignment","src":"12742:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12754:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12765:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12750:3:18"},"nodeType":"YulFunctionCall","src":"12750:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12742:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12576:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12590:4:18","type":""}],"src":"12425:349:18"},{"body":{"nodeType":"YulBlock","src":"12953:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12970:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12981:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12963:6:18"},"nodeType":"YulFunctionCall","src":"12963:21:18"},"nodeType":"YulExpressionStatement","src":"12963:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13004:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13015:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13000:3:18"},"nodeType":"YulFunctionCall","src":"13000:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13020:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12993:6:18"},"nodeType":"YulFunctionCall","src":"12993:30:18"},"nodeType":"YulExpressionStatement","src":"12993:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13043:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13054:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13039:3:18"},"nodeType":"YulFunctionCall","src":"13039:18:18"},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"13059:24:18","type":"","value":"Policy already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13032:6:18"},"nodeType":"YulFunctionCall","src":"13032:52:18"},"nodeType":"YulExpressionStatement","src":"13032:52:18"},{"nodeType":"YulAssignment","src":"13093:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13105:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13116:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13101:3:18"},"nodeType":"YulFunctionCall","src":"13101:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13093:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12930:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12944:4:18","type":""}],"src":"12779:346:18"},{"body":{"nodeType":"YulBlock","src":"13304:164:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13321:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13332:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13314:6:18"},"nodeType":"YulFunctionCall","src":"13314:21:18"},"nodeType":"YulExpressionStatement","src":"13314:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13355:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13366:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13351:3:18"},"nodeType":"YulFunctionCall","src":"13351:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13371:2:18","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13344:6:18"},"nodeType":"YulFunctionCall","src":"13344:30:18"},"nodeType":"YulExpressionStatement","src":"13344:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13394:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13405:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13390:3:18"},"nodeType":"YulFunctionCall","src":"13390:18:18"},{"hexValue":"506f6c6963792065787069726564","kind":"string","nodeType":"YulLiteral","src":"13410:16:18","type":"","value":"Policy expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13383:6:18"},"nodeType":"YulFunctionCall","src":"13383:44:18"},"nodeType":"YulExpressionStatement","src":"13383:44:18"},{"nodeType":"YulAssignment","src":"13436:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13448:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13459:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13444:3:18"},"nodeType":"YulFunctionCall","src":"13444:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13436:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13281:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13295:4:18","type":""}],"src":"13130:338:18"},{"body":{"nodeType":"YulBlock","src":"13521:77:18","statements":[{"nodeType":"YulAssignment","src":"13531:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13542:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"13545:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13538:3:18"},"nodeType":"YulFunctionCall","src":"13538:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13531:3:18"}]},{"body":{"nodeType":"YulBlock","src":"13570:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13572:16:18"},"nodeType":"YulFunctionCall","src":"13572:18:18"},"nodeType":"YulExpressionStatement","src":"13572:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13562:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"13565:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13559:2:18"},"nodeType":"YulFunctionCall","src":"13559:10:18"},"nodeType":"YulIf","src":"13556:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13504:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"13507:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13513:3:18","type":""}],"src":"13473:125:18"},{"body":{"nodeType":"YulBlock","src":"13777:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13794:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13805:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13787:6:18"},"nodeType":"YulFunctionCall","src":"13787:21:18"},"nodeType":"YulExpressionStatement","src":"13787:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13828:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13839:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13824:3:18"},"nodeType":"YulFunctionCall","src":"13824:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13844:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13817:6:18"},"nodeType":"YulFunctionCall","src":"13817:30:18"},"nodeType":"YulExpressionStatement","src":"13817:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13867:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13878:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13863:3:18"},"nodeType":"YulFunctionCall","src":"13863:18:18"},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13883:22:18","type":"","value":"Not the policy owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13856:6:18"},"nodeType":"YulFunctionCall","src":"13856:50:18"},"nodeType":"YulExpressionStatement","src":"13856:50:18"},{"nodeType":"YulAssignment","src":"13915:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13927:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13938:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13923:3:18"},"nodeType":"YulFunctionCall","src":"13923:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13915:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13754:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13768:4:18","type":""}],"src":"13603:344:18"},{"body":{"nodeType":"YulBlock","src":"14126:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14143:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14154:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14136:6:18"},"nodeType":"YulFunctionCall","src":"14136:21:18"},"nodeType":"YulExpressionStatement","src":"14136:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14177:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14188:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14173:3:18"},"nodeType":"YulFunctionCall","src":"14173:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14193:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14166:6:18"},"nodeType":"YulFunctionCall","src":"14166:30:18"},"nodeType":"YulExpressionStatement","src":"14166:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14216:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14227:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14212:3:18"},"nodeType":"YulFunctionCall","src":"14212:18:18"},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"14232:26:18","type":"","value":"Incorrect premium amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14205:6:18"},"nodeType":"YulFunctionCall","src":"14205:54:18"},"nodeType":"YulExpressionStatement","src":"14205:54:18"},{"nodeType":"YulAssignment","src":"14268:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14280:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14291:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14276:3:18"},"nodeType":"YulFunctionCall","src":"14276:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14268:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14103:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14117:4:18","type":""}],"src":"13952:348:18"},{"body":{"nodeType":"YulBlock","src":"14479:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14496:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14507:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14489:6:18"},"nodeType":"YulFunctionCall","src":"14489:21:18"},"nodeType":"YulExpressionStatement","src":"14489:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14530:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14541:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14526:3:18"},"nodeType":"YulFunctionCall","src":"14526:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14546:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14519:6:18"},"nodeType":"YulFunctionCall","src":"14519:30:18"},"nodeType":"YulExpressionStatement","src":"14519:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14569:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14580:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14565:3:18"},"nodeType":"YulFunctionCall","src":"14565:18:18"},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"14585:34:18","type":"","value":"Premium transfer to vault failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14558:6:18"},"nodeType":"YulFunctionCall","src":"14558:62:18"},"nodeType":"YulExpressionStatement","src":"14558:62:18"},{"nodeType":"YulAssignment","src":"14629:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14641:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14652:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14637:3:18"},"nodeType":"YulFunctionCall","src":"14637:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14629:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14456:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14470:4:18","type":""}],"src":"14305:356:18"},{"body":{"nodeType":"YulBlock","src":"14840:181:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14857:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14868:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14850:6:18"},"nodeType":"YulFunctionCall","src":"14850:21:18"},"nodeType":"YulExpressionStatement","src":"14850:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14891:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14902:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14887:3:18"},"nodeType":"YulFunctionCall","src":"14887:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14907:2:18","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14880:6:18"},"nodeType":"YulFunctionCall","src":"14880:30:18"},"nodeType":"YulExpressionStatement","src":"14880:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14930:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14941:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14926:3:18"},"nodeType":"YulFunctionCall","src":"14926:18:18"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"14946:33:18","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14919:6:18"},"nodeType":"YulFunctionCall","src":"14919:61:18"},"nodeType":"YulExpressionStatement","src":"14919:61:18"},{"nodeType":"YulAssignment","src":"14989:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15001:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15012:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14997:3:18"},"nodeType":"YulFunctionCall","src":"14997:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14817:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14831:4:18","type":""}],"src":"14666:355:18"},{"body":{"nodeType":"YulBlock","src":"15201:137:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15218:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"15223:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15211:6:18"},"nodeType":"YulFunctionCall","src":"15211:19:18"},"nodeType":"YulExpressionStatement","src":"15211:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15250:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15255:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15246:3:18"},"nodeType":"YulFunctionCall","src":"15246:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"15260:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15239:6:18"},"nodeType":"YulFunctionCall","src":"15239:28:18"},"nodeType":"YulExpressionStatement","src":"15239:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15287:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15292:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15283:3:18"},"nodeType":"YulFunctionCall","src":"15283:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"15297:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15276:6:18"},"nodeType":"YulFunctionCall","src":"15276:28:18"},"nodeType":"YulExpressionStatement","src":"15276:28:18"},{"nodeType":"YulAssignment","src":"15313:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15324:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15329:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15320:3:18"},"nodeType":"YulFunctionCall","src":"15320:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15313:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15161:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15166:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15174:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15182:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15193:3:18","type":""}],"src":"15026:312:18"},{"body":{"nodeType":"YulBlock","src":"15517:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15534:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15545:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15527:6:18"},"nodeType":"YulFunctionCall","src":"15527:21:18"},"nodeType":"YulExpressionStatement","src":"15527:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15568:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15579:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15564:3:18"},"nodeType":"YulFunctionCall","src":"15564:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15584:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15557:6:18"},"nodeType":"YulFunctionCall","src":"15557:30:18"},"nodeType":"YulExpressionStatement","src":"15557:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15607:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15618:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15603:3:18"},"nodeType":"YulFunctionCall","src":"15603:18:18"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"15623:19:18","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15596:6:18"},"nodeType":"YulFunctionCall","src":"15596:47:18"},"nodeType":"YulExpressionStatement","src":"15596:47:18"},{"nodeType":"YulAssignment","src":"15652:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15664:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15675:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15660:3:18"},"nodeType":"YulFunctionCall","src":"15660:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15652:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15494:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15508:4:18","type":""}],"src":"15343:341:18"},{"body":{"nodeType":"YulBlock","src":"15863:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15880:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15891:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15873:6:18"},"nodeType":"YulFunctionCall","src":"15873:21:18"},"nodeType":"YulExpressionStatement","src":"15873:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15914:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15925:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15910:3:18"},"nodeType":"YulFunctionCall","src":"15910:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15930:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15903:6:18"},"nodeType":"YulFunctionCall","src":"15903:30:18"},"nodeType":"YulExpressionStatement","src":"15903:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15953:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15964:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15949:3:18"},"nodeType":"YulFunctionCall","src":"15949:18:18"},{"hexValue":"436c61696d20726571756573742065787069726564","kind":"string","nodeType":"YulLiteral","src":"15969:23:18","type":"","value":"Claim request expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15942:6:18"},"nodeType":"YulFunctionCall","src":"15942:51:18"},"nodeType":"YulExpressionStatement","src":"15942:51:18"},{"nodeType":"YulAssignment","src":"16002:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16014:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16025:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16010:3:18"},"nodeType":"YulFunctionCall","src":"16010:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16002:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15840:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15854:4:18","type":""}],"src":"15689:345:18"},{"body":{"nodeType":"YulBlock","src":"16242:175:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16259:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"16264:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16252:6:18"},"nodeType":"YulFunctionCall","src":"16252:19:18"},"nodeType":"YulExpressionStatement","src":"16252:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16291:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16296:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16287:3:18"},"nodeType":"YulFunctionCall","src":"16287:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"16301:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16280:6:18"},"nodeType":"YulFunctionCall","src":"16280:28:18"},"nodeType":"YulExpressionStatement","src":"16280:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16328:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16333:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16324:3:18"},"nodeType":"YulFunctionCall","src":"16324:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"16338:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16317:6:18"},"nodeType":"YulFunctionCall","src":"16317:28:18"},"nodeType":"YulExpressionStatement","src":"16317:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16365:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16370:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16361:3:18"},"nodeType":"YulFunctionCall","src":"16361:12:18"},{"name":"value3","nodeType":"YulIdentifier","src":"16375:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16354:6:18"},"nodeType":"YulFunctionCall","src":"16354:28:18"},"nodeType":"YulExpressionStatement","src":"16354:28:18"},{"nodeType":"YulAssignment","src":"16391:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16402:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16407:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16398:3:18"},"nodeType":"YulFunctionCall","src":"16398:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16391:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16194:3:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16199:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16207:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16215:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16223:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16234:3:18","type":""}],"src":"16039:378:18"},{"body":{"nodeType":"YulBlock","src":"16596:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16624:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16606:6:18"},"nodeType":"YulFunctionCall","src":"16606:21:18"},"nodeType":"YulExpressionStatement","src":"16606:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16647:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16658:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16643:3:18"},"nodeType":"YulFunctionCall","src":"16643:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16663:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16636:6:18"},"nodeType":"YulFunctionCall","src":"16636:30:18"},"nodeType":"YulExpressionStatement","src":"16636:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16686:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16697:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16682:3:18"},"nodeType":"YulFunctionCall","src":"16682:18:18"},{"hexValue":"496e76616c6964206f776e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"16702:23:18","type":"","value":"Invalid owner address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16675:6:18"},"nodeType":"YulFunctionCall","src":"16675:51:18"},"nodeType":"YulExpressionStatement","src":"16675:51:18"},{"nodeType":"YulAssignment","src":"16735:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16747:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16758:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16743:3:18"},"nodeType":"YulFunctionCall","src":"16743:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16735:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16573:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16587:4:18","type":""}],"src":"16422:345:18"},{"body":{"nodeType":"YulBlock","src":"16946:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16963:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16974:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16956:6:18"},"nodeType":"YulFunctionCall","src":"16956:21:18"},"nodeType":"YulExpressionStatement","src":"16956:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16997:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17008:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16993:3:18"},"nodeType":"YulFunctionCall","src":"16993:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17013:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16986:6:18"},"nodeType":"YulFunctionCall","src":"16986:30:18"},"nodeType":"YulExpressionStatement","src":"16986:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17036:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17047:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17032:3:18"},"nodeType":"YulFunctionCall","src":"17032:18:18"},{"hexValue":"5072656d69756d206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"17052:26:18","type":"","value":"Premium must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17025:6:18"},"nodeType":"YulFunctionCall","src":"17025:54:18"},"nodeType":"YulExpressionStatement","src":"17025:54:18"},{"nodeType":"YulAssignment","src":"17088:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17100:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17111:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17096:3:18"},"nodeType":"YulFunctionCall","src":"17096:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17088:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16923:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16937:4:18","type":""}],"src":"16772:348:18"},{"body":{"nodeType":"YulBlock","src":"17299:178:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17316:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17327:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17309:6:18"},"nodeType":"YulFunctionCall","src":"17309:21:18"},"nodeType":"YulExpressionStatement","src":"17309:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17350:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17361:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17346:3:18"},"nodeType":"YulFunctionCall","src":"17346:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17366:2:18","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17339:6:18"},"nodeType":"YulFunctionCall","src":"17339:30:18"},"nodeType":"YulExpressionStatement","src":"17339:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17389:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17400:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17385:3:18"},"nodeType":"YulFunctionCall","src":"17385:18:18"},{"hexValue":"53756d2061737375726564206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"17405:30:18","type":"","value":"Sum assured must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17378:6:18"},"nodeType":"YulFunctionCall","src":"17378:58:18"},"nodeType":"YulExpressionStatement","src":"17378:58:18"},{"nodeType":"YulAssignment","src":"17445:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17457:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17468:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17453:3:18"},"nodeType":"YulFunctionCall","src":"17453:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17445:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17276:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17290:4:18","type":""}],"src":"17125:352:18"},{"body":{"nodeType":"YulBlock","src":"17656:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17673:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17684:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17666:6:18"},"nodeType":"YulFunctionCall","src":"17666:21:18"},"nodeType":"YulExpressionStatement","src":"17666:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17707:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17718:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17703:3:18"},"nodeType":"YulFunctionCall","src":"17703:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17723:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17696:6:18"},"nodeType":"YulFunctionCall","src":"17696:30:18"},"nodeType":"YulExpressionStatement","src":"17696:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17746:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17757:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17742:3:18"},"nodeType":"YulFunctionCall","src":"17742:18:18"},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"17762:27:18","type":"","value":"Duration must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17735:6:18"},"nodeType":"YulFunctionCall","src":"17735:55:18"},"nodeType":"YulExpressionStatement","src":"17735:55:18"},{"nodeType":"YulAssignment","src":"17799:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17811:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17822:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17807:3:18"},"nodeType":"YulFunctionCall","src":"17807:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17799:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17633:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17647:4:18","type":""}],"src":"17482:349:18"},{"body":{"nodeType":"YulBlock","src":"18010:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18027:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18038:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18020:6:18"},"nodeType":"YulFunctionCall","src":"18020:21:18"},"nodeType":"YulExpressionStatement","src":"18020:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18061:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18072:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18057:3:18"},"nodeType":"YulFunctionCall","src":"18057:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18077:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:18"},"nodeType":"YulFunctionCall","src":"18050:30:18"},"nodeType":"YulExpressionStatement","src":"18050:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18100:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18111:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18096:3:18"},"nodeType":"YulFunctionCall","src":"18096:18:18"},{"hexValue":"506f6c69637920616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"18116:23:18","type":"","value":"Policy already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18089:6:18"},"nodeType":"YulFunctionCall","src":"18089:51:18"},"nodeType":"YulExpressionStatement","src":"18089:51:18"},{"nodeType":"YulAssignment","src":"18149:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18161:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18172:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18157:3:18"},"nodeType":"YulFunctionCall","src":"18157:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18149:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17987:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18001:4:18","type":""}],"src":"17836:345:18"},{"body":{"nodeType":"YulBlock","src":"18343:162:18","statements":[{"nodeType":"YulAssignment","src":"18353:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18365:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18376:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18361:3:18"},"nodeType":"YulFunctionCall","src":"18361:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18353:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18395:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"18406:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18388:6:18"},"nodeType":"YulFunctionCall","src":"18388:25:18"},"nodeType":"YulExpressionStatement","src":"18388:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18433:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18444:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18429:3:18"},"nodeType":"YulFunctionCall","src":"18429:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"18449:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18422:6:18"},"nodeType":"YulFunctionCall","src":"18422:34:18"},"nodeType":"YulExpressionStatement","src":"18422:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18476:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18487:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18472:3:18"},"nodeType":"YulFunctionCall","src":"18472:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"18492:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18465:6:18"},"nodeType":"YulFunctionCall","src":"18465:34:18"},"nodeType":"YulExpressionStatement","src":"18465:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18296:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18307:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18315:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18323:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18334:4:18","type":""}],"src":"18186:319:18"},{"body":{"nodeType":"YulBlock","src":"18684:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18701:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18712:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18694:6:18"},"nodeType":"YulFunctionCall","src":"18694:21:18"},"nodeType":"YulExpressionStatement","src":"18694:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18735:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18746:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18731:3:18"},"nodeType":"YulFunctionCall","src":"18731:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18751:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18724:6:18"},"nodeType":"YulFunctionCall","src":"18724:30:18"},"nodeType":"YulExpressionStatement","src":"18724:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18774:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18785:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18770:3:18"},"nodeType":"YulFunctionCall","src":"18770:18:18"},{"hexValue":"496e76616c6964207369676e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"18790:24:18","type":"","value":"Invalid signer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18763:6:18"},"nodeType":"YulFunctionCall","src":"18763:52:18"},"nodeType":"YulExpressionStatement","src":"18763:52:18"},{"nodeType":"YulAssignment","src":"18824:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18836:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18847:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18832:3:18"},"nodeType":"YulFunctionCall","src":"18832:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18824:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18661:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18675:4:18","type":""}],"src":"18510:346:18"},{"body":{"nodeType":"YulBlock","src":"18910:79:18","statements":[{"nodeType":"YulAssignment","src":"18920:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18932:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"18935:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18928:3:18"},"nodeType":"YulFunctionCall","src":"18928:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18920:4:18"}]},{"body":{"nodeType":"YulBlock","src":"18961:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18963:16:18"},"nodeType":"YulFunctionCall","src":"18963:18:18"},"nodeType":"YulExpressionStatement","src":"18963:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"18952:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"18958:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18949:2:18"},"nodeType":"YulFunctionCall","src":"18949:11:18"},"nodeType":"YulIf","src":"18946:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18892:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"18895:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18901:4:18","type":""}],"src":"18861:128:18"},{"body":{"nodeType":"YulBlock","src":"19168:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19185:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19196:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19178:6:18"},"nodeType":"YulFunctionCall","src":"19178:21:18"},"nodeType":"YulExpressionStatement","src":"19178:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19219:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19230:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19215:3:18"},"nodeType":"YulFunctionCall","src":"19215:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"19235:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19208:6:18"},"nodeType":"YulFunctionCall","src":"19208:30:18"},"nodeType":"YulExpressionStatement","src":"19208:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19258:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19269:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19254:3:18"},"nodeType":"YulFunctionCall","src":"19254:18:18"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nodeType":"YulLiteral","src":"19274:23:18","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19247:6:18"},"nodeType":"YulFunctionCall","src":"19247:51:18"},"nodeType":"YulExpressionStatement","src":"19247:51:18"},{"nodeType":"YulAssignment","src":"19307:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19319:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19330:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19315:3:18"},"nodeType":"YulFunctionCall","src":"19315:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19307:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19145:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19159:4:18","type":""}],"src":"18994:345:18"},{"body":{"nodeType":"YulBlock","src":"19399:325:18","statements":[{"nodeType":"YulAssignment","src":"19409:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19423:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"19426:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19419:3:18"},"nodeType":"YulFunctionCall","src":"19419:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19409:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"19440:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19470:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"19476:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19466:3:18"},"nodeType":"YulFunctionCall","src":"19466:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"19444:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"19517:31:18","statements":[{"nodeType":"YulAssignment","src":"19519:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19533:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19541:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19529:3:18"},"nodeType":"YulFunctionCall","src":"19529:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19519:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19497:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19490:6:18"},"nodeType":"YulFunctionCall","src":"19490:26:18"},"nodeType":"YulIf","src":"19487:61:18"},{"body":{"nodeType":"YulBlock","src":"19607:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19628:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19635:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19640:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19631:3:18"},"nodeType":"YulFunctionCall","src":"19631:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19621:6:18"},"nodeType":"YulFunctionCall","src":"19621:31:18"},"nodeType":"YulExpressionStatement","src":"19621:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19672:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19675:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19665:6:18"},"nodeType":"YulFunctionCall","src":"19665:15:18"},"nodeType":"YulExpressionStatement","src":"19665:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19700:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19703:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19693:6:18"},"nodeType":"YulFunctionCall","src":"19693:15:18"},"nodeType":"YulExpressionStatement","src":"19693:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19563:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19586:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19594:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19583:2:18"},"nodeType":"YulFunctionCall","src":"19583:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19560:2:18"},"nodeType":"YulFunctionCall","src":"19560:38:18"},"nodeType":"YulIf","src":"19557:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19379:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19388:6:18","type":""}],"src":"19344:380:18"},{"body":{"nodeType":"YulBlock","src":"19903:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19913:6:18"},"nodeType":"YulFunctionCall","src":"19913:21:18"},"nodeType":"YulExpressionStatement","src":"19913:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19954:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19965:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19950:3:18"},"nodeType":"YulFunctionCall","src":"19950:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"19970:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19943:6:18"},"nodeType":"YulFunctionCall","src":"19943:30:18"},"nodeType":"YulExpressionStatement","src":"19943:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19993:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20004:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19989:3:18"},"nodeType":"YulFunctionCall","src":"19989:18:18"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"20009:22:18","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19982:6:18"},"nodeType":"YulFunctionCall","src":"19982:50:18"},"nodeType":"YulExpressionStatement","src":"19982:50:18"},{"nodeType":"YulAssignment","src":"20041:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20053:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20064:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20049:3:18"},"nodeType":"YulFunctionCall","src":"20049:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20041:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19880:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19894:4:18","type":""}],"src":"19729:344:18"},{"body":{"nodeType":"YulBlock","src":"20252:165:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20269:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20280:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20262:6:18"},"nodeType":"YulFunctionCall","src":"20262:21:18"},"nodeType":"YulExpressionStatement","src":"20262:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20303:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20314:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20299:3:18"},"nodeType":"YulFunctionCall","src":"20299:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20319:2:18","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20292:6:18"},"nodeType":"YulFunctionCall","src":"20292:30:18"},"nodeType":"YulExpressionStatement","src":"20292:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20342:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20353:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20338:3:18"},"nodeType":"YulFunctionCall","src":"20338:18:18"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"20358:17:18","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20331:6:18"},"nodeType":"YulFunctionCall","src":"20331:45:18"},"nodeType":"YulExpressionStatement","src":"20331:45:18"},{"nodeType":"YulAssignment","src":"20385:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20397:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20408:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20393:3:18"},"nodeType":"YulFunctionCall","src":"20393:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20385:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20229:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20243:4:18","type":""}],"src":"20078:339:18"},{"body":{"nodeType":"YulBlock","src":"20596:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20624:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20606:6:18"},"nodeType":"YulFunctionCall","src":"20606:21:18"},"nodeType":"YulExpressionStatement","src":"20606:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20647:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20658:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20643:3:18"},"nodeType":"YulFunctionCall","src":"20643:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"20663:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20636:6:18"},"nodeType":"YulFunctionCall","src":"20636:30:18"},"nodeType":"YulExpressionStatement","src":"20636:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20686:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20697:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20682:3:18"},"nodeType":"YulFunctionCall","src":"20682:18:18"},{"hexValue":"496e76616c69642061646d696e2061646472657373","kind":"string","nodeType":"YulLiteral","src":"20702:23:18","type":"","value":"Invalid admin address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20675:6:18"},"nodeType":"YulFunctionCall","src":"20675:51:18"},"nodeType":"YulExpressionStatement","src":"20675:51:18"},{"nodeType":"YulAssignment","src":"20735:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20747:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20758:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20743:3:18"},"nodeType":"YulFunctionCall","src":"20743:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20735:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20573:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20587:4:18","type":""}],"src":"20422:345:18"},{"body":{"nodeType":"YulBlock","src":"20946:168:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20963:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20974:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20956:6:18"},"nodeType":"YulFunctionCall","src":"20956:21:18"},"nodeType":"YulExpressionStatement","src":"20956:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20997:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21008:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20993:3:18"},"nodeType":"YulFunctionCall","src":"20993:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"21013:2:18","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20986:6:18"},"nodeType":"YulFunctionCall","src":"20986:30:18"},"nodeType":"YulExpressionStatement","src":"20986:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21036:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21047:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21032:3:18"},"nodeType":"YulFunctionCall","src":"21032:18:18"},{"hexValue":"43616e6e6f74207265766f6b652073656c66","kind":"string","nodeType":"YulLiteral","src":"21052:20:18","type":"","value":"Cannot revoke self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21025:6:18"},"nodeType":"YulFunctionCall","src":"21025:48:18"},"nodeType":"YulExpressionStatement","src":"21025:48:18"},{"nodeType":"YulAssignment","src":"21082:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21094:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21105:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21090:3:18"},"nodeType":"YulFunctionCall","src":"21090:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21082:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20923:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20937:4:18","type":""}],"src":"20772:342:18"},{"body":{"nodeType":"YulBlock","src":"21350:260:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21367:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21380:2:18","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"21384:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21376:3:18"},"nodeType":"YulFunctionCall","src":"21376:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21397:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21393:3:18"},"nodeType":"YulFunctionCall","src":"21393:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21372:3:18"},"nodeType":"YulFunctionCall","src":"21372:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21360:6:18"},"nodeType":"YulFunctionCall","src":"21360:66:18"},"nodeType":"YulExpressionStatement","src":"21360:66:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21446:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21451:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21442:3:18"},"nodeType":"YulFunctionCall","src":"21442:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"21456:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21435:6:18"},"nodeType":"YulFunctionCall","src":"21435:28:18"},"nodeType":"YulExpressionStatement","src":"21435:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21483:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21488:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21479:3:18"},"nodeType":"YulFunctionCall","src":"21479:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"21493:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21472:6:18"},"nodeType":"YulFunctionCall","src":"21472:28:18"},"nodeType":"YulExpressionStatement","src":"21472:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21520:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21525:2:18","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21516:3:18"},"nodeType":"YulFunctionCall","src":"21516:12:18"},{"name":"value3","nodeType":"YulIdentifier","src":"21530:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21509:6:18"},"nodeType":"YulFunctionCall","src":"21509:28:18"},"nodeType":"YulExpressionStatement","src":"21509:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21557:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21562:3:18","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21553:3:18"},"nodeType":"YulFunctionCall","src":"21553:13:18"},{"name":"value4","nodeType":"YulIdentifier","src":"21568:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21546:6:18"},"nodeType":"YulFunctionCall","src":"21546:29:18"},"nodeType":"YulExpressionStatement","src":"21546:29:18"},{"nodeType":"YulAssignment","src":"21584:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21595:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21600:3:18","type":"","value":"148"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21591:3:18"},"nodeType":"YulFunctionCall","src":"21591:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21584:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21294:3:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21299:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21307:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21315:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21323:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21331:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21342:3:18","type":""}],"src":"21119:491:18"},{"body":{"nodeType":"YulBlock","src":"21789:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21806:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21817:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21799:6:18"},"nodeType":"YulFunctionCall","src":"21799:21:18"},"nodeType":"YulExpressionStatement","src":"21799:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21840:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21851:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21836:3:18"},"nodeType":"YulFunctionCall","src":"21836:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"21856:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21829:6:18"},"nodeType":"YulFunctionCall","src":"21829:30:18"},"nodeType":"YulExpressionStatement","src":"21829:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21879:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21890:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21875:3:18"},"nodeType":"YulFunctionCall","src":"21875:18:18"},{"hexValue":"506f6c696379206e6f74206578706972656420796574","kind":"string","nodeType":"YulLiteral","src":"21895:24:18","type":"","value":"Policy not expired yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21868:6:18"},"nodeType":"YulFunctionCall","src":"21868:52:18"},"nodeType":"YulExpressionStatement","src":"21868:52:18"},{"nodeType":"YulAssignment","src":"21929:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21941:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21952:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21937:3:18"},"nodeType":"YulFunctionCall","src":"21937:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21929:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21766:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21780:4:18","type":""}],"src":"21615:346:18"},{"body":{"nodeType":"YulBlock","src":"22140:224:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22157:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22168:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22150:6:18"},"nodeType":"YulFunctionCall","src":"22150:21:18"},"nodeType":"YulExpressionStatement","src":"22150:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22191:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22202:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22187:3:18"},"nodeType":"YulFunctionCall","src":"22187:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"22207:2:18","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22180:6:18"},"nodeType":"YulFunctionCall","src":"22180:30:18"},"nodeType":"YulExpressionStatement","src":"22180:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22230:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22241:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22226:3:18"},"nodeType":"YulFunctionCall","src":"22226:18:18"},{"hexValue":"4e6577206578706972792065786365656473206f726967696e616c2065787069","kind":"string","nodeType":"YulLiteral","src":"22246:34:18","type":"","value":"New expiry exceeds original expi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22219:6:18"},"nodeType":"YulFunctionCall","src":"22219:62:18"},"nodeType":"YulExpressionStatement","src":"22219:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22301:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22312:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22297:3:18"},"nodeType":"YulFunctionCall","src":"22297:18:18"},{"hexValue":"7279","kind":"string","nodeType":"YulLiteral","src":"22317:4:18","type":"","value":"ry"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22290:6:18"},"nodeType":"YulFunctionCall","src":"22290:32:18"},"nodeType":"YulExpressionStatement","src":"22290:32:18"},{"nodeType":"YulAssignment","src":"22331:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22343:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22354:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22339:3:18"},"nodeType":"YulFunctionCall","src":"22339:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22331:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6552775c3444956f99dfd3e96a4a5a197740e423e1e715df66bcf38079415142__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22117:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22131:4:18","type":""}],"src":"21966:398:18"},{"body":{"nodeType":"YulBlock","src":"22543:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22560:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22571:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22553:6:18"},"nodeType":"YulFunctionCall","src":"22553:21:18"},"nodeType":"YulExpressionStatement","src":"22553:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22594:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22605:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22590:3:18"},"nodeType":"YulFunctionCall","src":"22590:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"22610:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22583:6:18"},"nodeType":"YulFunctionCall","src":"22583:30:18"},"nodeType":"YulExpressionStatement","src":"22583:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22633:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22644:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22629:3:18"},"nodeType":"YulFunctionCall","src":"22629:18:18"},{"hexValue":"5369676e617475726520616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"22649:24:18","type":"","value":"Signature already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22622:6:18"},"nodeType":"YulFunctionCall","src":"22622:52:18"},"nodeType":"YulExpressionStatement","src":"22622:52:18"},{"nodeType":"YulAssignment","src":"22683:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22695:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22706:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22691:3:18"},"nodeType":"YulFunctionCall","src":"22691:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22683:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22520:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22534:4:18","type":""}],"src":"22369:346:18"},{"body":{"nodeType":"YulBlock","src":"22867:147:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22884:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22897:2:18","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"22901:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22893:3:18"},"nodeType":"YulFunctionCall","src":"22893:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22914:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22910:3:18"},"nodeType":"YulFunctionCall","src":"22910:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22889:3:18"},"nodeType":"YulFunctionCall","src":"22889:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22877:6:18"},"nodeType":"YulFunctionCall","src":"22877:66:18"},"nodeType":"YulExpressionStatement","src":"22877:66:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22963:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22968:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22959:3:18"},"nodeType":"YulFunctionCall","src":"22959:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"22973:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22952:6:18"},"nodeType":"YulFunctionCall","src":"22952:28:18"},"nodeType":"YulExpressionStatement","src":"22952:28:18"},{"nodeType":"YulAssignment","src":"22989:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23000:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23005:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22996:3:18"},"nodeType":"YulFunctionCall","src":"22996:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22989:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22835:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22840:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22848:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22859:3:18","type":""}],"src":"22720:294:18"},{"body":{"nodeType":"YulBlock","src":"23075:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23092:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"23095:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23085:6:18"},"nodeType":"YulFunctionCall","src":"23085:14:18"},"nodeType":"YulExpressionStatement","src":"23085:14:18"},{"nodeType":"YulAssignment","src":"23108:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23126:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23129:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23116:9:18"},"nodeType":"YulFunctionCall","src":"23116:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"23108:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23058:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"23066:4:18","type":""}],"src":"23019:121:18"},{"body":{"nodeType":"YulBlock","src":"23226:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"23259:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"23273:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"23283:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"23277:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"23304:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"23308:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23297:6:18"},"nodeType":"YulFunctionCall","src":"23297:17:18"},"nodeType":"YulExpressionStatement","src":"23297:17:18"},{"nodeType":"YulVariableDeclaration","src":"23327:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"23349:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"23353:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"23339:9:18"},"nodeType":"YulFunctionCall","src":"23339:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"23331:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23371:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23394:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23404:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23411:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"23423:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23407:3:18"},"nodeType":"YulFunctionCall","src":"23407:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23400:3:18"},"nodeType":"YulFunctionCall","src":"23400:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23390:3:18"},"nodeType":"YulFunctionCall","src":"23390:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"23375:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"23465:23:18","statements":[{"nodeType":"YulAssignment","src":"23467:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"23482:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"23467:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"23447:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"23459:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23444:2:18"},"nodeType":"YulFunctionCall","src":"23444:20:18"},"nodeType":"YulIf","src":"23441:47:18"},{"nodeType":"YulVariableDeclaration","src":"23501:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23515:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23525:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23532:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23537:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23528:3:18"},"nodeType":"YulFunctionCall","src":"23528:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23521:3:18"},"nodeType":"YulFunctionCall","src":"23521:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23511:3:18"},"nodeType":"YulFunctionCall","src":"23511:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"23505:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23555:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"23568:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"23559:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"23653:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23662:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"23669:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23655:6:18"},"nodeType":"YulFunctionCall","src":"23655:17:18"},"nodeType":"YulExpressionStatement","src":"23655:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23603:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"23610:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23600:2:18"},"nodeType":"YulFunctionCall","src":"23600:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23614:26:18","statements":[{"nodeType":"YulAssignment","src":"23616:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"23629:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"23636:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23625:3:18"},"nodeType":"YulFunctionCall","src":"23625:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"23616:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"23596:3:18","statements":[]},"src":"23592:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"23242:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23247:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23239:2:18"},"nodeType":"YulFunctionCall","src":"23239:11:18"},"nodeType":"YulIf","src":"23236:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"23198:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"23205:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"23210:10:18","type":""}],"src":"23145:545:18"},{"body":{"nodeType":"YulBlock","src":"23780:81:18","statements":[{"nodeType":"YulAssignment","src":"23790:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"23805:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23823:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"23826:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23819:3:18"},"nodeType":"YulFunctionCall","src":"23819:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23836:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23832:3:18"},"nodeType":"YulFunctionCall","src":"23832:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23815:3:18"},"nodeType":"YulFunctionCall","src":"23815:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23811:3:18"},"nodeType":"YulFunctionCall","src":"23811:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23801:3:18"},"nodeType":"YulFunctionCall","src":"23801:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23847:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"23850:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23843:3:18"},"nodeType":"YulFunctionCall","src":"23843:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"23798:2:18"},"nodeType":"YulFunctionCall","src":"23798:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"23790:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"23757:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"23763:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"23771:4:18","type":""}],"src":"23695:166:18"},{"body":{"nodeType":"YulBlock","src":"23962:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"23972:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23992:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23986:5:18"},"nodeType":"YulFunctionCall","src":"23986:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"23976:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"24039:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"24041:16:18"},"nodeType":"YulFunctionCall","src":"24041:18:18"},"nodeType":"YulExpressionStatement","src":"24041:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24011:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24019:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24008:2:18"},"nodeType":"YulFunctionCall","src":"24008:30:18"},"nodeType":"YulIf","src":"24005:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24114:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24152:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"24146:5:18"},"nodeType":"YulFunctionCall","src":"24146:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"24120:25:18"},"nodeType":"YulFunctionCall","src":"24120:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"24160:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"24070:43:18"},"nodeType":"YulFunctionCall","src":"24070:97:18"},"nodeType":"YulExpressionStatement","src":"24070:97:18"},{"nodeType":"YulVariableDeclaration","src":"24176:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24193:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"24180:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24203:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24222:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"24207:11:18","type":""}]},{"nodeType":"YulAssignment","src":"24235:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"24248:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"24235:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"24305:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24319:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24338:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24350:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24346:3:18"},"nodeType":"YulFunctionCall","src":"24346:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24334:3:18"},"nodeType":"YulFunctionCall","src":"24334:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"24323:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24367:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24411:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"24381:29:18"},"nodeType":"YulFunctionCall","src":"24381:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"24371:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24429:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24438:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"24433:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"24516:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"24541:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24559:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"24564:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24555:3:18"},"nodeType":"YulFunctionCall","src":"24555:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24549:5:18"},"nodeType":"YulFunctionCall","src":"24549:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"24534:6:18"},"nodeType":"YulFunctionCall","src":"24534:42:18"},"nodeType":"YulExpressionStatement","src":"24534:42:18"},{"nodeType":"YulAssignment","src":"24593:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"24607:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24615:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24603:3:18"},"nodeType":"YulFunctionCall","src":"24603:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"24593:6:18"}]},{"nodeType":"YulAssignment","src":"24634:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"24651:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"24662:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24647:3:18"},"nodeType":"YulFunctionCall","src":"24647:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"24634:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24463:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"24466:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24460:2:18"},"nodeType":"YulFunctionCall","src":"24460:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"24475:28:18","statements":[{"nodeType":"YulAssignment","src":"24477:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"24486:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"24489:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24482:3:18"},"nodeType":"YulFunctionCall","src":"24482:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"24477:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"24456:3:18","statements":[]},"src":"24452:236:18"},{"body":{"nodeType":"YulBlock","src":"24736:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24754:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"24781:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"24786:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24777:3:18"},"nodeType":"YulFunctionCall","src":"24777:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24771:5:18"},"nodeType":"YulFunctionCall","src":"24771:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"24758:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"24821:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"24833:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24860:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"24863:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24856:3:18"},"nodeType":"YulFunctionCall","src":"24856:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"24872:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24852:3:18"},"nodeType":"YulFunctionCall","src":"24852:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24882:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24878:3:18"},"nodeType":"YulFunctionCall","src":"24878:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"24848:3:18"},"nodeType":"YulFunctionCall","src":"24848:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24844:3:18"},"nodeType":"YulFunctionCall","src":"24844:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24829:3:18"},"nodeType":"YulFunctionCall","src":"24829:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"24814:6:18"},"nodeType":"YulFunctionCall","src":"24814:74:18"},"nodeType":"YulExpressionStatement","src":"24814:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"24707:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"24716:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24704:2:18"},"nodeType":"YulFunctionCall","src":"24704:19:18"},"nodeType":"YulIf","src":"24701:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"24922:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24936:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"24939:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24932:3:18"},"nodeType":"YulFunctionCall","src":"24932:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"24948:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24928:3:18"},"nodeType":"YulFunctionCall","src":"24928:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"24915:6:18"},"nodeType":"YulFunctionCall","src":"24915:36:18"},"nodeType":"YulExpressionStatement","src":"24915:36:18"}]},"nodeType":"YulCase","src":"24298:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"24303:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"24978:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"24992:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"25005:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"24996:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"25041:67:18","statements":[{"nodeType":"YulAssignment","src":"25059:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"25078:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"25083:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25074:3:18"},"nodeType":"YulFunctionCall","src":"25074:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25068:5:18"},"nodeType":"YulFunctionCall","src":"25068:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25059:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"25022:6:18"},"nodeType":"YulIf","src":"25019:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"25128:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25187:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"25194:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"25134:52:18"},"nodeType":"YulFunctionCall","src":"25134:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"25121:6:18"},"nodeType":"YulFunctionCall","src":"25121:81:18"},"nodeType":"YulExpressionStatement","src":"25121:81:18"}]},"nodeType":"YulCase","src":"24970:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"24278:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24286:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24275:2:18"},"nodeType":"YulFunctionCall","src":"24275:14:18"},"nodeType":"YulSwitch","src":"24268:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"23947:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"23953:3:18","type":""}],"src":"23866:1352:18"},{"body":{"nodeType":"YulBlock","src":"25352:145:18","statements":[{"nodeType":"YulAssignment","src":"25362:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25374:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25385:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25370:3:18"},"nodeType":"YulFunctionCall","src":"25370:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25362:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25404:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25419:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25435:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"25440:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25431:3:18"},"nodeType":"YulFunctionCall","src":"25431:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"25444:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25427:3:18"},"nodeType":"YulFunctionCall","src":"25427:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25415:3:18"},"nodeType":"YulFunctionCall","src":"25415:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25397:6:18"},"nodeType":"YulFunctionCall","src":"25397:51:18"},"nodeType":"YulExpressionStatement","src":"25397:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25468:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25479:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25464:3:18"},"nodeType":"YulFunctionCall","src":"25464:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"25484:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25457:6:18"},"nodeType":"YulFunctionCall","src":"25457:34:18"},"nodeType":"YulExpressionStatement","src":"25457:34:18"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25313:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25324:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25332:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25343:4:18","type":""}],"src":"25223:274:18"},{"body":{"nodeType":"YulBlock","src":"25534:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25551:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25558:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"25563:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25554:3:18"},"nodeType":"YulFunctionCall","src":"25554:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25544:6:18"},"nodeType":"YulFunctionCall","src":"25544:31:18"},"nodeType":"YulExpressionStatement","src":"25544:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25591:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25594:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25584:6:18"},"nodeType":"YulFunctionCall","src":"25584:15:18"},"nodeType":"YulExpressionStatement","src":"25584:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25615:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25618:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25608:6:18"},"nodeType":"YulFunctionCall","src":"25608:15:18"},"nodeType":"YulExpressionStatement","src":"25608:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"25502:127:18"},{"body":{"nodeType":"YulBlock","src":"25815:217:18","statements":[{"nodeType":"YulAssignment","src":"25825:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25837:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25848:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25833:3:18"},"nodeType":"YulFunctionCall","src":"25833:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25825:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25868:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"25879:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25861:6:18"},"nodeType":"YulFunctionCall","src":"25861:25:18"},"nodeType":"YulExpressionStatement","src":"25861:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25906:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25917:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25902:3:18"},"nodeType":"YulFunctionCall","src":"25902:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25926:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25934:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25922:3:18"},"nodeType":"YulFunctionCall","src":"25922:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25895:6:18"},"nodeType":"YulFunctionCall","src":"25895:45:18"},"nodeType":"YulExpressionStatement","src":"25895:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25960:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25971:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25956:3:18"},"nodeType":"YulFunctionCall","src":"25956:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"25976:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25949:6:18"},"nodeType":"YulFunctionCall","src":"25949:34:18"},"nodeType":"YulExpressionStatement","src":"25949:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26003:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26014:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25999:3:18"},"nodeType":"YulFunctionCall","src":"25999:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"26019:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25992:6:18"},"nodeType":"YulFunctionCall","src":"25992:34:18"},"nodeType":"YulExpressionStatement","src":"25992:34:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25760:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25771:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25779:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25787:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25795:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25806:4:18","type":""}],"src":"25634:398:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ETH forwarding to vault failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_boolt_boolt_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n        value3 := abi_decode_bool(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_MockPolicyData_$7184_memory_ptr__to_t_struct$_MockPolicyData_$7184_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, _1), 0x40)\n        let length := mload(memberValue0)\n        mstore(add(headStart, 96), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 128), mload(add(add(memberValue0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 128), 0)\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, _1)))))\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 0xc0)))))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Policy does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Period must be positive\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Policy not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No pending claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Claim exceeds sum assured\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Policy already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Policy expired\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not the policy owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Incorrect premium amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Premium transfer to vault failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        end := add(pos, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Claim request expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        end := add(pos, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid owner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Premium must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Sum assured must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Duration must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Policy already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid signer address\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Cannot revoke self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), value3)\n        mstore(add(pos, 116), value4)\n        end := add(pos, 148)\n    }\n    function abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Policy not expired yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6552775c3444956f99dfd3e96a4a5a197740e423e1e715df66bcf38079415142__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"New expiry exceeds original expi\")\n        mstore(add(headStart, 96), \"ry\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Signature already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061023f5760003560e01c80636def90b71161012e578063a9544464116100ab578063c9100bcb1161006f578063c9100bcb14610861578063d547741f1461093f578063f74d54801461095f578063f99dec7414610997578063fbfa77cf146109b757600080fd5b8063a9544464146107db578063b04a733b146107fb578063b0529da21461080e578063b87fb65c1461082e578063c634b78e1461084157600080fd5b806391d14854116100f257806391d1485414610624578063974552f9146106445780639a19c7b014610664578063a217fddf14610684578063a3f685f91461069957600080fd5b80636def90b7146105755780636e9747ca1461059557806375b238fc146105c25780638b82e07a146105e457806391cfb5051461060457600080fd5b806330d95b53116101bc578063528331db11610180578063528331db146104e25780635312ea8e146104f557806356a1c701146105155780635f64e78a146105355780636817031b1461055557600080fd5b806330d95b531461045957806336568abe1461046f5780633719f0961461048f5780634e494b7c146104af5780635052cb49146104c257600080fd5b806329216c7c1161020357806329216c7c146103c65780632aadb560146103e65780632f1ed59e146104065780632f2ff15d146104195780632fe1814c1461043957600080fd5b806301ffc9a7146102f357806308b3bf821461032857806319c0d1fa1461034857806320056ed314610368578063248a9ca31461039657600080fd5b366102ee576003546040516000916001600160a01b03169034908381818185875af1925050503d8060008114610291576040519150601f19603f3d011682016040523d82523d6000602084013e610296565b606091505b50509050806102ec5760405162461bcd60e51b815260206004820152601e60248201527f45544820666f7277617264696e6720746f207661756c74206661696c6564000060448201526064015b60405180910390fd5b005b600080fd5b3480156102ff57600080fd5b5061031361030e3660046132c0565b6109d7565b60405190151581526020015b60405180910390f35b34801561033457600080fd5b506102ec610343366004613306565b610a0e565b34801561035457600080fd5b506102ec610363366004613353565b610a98565b34801561037457600080fd5b50610388610383366004613353565b610b47565b60405190815260200161031f565b3480156103a257600080fd5b506103886103b1366004613353565b60009081526020819052604090206001015490565b3480156103d257600080fd5b506102ec6103e1366004613353565b610cda565b3480156103f257600080fd5b506102ec61040136600461336c565b610d8e565b6102ec61041436600461338e565b610f32565b34801561042557600080fd5b506102ec6104343660046133cf565b6110d7565b34801561044557600080fd5b506102ec6104543660046134a2565b611102565b34801561046557600080fd5b5061038860045481565b34801561047b57600080fd5b506102ec61048a3660046133cf565b611363565b34801561049b57600080fd5b506103886104aa366004613353565b61139b565b6102ec6104bd3660046134f2565b6115aa565b3480156104ce57600080fd5b506102ec6104dd3660046134a2565b611802565b6102ec6104f036600461354c565b611a86565b34801561050157600080fd5b506102ec610510366004613353565b611d1f565b34801561052157600080fd5b506102ec610530366004613587565b611dbd565b34801561054157600080fd5b506102ec61055036600461336c565b611e6a565b34801561056157600080fd5b506102ec610570366004613587565b611eee565b34801561058157600080fd5b506102ec610590366004613353565b611f9a565b3480156105a157600080fd5b506105b56105b0366004613353565b612043565b60405161031f91906135a4565b3480156105ce57600080fd5b50610388600080516020613b6f83398151915281565b3480156105f057600080fd5b506102ec6105ff366004613607565b612118565b34801561061057600080fd5b506102ec61061f366004613587565b61220c565b34801561063057600080fd5b5061031361063f3660046133cf565b612247565b34801561065057600080fd5b506102ec61065f36600461336c565b612270565b34801561067057600080fd5b506102ec61067f366004613587565b612324565b34801561069057600080fd5b50610388600081565b3480156106a557600080fd5b506107726106b4366004613353565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250600090815260056020818152604092839020835161010080820186528254825260018301546001600160a01b03169382019390935260028201549481019490945260038101546060850152600481015460808501529182015460ff808216151560a086015291900416151560c08301526006015460e082015290565b60405161031f9190815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a08083015115159082015260c08083015115159082015260e091820151918101919091526101000190565b3480156107e757600080fd5b506102ec6107f6366004613633565b6123e2565b6102ec610809366004613668565b6124f6565b34801561081a57600080fd5b506102ec610829366004613353565b612831565b61038861083c366004613668565b6128fe565b34801561084d57600080fd5b506102ec61085c366004613587565b612c4e565b34801561086d57600080fd5b506108fb61087c366004613353565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260066020908152604091829020825160a08101845281548152600182015492810192909252600281015460ff1615159282019290925260038201546060820152600490910154608082015290565b60405161031f9190600060a0820190508251825260208301516020830152604083015115156040830152606083015160608301526080830151608083015292915050565b34801561094b57600080fd5b506102ec61095a3660046133cf565b612cf8565b34801561096b57600080fd5b5060025461097f906001600160a01b031681565b6040516001600160a01b03909116815260200161031f565b3480156109a357600080fd5b506102ec6109b236600461336c565b612d1d565b3480156109c357600080fd5b5060035461097f906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b1480610a0857506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080516020613b6f833981519152610a2681612e0c565b6000858152600560209081526040808320600690925290912081548714610a5f5760405162461bcd60e51b81526004016102e3906136d5565b600201805495151560ff1996871617905560050180549215159315156101000290941661ffff1990921691909117919091179091555050565b6000610aa381612e0c565b60008211610af35760405162461bcd60e51b815260206004820152601760248201527f506572696f64206d75737420626520706f73697469766500000000000000000060448201526064016102e3565b600454610b03836201518061371a565b60048190556040805183815260208101929092527fb792057619e1a3b0e2768725ef4cb4fc3cbf647c992d306e6876522e3fc0cdbc910160405180910390a1505050565b6000600080516020613b6f833981519152610b6181612e0c565b60008381526005602081905260409091200154839060ff16610b955760405162461bcd60e51b81526004016102e390613731565b60008481526006602090815260408083206005909252909120600282015460ff16610bf55760405162461bcd60e51b815260206004820152601060248201526f4e6f2070656e64696e6720636c61696d60801b60448201526064016102e3565b60028201805460ff1916905560058101805461ffff191661010017905560035460018281015490840154604051631e55af2160e31b81526001600160a01b039283166004820152602481019190915291169063f2ad790890604401600060405180830381600087803b158015610c6a57600080fd5b505af1158015610c7e573d6000803e3d6000fd5b50505050600181810154908301546040519081526001600160a01b039091169087907f636494174e4a0f872de31b104ec14fb50edb1bdc4b1db9f006eaa68a61610f9c9060200160405180910390a35060010154949350505050565b600080516020613b6f833981519152610cf281612e0c565b60008281526005602081905260409091200154829060ff16610d265760405162461bcd60e51b81526004016102e390613731565b6000838152600560208181526040808420928301805460ff191690556001830154905193845291926001600160a01b039092169186917fae2eb9a5ff7e26865940377aafb8a569997727d3bc48028ed88199eed260087f91015b60405180910390a350505050565b60008281526005602081905260409091200154829060ff16610dc25760405162461bcd60e51b81526004016102e390613731565b60008381526005602052604090206003810154831115610e205760405162461bcd60e51b815260206004820152601960248201527810db185a5b48195e18d959591cc81cdd5b48185cdcdd5c9959603a1b60448201526064016102e3565b6005810154610100900460ff1615610e4a5760405162461bcd60e51b81526004016102e39061375c565b80600401544210610e6d5760405162461bcd60e51b81526004016102e39061378c565b6040518060a0016040528085815260200184815260200160011515815260200142815260200160045442610ea191906137b4565b905260008581526006602090815260409182902083518155838201516001808301919091558484015160028301805460ff1916911515919091179055606085015160038301556080909401516004909101559183015490518581526001600160a01b039091169186917fcb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f19101610d80565b60008381526005602081905260409091200154839060ff16610f665760405162461bcd60e51b81526004016102e390613731565b600084815260056020526040902060018101546001600160a01b03163314610fa05760405162461bcd60e51b81526004016102e3906137c7565b833414610fbf5760405162461bcd60e51b81526004016102e3906137f5565b6005810154610100900460ff1615610fe95760405162461bcd60e51b81526004016102e39061375c565b6002810184905560048101546110009084906137b4565b60048201556003546040516000916001600160a01b03169086908381818185875af1925050503d8060008114611052576040519150601f19603f3d011682016040523d82523d6000602084013e611057565b606091505b50509050806110785760405162461bcd60e51b81526004016102e39061382c565b600182015460048301546040516001600160a01b039092169188917f16fe3aa381de20cb3e0fb3f9ae8d20168747df7e26dbc2b381ad5025ee5ca086916110c7918a8252602082015260400190565b60405180910390a3505050505050565b6000828152602081905260409020600101546110f281612e0c565b6110fc8383612e19565b50505050565b600080516020613b6f83398151915261111a81612e0c565b60008481526005602081905260409091200154849060ff1661114e5760405162461bcd60e51b81526004016102e390613731565b6002600154036111705760405162461bcd60e51b81526004016102e390613861565b6002600155600085815260056020819052604090912090810154610100900460ff16156111af5760405162461bcd60e51b81526004016102e39061375c565b806004015442106111d25760405162461bcd60e51b81526004016102e39061378c565b60408051602081018890529081018690524660608201526000906080016040516020818303038152906040528051906020012090506112118186612eab565b61122d5760405162461bcd60e51b81526004016102e390613898565b8451602080870191909120600090815260079091526040908190208054600160ff1991821681179092556005850180549091169055600354908401549151631f9cab4760e21b81526001600160a01b03928316600482015260248101899052911690637e72ad1c90604401600060405180830381600087803b1580156112b257600080fd5b505af11580156112c6573d6000803e3d6000fd5b5050505060018201546040518781526001600160a01b039091169088907fae2eb9a5ff7e26865940377aafb8a569997727d3bc48028ed88199eed260087f9060200160405180910390a360018201546040518781526001600160a01b039091169088907ff8590cd6b8c44be7a2bc57131f10e203ec5f7d7f2f761e1508a8cc964ecb9eb79060200160405180910390a35050600180555050505050565b6001600160a01b038116331461138c5760405163334bd91960e11b815260040160405180910390fd5b6113968282612f62565b505050565b6000600080516020613b6f8339815191526113b581612e0c565b60008381526005602081905260409091200154839060ff166113e95760405162461bcd60e51b81526004016102e390613731565b60026001540361140b5760405162461bcd60e51b81526004016102e390613861565b60026001819055600085815260066020908152604080832060059092529091209181015490919060ff166114745760405162461bcd60e51b815260206004820152601060248201526f4e6f2070656e64696e6720636c61696d60801b60448201526064016102e3565b81600401544211156114c05760405162461bcd60e51b815260206004820152601560248201527410db185a5b481c995c5d595cdd08195e1c1a5c9959605a1b60448201526064016102e3565b60028201805460ff1916905560058101805461ffff191661010017905560035460018281015490840154604051631e55af2160e31b81526001600160a01b039283166004820152602481019190915291169063f2ad790890604401600060405180830381600087803b15801561153557600080fd5b505af1158015611549573d6000803e3d6000fd5b50505050600181810154908301546040519081526001600160a01b039091169087907f636494174e4a0f872de31b104ec14fb50edb1bdc4b1db9f006eaa68a61610f9c9060200160405180910390a350600101549250505060018055919050565b6002600154036115cc5760405162461bcd60e51b81526004016102e390613861565b600260015560008481526005602081905260409091200154849060ff166116055760405162461bcd60e51b81526004016102e390613731565b600085815260056020526040902060018101546001600160a01b0316331461163f5760405162461bcd60e51b81526004016102e3906137c7565b84341461165e5760405162461bcd60e51b81526004016102e3906137f5565b6005810154610100900460ff16156116885760405162461bcd60e51b81526004016102e39061375c565b60408051602081018890529081018690526060810185905246608082015260009060a0016040516020818303038152906040528051906020012090506116ce8185612eab565b6116ea5760405162461bcd60e51b81526004016102e390613898565b83516020808601919091206000908152600790915260409020805460ff191660011790556002820186905560048201546117259086906137b4565b60048301556003546040516000916001600160a01b03169088908381818185875af1925050503d8060008114611777576040519150601f19603f3d011682016040523d82523d6000602084013e61177c565b606091505b505090508061179d5760405162461bcd60e51b81526004016102e39061382c565b600183015460048401546040516001600160a01b03909216918a917f16fe3aa381de20cb3e0fb3f9ae8d20168747df7e26dbc2b381ad5025ee5ca086916117ec918c8252602082015260400190565b60405180910390a3505060018055505050505050565b6002600154036118245760405162461bcd60e51b81526004016102e390613861565b600260015560008381526005602081905260409091200154839060ff1661185d5760405162461bcd60e51b81526004016102e390613731565b600084815260056020526040902060018101546001600160a01b031633146118975760405162461bcd60e51b81526004016102e3906137c7565b80600301548411156118e75760405162461bcd60e51b815260206004820152601960248201527810db185a5b48195e18d959591cc81cdd5b48185cdcdd5c9959603a1b60448201526064016102e3565b6005810154610100900460ff16156119115760405162461bcd60e51b81526004016102e39061375c565b806004015442106119345760405162461bcd60e51b81526004016102e39061378c565b60408051602081018790529081018590524660608201526000906080016040516020818303038152906040528051906020012090506119738185612eab565b61198f5760405162461bcd60e51b81526004016102e390613898565b8351602080860191909120600090815260078252604090819020805460ff19166001908117909155815160a08101835289815292830188905290820152426060820181905260045460808301916119e691906137b4565b905260008781526006602090815260409182902083518155838201516001808301919091558484015160028301805460ff1916911515919091179055606085015160038301556080909401516004909101559184015490518781526001600160a01b039091169188917fcb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f1910160405180910390a350506001805550505050565b6001600160a01b038416611aac5760405162461bcd60e51b81526004016102e3906138c3565b60008311611acc5760405162461bcd60e51b81526004016102e3906138f2565b60008211611aec5760405162461bcd60e51b81526004016102e390613929565b60008111611b0c5760405162461bcd60e51b81526004016102e390613960565b823414611b2b5760405162461bcd60e51b81526004016102e3906137f5565b6000611b378542612fcd565b6000818152600560208190526040909120015490915060ff1615611b6d5760405162461bcd60e51b81526004016102e390613997565b604051806101000160405280828152602001866001600160a01b031681526020018581526020018481526020018342611ba691906137b4565b8152600160208083018290526000604080850182905242606095860152868252600580845291819020865181559286015193830180546001600160a01b039095166001600160a01b0319909516949094179093559184015160028201559183015160038301556080830151600483015560a0830151908201805460c085015115156101000261ff00199315159390931661ffff199091161791909117905560e090910151600690910155611c5981613014565b6003546040516000916001600160a01b03169086908381818185875af1925050503d8060008114611ca6576040519150601f19603f3d011682016040523d82523d6000602084013e611cab565b606091505b5050905080611ccc5760405162461bcd60e51b81526004016102e39061382c565b6001600160a01b038616827f105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff8787611d0488426137b4565b604080519384526020840192909252908201526060016110c7565b6000611d2a81612e0c565b600260015403611d4c5760405162461bcd60e51b81526004016102e390613861565b600260015560035460405163c107532960e01b8152336004820152602481018490526001600160a01b039091169063c107532990604401600060405180830381600087803b158015611d9d57600080fd5b505af1158015611db1573d6000803e3d6000fd5b50506001805550505050565b6000611dc881612e0c565b6001600160a01b038216611e175760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964207369676e6572206164647265737360501b60448201526064016102e3565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f4a297cf5d32586f80d2b0708a39d2da1f46e6ae7722171e1c51dfd685b5b8aa890600090a3505050565b600080516020613b6f833981519152611e8281612e0c565b60008381526005602081905260409091209081015460ff16611eb65760405162461bcd60e51b81526004016102e390613731565b8281600401541115611ee15782816004016000828254611ed691906139c6565b909155506110fc9050565b6000600482015550505050565b6000611ef981612e0c565b6001600160a01b038216611f475760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b60448201526064016102e3565b600380546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3990600090a3505050565b600080516020613b6f833981519152611fb281612e0c565b60008281526005602081905260409091209081015460ff16611fe65760405162461bcd60e51b81526004016102e390613731565b60058101805460ff19169055611ffd6001426139c6565b600482015560018101546040516001600160a01b039091169084907f8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe00290600090a3505050565b60408051808201909152606081526000602082015260008281526008602052604090819020815180830190925280548290829061207f906139d9565b80601f01602080910402602001604051908101604052809291908181526020018280546120ab906139d9565b80156120f85780601f106120cd576101008083540402835291602001916120f8565b820191906000526020600020905b8154815290600101906020018083116120db57829003601f168201915b50505091835250506001919091015460ff16151560209091015292915050565b600080516020613b6f83398151915261213081612e0c565b814710156121775760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102e3565b6000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146121c4576040519150601f19603f3d011682016040523d82523d6000602084013e6121c9565b606091505b50509050806110fc5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016102e3565b600080516020613b6f83398151915261222481612e0c565b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020613b6f83398151915261228881612e0c565b6000838152600560205260409020805484146122b65760405162461bcd60e51b81526004016102e3906136d5565b600481018390554283118015906122d15750600581015460ff165b156110fc5760058101805460ff1916905560018101546040516001600160a01b039091169085907f8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe00290600090a350505050565b600061232f81612e0c565b6001600160a01b03821661237d5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b60448201526064016102e3565b336001600160a01b038316036123ca5760405162461bcd60e51b815260206004820152601260248201527121b0b73737ba103932bb37b5b29039b2b63360711b60448201526064016102e3565b611396600080516020613b6f83398151915283612f62565b600080516020613b6f8339815191526123fa81612e0c565b6000848152600560205260409020805485146124285760405162461bcd60e51b81526004016102e3906136d5565b6040518060a0016040528086815260200185815260200184151581526020014281526020016004544261245b91906137b4565b905260008681526006602090815260409182902083518155838201516001808301919091558484015160028301805460ff1916911515919091179055606085015160038301556080909401516004909101559183015490518681526001600160a01b039091169187917fcb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f1910160405180910390a35050505050565b6002600154036125185760405162461bcd60e51b81526004016102e390613861565b60026001556001600160a01b0385166125435760405162461bcd60e51b81526004016102e3906138c3565b600084116125635760405162461bcd60e51b81526004016102e3906138f2565b600083116125835760405162461bcd60e51b81526004016102e390613929565b600082116125a35760405162461bcd60e51b81526004016102e390613960565b8334146125c25760405162461bcd60e51b81526004016102e3906137f5565b600085858585466040516020016125dd959493929190613a13565b6040516020818303038152906040528051906020012090506125ff8183612eab565b61261b5760405162461bcd60e51b81526004016102e390613898565b81516020808401919091206000908152600790915260408120805460ff191660011790556126498742612fcd565b6000818152600560208190526040909120015490915060ff161561267f5760405162461bcd60e51b81526004016102e390613997565b604051806101000160405280828152602001886001600160a01b0316815260200187815260200186815260200185426126b891906137b4565b8152600160208083018290526000604080850182905242606095860152868252600580845291819020865181559286015193830180546001600160a01b039095166001600160a01b0319909516949094179093559184015160028201559183015160038301556080830151600483015560a0830151908201805460c085015115156101000261ff00199315159390931661ffff199091161791909117905560e09091015160069091015561276b81613014565b6003546040516000916001600160a01b03169088908381818185875af1925050503d80600081146127b8576040519150601f19603f3d011682016040523d82523d6000602084013e6127bd565b606091505b50509050806127de5760405162461bcd60e51b81526004016102e39061382c565b6001600160a01b038816827f105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff89896128168a426137b4565b604080519384526020840192909252908201526060016117ec565b60008181526005602081905260409091209081015460ff166128655760405162461bcd60e51b81526004016102e390613731565b80600401544210156128b25760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de481b9bdd08195e1c1a5c9959081e595d60521b60448201526064016102e3565b60058101805460ff1916905560018101546040516001600160a01b039091169083907f8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe00290600090a35050565b60006002600154036129225760405162461bcd60e51b81526004016102e390613861565b60026001556001600160a01b03861661294d5760405162461bcd60e51b81526004016102e3906138c3565b6000851161296d5760405162461bcd60e51b81526004016102e3906138f2565b6000841161298d5760405162461bcd60e51b81526004016102e390613929565b600083116129ad5760405162461bcd60e51b81526004016102e390613960565b8434146129cc5760405162461bcd60e51b81526004016102e3906137f5565b600086868686466040516020016129e7959493929190613a13565b604051602081830303815290604052805190602001209050612a098184612eab565b612a255760405162461bcd60e51b81526004016102e390613898565b82516020808501919091206000908152600790915260408120805460ff19166001179055612a538842612fcd565b6000818152600560208190526040909120015490915060ff1615612a895760405162461bcd60e51b81526004016102e390613997565b604051806101000160405280828152602001896001600160a01b031681526020018881526020018781526020018642612ac291906137b4565b8152600160208083018290526000604080850182905242606095860152868252600580845291819020865181559286015193830180546001600160a01b039095166001600160a01b0319909516949094179093559184015160028201559183015160038301556080830151600483015560a0830151908201805460c085015115156101000261ff00199315159390931661ffff199091161791909117905560e090910151600690910155612b7581613014565b6003546040516000916001600160a01b03169089908381818185875af1925050503d8060008114612bc2576040519150601f19603f3d011682016040523d82523d6000602084013e612bc7565b606091505b5050905080612be85760405162461bcd60e51b81526004016102e39061382c565b6001600160a01b038916827f105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff8a8a612c208b426137b4565b6040805193845260208401929092529082015260600160405180910390a35060018055979650505050505050565b6000612c5981612e0c565b6001600160a01b038216612ca75760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b60448201526064016102e3565b612cbf600080516020613b6f83398151915283612e19565b506040516001600160a01b038316907f1c4e23de8d72c94b22992bd4d7b6786b215ba876af214ff63e6a0ca38fc97af490600090a25050565b600082815260208190526040902060010154612d1381612e0c565b6110fc8383612f62565b600080516020613b6f833981519152612d3581612e0c565b600083815260056020526040902080548414612d635760405162461bcd60e51b81526004016102e3906136d5565b600581015460ff16612d875760405162461bcd60e51b81526004016102e390613731565b6000612d96846201518061371a565b612da090426137b4565b90508160040154811115612e015760405162461bcd60e51b815260206004820152602260248201527f4e6577206578706972792065786365656473206f726967696e616c2065787069604482015261727960f01b60648201526084016102e3565b600490910155505050565b612e168133613084565b50565b6000612e258383612247565b612ea3576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055612e5b3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610a08565b506000610a08565b805160208083019190912060009081526007909152604081205460ff1615612f0e5760405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c9948185b1c9958591e481d5cd95960521b60448201526064016102e3565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c849052603c812090612f4882856130c1565b6002546001600160a01b0390811691161495945050505050565b6000612f6e8383612247565b15612ea3576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610a08565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b60408051608081018252600d8183019081526c54657374204d6574616461746160981b6060830152815260016020808301919091526000848152600890915291909120815181906130659082613a98565b50602091909101516001909101805460ff191691151591909117905550565b61308e8282612247565b6130bd5760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016102e3565b5050565b6000806000806130d186866130eb565b9250925092506130e18282613138565b5090949350505050565b600080600083516041036131255760208401516040850151606086015160001a613117888285856131f1565b955095509550505050613131565b50508151600091506002905b9250925092565b600082600381111561314c5761314c613b58565b03613155575050565b600182600381111561316957613169613b58565b036131875760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561319b5761319b613b58565b036131bc5760405163fce698f760e01b8152600481018290526024016102e3565b60038260038111156131d0576131d0613b58565b036130bd576040516335e2f38360e21b8152600481018290526024016102e3565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561322c57506000915060039050826132b6565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015613280573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166132ac575060009250600191508290506132b6565b9250600091508190505b9450945094915050565b6000602082840312156132d257600080fd5b81356001600160e01b0319811681146132ea57600080fd5b9392505050565b8035801515811461330157600080fd5b919050565b6000806000806080858703121561331c57600080fd5b8435935061332c602086016132f1565b925061333a604086016132f1565b9150613348606086016132f1565b905092959194509250565b60006020828403121561336557600080fd5b5035919050565b6000806040838503121561337f57600080fd5b50508035926020909101359150565b6000806000606084860312156133a357600080fd5b505081359360208301359350604090920135919050565b6001600160a01b0381168114612e1657600080fd5b600080604083850312156133e257600080fd5b8235915060208301356133f4816133ba565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261342657600080fd5b813567ffffffffffffffff80821115613441576134416133ff565b604051601f8301601f19908116603f01168101908282118183101715613469576134696133ff565b8160405283815286602085880101111561348257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156134b757600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156134dc57600080fd5b6134e886828701613415565b9150509250925092565b6000806000806080858703121561350857600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561353457600080fd5b61354087828801613415565b91505092959194509250565b6000806000806080858703121561356257600080fd5b843561356d816133ba565b966020860135965060408601359560600135945092505050565b60006020828403121561359957600080fd5b81356132ea816133ba565b600060208083528351604082850152805180606086015260005b818110156135da578281018401518682016080015283016135be565b5060006080828701015282860151151560408601526080601f19601f830116860101935050505092915050565b6000806040838503121561361a57600080fd5b8235613625816133ba565b946020939093013593505050565b60008060006060848603121561364857600080fd5b833592506020840135915061365f604085016132f1565b90509250925092565b600080600080600060a0868803121561368057600080fd5b853561368b816133ba565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156136bc57600080fd5b6136c888828901613415565b9150509295509295909350565b602080825260159082015274141bdb1a58de48191bd95cc81b9bdd08195e1a5cdd605a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610a0857610a08613704565b602080825260119082015270506f6c696379206e6f742061637469766560781b604082015260600190565b602080825260169082015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b604082015260600190565b6020808252600e908201526d141bdb1a58de48195e1c1a5c995960921b604082015260600190565b80820180821115610a0857610a08613704565b6020808252601490820152732737ba103a3432903837b634b1bc9037bbb732b960611b604082015260600190565b60208082526018908201527f496e636f7272656374207072656d69756d20616d6f756e740000000000000000604082015260600190565b6020808252818101527f5072656d69756d207472616e7366657220746f207661756c74206661696c6564604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b602080825260159082015274496e76616c6964206f776e6572206164647265737360581b604082015260600190565b60208082526018908201527f5072656d69756d206d75737420626520706f7369746976650000000000000000604082015260600190565b6020808252601c908201527f53756d2061737375726564206d75737420626520706f73697469766500000000604082015260600190565b60208082526019908201527f4475726174696f6e206d75737420626520706f73697469766500000000000000604082015260600190565b602080825260159082015274506f6c69637920616c72656164792065786973747360581b604082015260600190565b81810381811115610a0857610a08613704565b600181811c908216806139ed57607f821691505b602082108103613a0d57634e487b7160e01b600052602260045260246000fd5b50919050565b60609590951b6bffffffffffffffffffffffff19168552601485019390935260348401919091526054830152607482015260940190565b601f82111561139657600081815260208120601f850160051c81016020861015613a715750805b601f850160051c820191505b81811015613a9057828155600101613a7d565b505050505050565b815167ffffffffffffffff811115613ab257613ab26133ff565b613ac681613ac084546139d9565b84613a4a565b602080601f831160018114613afb5760008415613ae35750858301515b600019600386901b1c1916600185901b178555613a90565b600085815260208120601f198616915b82811015613b2a57888601518255948401946001909101908401613b0b565b5085821015613b485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a264697066735822122071ae6d53e37d7ed3eff44bc177c6d34c9b8044601aa5e81c1a36959ce68082b164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DEF90B7 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xA9544464 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC9100BCB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0x861 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x93F JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x95F JUMPI DUP1 PUSH4 0xF99DEC74 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9544464 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xB04A733B EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0xB0529DA2 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xB87FB65C EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x974552F9 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0xA3F685F9 EQ PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6DEF90B7 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0x6E9747CA EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x8B82E07A EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0x91CFB505 EQ PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30D95B53 GT PUSH2 0x1BC JUMPI DUP1 PUSH4 0x528331DB GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x528331DB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5F64E78A EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30D95B53 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x3719F096 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x4E494B7C EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x5052CB49 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29216C7C GT PUSH2 0x203 JUMPI DUP1 PUSH4 0x29216C7C EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x2AADB560 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x2F1ED59E EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x2FE1814C EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8B3BF82 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x19C0D1FA EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x20056ED3 EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2EE JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x291 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820666F7277617264696E6720746F207661756C74206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x3306 JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0xCDA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x414 CALLDATASIZE PUSH1 0x4 PUSH2 0x338E JUMP JUMPDEST PUSH2 0xF32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x434 CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x34F2 JUMP JUMPDEST PUSH2 0x15AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x1802 JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x354C JUMP JUMPDEST PUSH2 0x1A86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x1D1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x530 CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x1DBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x1E6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x1EEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x1F9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B5 PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x35A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x5FF CALLDATASIZE PUSH1 0x4 PUSH2 0x3607 JUMP JUMPDEST PUSH2 0x2118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x220C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x63F CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x2247 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x65F CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2270 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x2324 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x388 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x772 PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 SWAP1 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3633 JUMP JUMPDEST PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x809 CALLDATASIZE PUSH1 0x4 PUSH2 0x3668 JUMP JUMPDEST PUSH2 0x24F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x829 CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH2 0x2831 JUMP JUMPDEST PUSH2 0x388 PUSH2 0x83C CALLDATASIZE PUSH1 0x4 PUSH2 0x3668 JUMP JUMPDEST PUSH2 0x28FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x85C CALLDATASIZE PUSH1 0x4 PUSH2 0x3587 JUMP JUMPDEST PUSH2 0x2C4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8FB PUSH2 0x87C CALLDATASIZE PUSH1 0x4 PUSH2 0x3353 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x95A CALLDATASIZE PUSH1 0x4 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x2CF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x97F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x9B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2D1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x97F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xA08 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA26 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP2 SLOAD DUP8 EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE PUSH1 0x5 ADD DUP1 SLOAD SWAP3 ISZERO ISZERO SWAP4 ISZERO ISZERO PUSH2 0x100 MUL SWAP1 SWAP5 AND PUSH2 0xFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA3 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F64206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xB03 DUP4 PUSH3 0x15180 PUSH2 0x371A JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB792057619E1A3B0E2768725EF4CB4FC3CBF647C992D306E6876522E3FC0CDBC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB61 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xCF2 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0xD26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP7 SWAP2 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD DUP4 GT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10DB185A5B48195E18D959591CC81CDD5B48185CDCDD5C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0xE6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0xEA1 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP4 ADD SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST DUP4 CALLVALUE EQ PUSH2 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x1000 SWAP1 DUP5 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1078 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP9 SWAP2 PUSH32 0x16FE3AA381DE20CB3E0FB3F9AE8D20168747DF7E26DBC2B381AD5025EE5CA086 SWAP2 PUSH2 0x10C7 SWAP2 DUP11 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10F2 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH2 0x10FC DUP4 DUP4 PUSH2 0x2E19 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x111A DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x114E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1211 DUP2 DUP7 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x122D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP6 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 DUP5 ADD SLOAD SWAP2 MLOAD PUSH4 0x1F9CAB47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7E72AD1C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xF8590CD6B8C44BE7A2BC57131F10E203EC5F7D7F2F761E1508A8CC964ECB9EB7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x138C JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1396 DUP3 DUP3 PUSH2 0x2F62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x13B5 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x13E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x140B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SWAP2 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x1474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481C995C5D595CDD08195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1549 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP3 POP POP POP PUSH1 0x1 DUP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x15CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x163F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x165E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x16CE DUP2 DUP6 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x16EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH2 0x1725 SWAP1 DUP7 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP9 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x177C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x179D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP11 SWAP2 PUSH32 0x16FE3AA381DE20CB3E0FB3F9AE8D20168747DF7E26DBC2B381AD5025EE5CA086 SWAP2 PUSH2 0x17EC SWAP2 DUP13 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x185D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37C7 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 GT ISZERO PUSH2 0x18E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x10DB185A5B48195E18D959591CC81CDD5B48185CDCDD5C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x375C JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x1934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1973 DUP2 DUP6 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP4 ADD SWAP2 PUSH2 0x19E6 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP5 ADD SLOAD SWAP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1AAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1ACC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1AEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3929 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1B0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3960 JUMP JUMPDEST DUP3 CALLVALUE EQ PUSH2 0x1B2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B37 DUP6 TIMESTAMP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x1BA6 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x1C59 DUP2 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CA6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP8 DUP8 PUSH2 0x1D04 DUP9 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2A DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1D4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC1075329 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC1075329 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC8 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964207369676E65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x4A297CF5D32586F80D2B0708A39D2DA1F46E6AE7722171E1C51DFD685B5B8AA8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1E82 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1EB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x1EE1 JUMPI DUP3 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1ED6 SWAP2 SWAP1 PUSH2 0x39C6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x10FC SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP3 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF9 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x483BDEDAAF23706A9800AC1AF0D852B34927780D79F9D6BA60A80C7CAD75EA39 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1FB2 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1FFD PUSH1 0x1 TIMESTAMP PUSH2 0x39C6 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x207F SWAP1 PUSH2 0x39D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x20AB SWAP1 PUSH2 0x39D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2130 DUP2 PUSH2 0x2E0C JUMP JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x2177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2224 DUP2 PUSH2 0x2E0C JUMP JUMPDEST POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2288 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 EQ PUSH2 0x22B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE TIMESTAMP DUP4 GT DUP1 ISZERO SWAP1 PUSH2 0x22D1 JUMPI POP PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x10FC JUMPI PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232F DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x237D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x23CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA103932BB37B5B29039B2B633 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x1396 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x23FA DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP6 EQ PUSH2 0x2428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x245B SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP4 ADD SLOAD SWAP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP8 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2518 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2543 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x2563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x2583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3929 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x25A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3960 JUMP JUMPDEST DUP4 CALLVALUE EQ PUSH2 0x25C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 CHAINID PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25DD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x25FF DUP2 DUP4 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x261B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2649 DUP8 TIMESTAMP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x267F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 TIMESTAMP PUSH2 0x26B8 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x276B DUP2 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP9 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x27DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP10 DUP10 PUSH2 0x2816 DUP11 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x17EC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x2865 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x28B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE481B9BDD08195E1C1A5C9959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2922 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3861 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x294D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38C3 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x296D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x298D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3929 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x29AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3960 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x29CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x37F5 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 CHAINID PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2A09 DUP2 DUP5 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x2A25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3898 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2A53 DUP9 TIMESTAMP PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2A89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 TIMESTAMP PUSH2 0x2AC2 SWAP2 SWAP1 PUSH2 0x37B4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x2B75 DUP2 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2BE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP11 DUP11 PUSH2 0x2C20 DUP12 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C59 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2CA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x2CBF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x2E19 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1C4E23DE8D72C94B22992BD4D7B6786B215BA876AF214FF63E6A0CA38FC97AF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2D13 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH2 0x10FC DUP4 DUP4 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3B6F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x2D35 DUP2 PUSH2 0x2E0C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP5 EQ PUSH2 0x2D63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x36D5 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x2D87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D96 DUP5 PUSH3 0x15180 PUSH2 0x371A JUMP JUMPDEST PUSH2 0x2DA0 SWAP1 TIMESTAMP PUSH2 0x37B4 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 ADD SLOAD DUP2 GT ISZERO PUSH2 0x2E01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206578706972792065786365656473206F726967696E616C2065787069 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7279 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x2E16 DUP2 CALLER PUSH2 0x3084 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E25 DUP4 DUP4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2E5B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xA08 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA08 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2F0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP5 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 PUSH2 0x2F48 DUP3 DUP6 PUSH2 0x30C1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6E DUP4 DUP4 PUSH2 0x2247 JUMP JUMPDEST ISZERO PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0xD DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH13 0x54657374204D65746164617461 PUSH1 0x98 SHL PUSH1 0x60 DUP4 ADD MSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x3065 SWAP1 DUP3 PUSH2 0x3A98 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x308E DUP3 DUP3 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x30BD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x2E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30D1 DUP7 DUP7 PUSH2 0x30EB JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x30E1 DUP3 DUP3 PUSH2 0x3138 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x3125 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x3117 DUP9 DUP3 DUP6 DUP6 PUSH2 0x31F1 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x3131 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x314C JUMPI PUSH2 0x314C PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x3155 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3169 JUMPI PUSH2 0x3169 PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x3187 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x319B JUMPI PUSH2 0x319B PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x31BC JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31D0 JUMPI PUSH2 0x31D0 PUSH2 0x3B58 JUMP JUMPDEST SUB PUSH2 0x30BD JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x322C JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x32B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x32AC JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x32B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x32EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x331C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x332C PUSH1 0x20 DUP7 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP3 POP PUSH2 0x333A PUSH1 0x40 DUP7 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3348 PUSH1 0x60 DUP7 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x337F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x33F4 DUP2 PUSH2 0x33BA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3441 JUMPI PUSH2 0x3441 PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3469 JUMPI PUSH2 0x3469 PUSH2 0x33FF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x3482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x34B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x34DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34E8 DUP7 DUP3 DUP8 ADD PUSH2 0x3415 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3508 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3540 DUP8 DUP3 DUP9 ADD PUSH2 0x3415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x356D DUP2 PUSH2 0x33BA JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32EA DUP2 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD PUSH1 0x40 DUP3 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35DA JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP4 ADD PUSH2 0x35BE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 DUP3 DUP8 ADD ADD MSTORE DUP3 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x361A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3625 DUP2 PUSH2 0x33BA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x365F PUSH1 0x40 DUP6 ADD PUSH2 0x32F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x368B DUP2 PUSH2 0x33BA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36C8 DUP9 DUP3 DUP10 ADD PUSH2 0x3415 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x141BDB1A58DE48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x3704 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x3704 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207072656D69756D20616D6F756E740000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5072656D69756D207472616E7366657220746F207661756C74206661696C6564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D75737420626520706F7369746976650000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x53756D2061737375726564206D75737420626520706F73697469766500000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x506F6C69637920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA08 PUSH2 0x3704 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x39ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3A0D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP6 MSTORE PUSH1 0x14 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x34 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x94 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3A71 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A90 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A7D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB2 JUMPI PUSH2 0x3AB2 PUSH2 0x33FF JUMP JUMPDEST PUSH2 0x3AC6 DUP2 PUSH2 0x3AC0 DUP5 SLOAD PUSH2 0x39D9 JUMP JUMPDEST DUP5 PUSH2 0x3A4A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3AFB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3AE3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3A90 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B2A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3B0B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3B48 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA264697066735822122071AE6D53E37D7ED3EFF44BC1 PUSH24 0xC6D34C9B8044601AA5E81C1A36959CE68082B164736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"214:9529:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15868:5:13;;15860:41;;15845:9;;-1:-1:-1;;;;;15868:5:13;;15887:9;;15845;15860:41;15845:9;15860:41;15887:9;15868:5;15860:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15844:57;;;15919:4;15911:47;;;;-1:-1:-1;;;15911:47:13;;426:2:18;15911:47:13;;;408:21:18;465:2;445:18;;;438:30;504:32;484:18;;;477:60;554:18;;15911:47:13;;;;;;;;;15785:180;214:9529:14;;;;2565:202:0;;;;;;;;;;-1:-1:-1;2565:202:0;;;;;:::i;:::-;;:::i;:::-;;;1039:14:18;;1032:22;1014:41;;1002:2;987:18;2565:202:0;;;;;;;;5546:452:14;;;;;;;;;;-1:-1:-1;5546:452:14;;;;;:::i;:::-;;:::i;4349:326:13:-;;;;;;;;;;-1:-1:-1;4349:326:13;;;;;:::i;:::-;;:::i;8474:570:14:-;;;;;;;;;;-1:-1:-1;8474:570:14;;;;;:::i;:::-;;:::i;:::-;;;2137:25:18;;;2125:2;2110:18;8474:570:14;1991:177:18;3810:120:0;;;;;;;;;;-1:-1:-1;3810:120:0;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;9471:270:14;;;;;;;;;;-1:-1:-1;9471:270:14;;;;;:::i;:::-;;:::i;4841:699::-;;;;;;;;;;-1:-1:-1;4841:699:14;;;;;:::i;:::-;;:::i;6004:700::-;;;;;;:::i;:::-;;:::i;4226:136:0:-;;;;;;;;;;-1:-1:-1;4226:136:0;;;;;:::i;:::-;;:::i;11621:1201:13:-;;;;;;;;;;-1:-1:-1;11621:1201:13;;;;;:::i;:::-;;:::i;947:41::-;;;;;;;;;;;;;;;;5328:245:0;;;;;;;;;;-1:-1:-1;5328:245:0;;;;;:::i;:::-;;:::i;10562:822:13:-;;;;;;;;;;-1:-1:-1;10562:822:13;;;;;:::i;:::-;;:::i;13990:1333::-;;;;;;:::i;:::-;;:::i;9192:1268::-;;;;;;;;;;-1:-1:-1;9192:1268:13;;;;;:::i;:::-;;:::i;927:1213:14:-;;;;;;:::i;:::-;;:::i;15435:247:13:-;;;;;;;;;;-1:-1:-1;15435:247:13;;;;;:::i;:::-;;:::i;3557:293::-;;;;;;;;;;-1:-1:-1;3557:293:13;;;;;:::i;:::-;;:::i;4323:353:14:-;;;;;;;;;;-1:-1:-1;4323:353:14;;;;;:::i;:::-;;:::i;3947:287:13:-;;;;;;;;;;-1:-1:-1;3947:287:13;;;;;:::i;:::-;;:::i;3996:321:14:-;;;;;;;;;;-1:-1:-1;3996:321:14;;;;;:::i;:::-;;:::i;3851:139::-;;;;;;;;;;-1:-1:-1;3851:139:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;674:60:13:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;674:60:13;;9193:272:14;;;;;;;;;;-1:-1:-1;9193:272:14;;;;;:::i;:::-;;:::i;9054:129::-;;;;;;;;;;-1:-1:-1;9054:129:14;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;;;;;-1:-1:-1;2854:136:0;;;;;:::i;:::-;;:::i;6710:466:14:-;;;;;;;;;;-1:-1:-1;6710:466:14;;;;;:::i;:::-;;:::i;5060:256:13:-;;;;;;;;;;-1:-1:-1;5060:256:13;;;;;:::i;:::-;;:::i;2187:49:0:-;;;;;;;;;;-1:-1:-1;2187:49:0;2232:4;2187:49;;12908:125:13;;;;;;;;;;-1:-1:-1;12908:125:13;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13008:18:13;;;;:8;:18;;;;;;;;;13001:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13001:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12908:125;;;;;;;7513:13:18;;7495:32;;7587:4;7575:17;;;7569:24;-1:-1:-1;;;;;7565:50:18;7543:20;;;7536:80;7672:4;7660:17;;;7654:24;7632:20;;;7625:54;7735:4;7723:17;;;7717:24;7695:20;;;7688:54;7798:4;7786:17;;;7780:24;7758:20;;;7751:54;7603:3;7863:17;;;7857:24;7850:32;7843:40;7821:20;;;7814:70;7954:4;7942:17;;;7936:24;7929:32;7922:40;7900:20;;;7893:70;8019:4;8007:17;;;8001:24;7979:20;;;7972:54;;;;7482:3;7467:19;;7300:732;7893:575:14;;;;;;;;;;-1:-1:-1;7893:575:14;;;;;:::i;:::-;;:::i;2221:1624::-;;;;;;:::i;:::-;;:::i;13338:348:13:-;;;;;;;;;;-1:-1:-1;13338:348:13;;;;;:::i;:::-;;:::i;6677:2082::-;;;;;;:::i;:::-;;:::i;4747:240::-;;;;;;;;;;-1:-1:-1;4747:240:13;;;;;:::i;:::-;;:::i;13118:128::-;;;;;;;;;;-1:-1:-1;13118:128:13;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13223:16:13;;;;:6;:16;;;;;;;;;13216:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:128;;;;;;;9176:4:18;9218:3;9207:9;9203:19;9195:27;;9255:6;9249:13;9238:9;9231:32;9319:4;9311:6;9307:17;9301:24;9294:4;9283:9;9279:20;9272:54;9396:4;9388:6;9384:17;9378:24;9371:32;9364:40;9357:4;9346:9;9342:20;9335:70;9461:4;9453:6;9449:17;9443:24;9436:4;9425:9;9421:20;9414:54;9524:4;9516:6;9512:17;9506:24;9499:4;9488:9;9484:20;9477:54;9024:513;;;;;4642:138:0;;;;;;;;;;-1:-1:-1;4642:138:0;;;;;:::i;:::-;;:::i;775:28:13:-;;;;;;;;;;-1:-1:-1;775:28:13;;;;-1:-1:-1;;;;;775:28:13;;;;;;-1:-1:-1;;;;;9706:32:18;;;9688:51;;9676:2;9661:18;775:28:13;9542:203:18;7186:503:14;;;;;;;;;;-1:-1:-1;7186:503:14;;;;;:::i;:::-;;:::i;854:27:13:-;;;;;;;;;;-1:-1:-1;854:27:13;;;;-1:-1:-1;;;;;854:27:13;;;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:8;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;5546:452:14:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5712:21:14::1;5736:18:::0;;;:8:::1;:18;::::0;;;;;;;5793:6:::1;:16:::0;;;;;;5827:15;;:27;::::1;5819:61;;;;-1:-1:-1::0;;;5819:61:14::1;;;;;;;:::i;:::-;5890:15;;:27:::0;;;::::1;;-1:-1:-1::0;;5890:27:14;;::::1;;::::0;;5927:16:::1;;:28:::0;;5965:26;::::1;;5927:28:::0;::::1;;5890:27;5927:28;5965:26:::0;;;-1:-1:-1;;5965:26:14;;;;;;;;;;::::1;::::0;;;-1:-1:-1;;5546:452:14:o;4349:326:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;4472:1:13::1;4457:12;:16;4449:52;;;::::0;-1:-1:-1;;;4449:52:13;;10541:2:18;4449:52:13::1;::::0;::::1;10523:21:18::0;10580:2;10560:18;;;10553:30;10619:25;10599:18;;;10592:53;10662:18;;4449:52:13::1;10339:347:18::0;4449:52:13::1;4531:17;::::0;4578:21:::1;:12:::0;4593:6:::1;4578:21;:::i;:::-;4558:17;:41:::0;;;4614:54:::1;::::0;;11170:25:18;;;11226:2;11211:18;;11204:34;;;;4614:54:13::1;::::0;11143:18:18;4614:54:13::1;;;;;;;4439:236;4349:326:::0;;:::o;8474:570:14:-;8608:7;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;8589:8:14;;5432:27:13::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;8627:26:14::2;8656:16:::0;;;:6:::2;:16;::::0;;;;;;;8706:8:::2;:18:::0;;;;;;8742:15:::2;::::0;::::2;::::0;::::2;;8734:44;;;::::0;-1:-1:-1;;;8734:44:14;;11797:2:18;8734:44:14::2;::::0;::::2;11779:21:18::0;11836:2;11816:18;;;11809:30;-1:-1:-1;;;11855:18:18;;;11848:46;11911:18;;8734:44:14::2;11595:340:18::0;8734:44:14::2;8788:15;::::0;::::2;:23:::0;;-1:-1:-1;;8788:23:14::2;::::0;;8821:16:::2;::::0;::::2;:23:::0;;-1:-1:-1;;8854:23:14;8788::::2;8854::::0;;;8887:5:::2;::::0;-1:-1:-1;8914:12:14;;::::2;::::0;8929;;::::2;::::0;8887:55:::2;::::0;-1:-1:-1;;;8887:55:14;;-1:-1:-1;;;;;8914:12:14;;::::2;8887:55;::::0;::::2;12130:51:18::0;12197:18;;;12190:34;;;;8887:5:14;::::2;::::0;:18:::2;::::0;12103::18;;8887:55:14::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;8981:12:14::2;::::0;;::::2;::::0;8995;;::::2;::::0;8957:51:::2;::::0;2137:25:18;;;-1:-1:-1;;;;;8981:12:14;;::::2;::::0;8971:8;;8957:51:::2;::::0;2125:2:18;2110:18;8957:51:14::2;;;;;;;-1:-1:-1::0;9025:12:14::2;;::::0;;8474:570;-1:-1:-1;;;;8474:570:14:o;9471:270::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;9582:8:14;;5432:27:13::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;9602:21:14::2;9626:18:::0;;;:8:::2;:18;::::0;;;;;;;9654:15;;::::2;:23:::0;;-1:-1:-1;;9654:23:14::2;::::0;;-1:-1:-1;9718:12:14;::::2;::::0;9692:42;;2137:25:18;;;9626:18:14;;-1:-1:-1;;;;;9718:12:14;;::::2;::::0;9626:18;;9692:42:::2;::::0;2110:18:18;9692:42:14::2;;;;;;;;9592:149;2490:1:0::1;9471:270:14::0;;:::o;4841:699::-;5432:18:13;;;;:8;:18;;;;;;;;:27;;4951:8:14;;5432:27:13;;5424:57;;;;-1:-1:-1;;;5424:57:13;;;;;;;:::i;:::-;4971:21:14::1;4995:18:::0;;;:8:::1;:18;::::0;;;;5041:17:::1;::::0;::::1;::::0;5031:27;::::1;;5023:65;;;::::0;-1:-1:-1;;;5023:65:14;;12627:2:18;5023:65:14::1;::::0;::::1;12609:21:18::0;12666:2;12646:18;;;12639:30;-1:-1:-1;;;12685:18:18;;;12678:55;12750:18;;5023:65:14::1;12425:349:18::0;5023:65:14::1;5107:16;::::0;::::1;::::0;::::1;::::0;::::1;;;5106:17;5098:52;;;;-1:-1:-1::0;;;5098:52:14::1;;;;;;;:::i;:::-;5186:6;:13;;;5168:15;:31;5160:58;;;;-1:-1:-1::0;;;5160:58:14::1;;;;;;;:::i;:::-;5256:219;;;;;;;;5293:8;5256:219;;;;5323:6;5256:219;;;;5354:4;5256:219;;;;;;5383:15;5256:219;;;;5447:17;;5429:15;:35;;;;:::i;:::-;5256:219:::0;;5237:16:::1;::::0;;;:6:::1;:16;::::0;;;;;;;;:238;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;5237:238:14::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5512:12;;::::1;::::0;5491:42;;2137:25:18;;;-1:-1:-1;;;;;5512:12:14;;::::1;::::0;5237:16;;5491:42:::1;::::0;2110:18:18;5491:42:14::1;1991:177:18::0;6004:700:14;5432:18:13;;;;:8;:18;;;;;;;;:27;;6153:8:14;;5432:27:13;;5424:57;;;;-1:-1:-1;;;5424:57:13;;;;;;;:::i;:::-;6173:21:14::1;6197:18:::0;;;:8:::1;:18;::::0;;;;6233:12:::1;::::0;::::1;::::0;-1:-1:-1;;;;;6233:12:14::1;6249:10;6233:26;6225:59;;;;-1:-1:-1::0;;;6225:59:14::1;;;;;;;:::i;:::-;6315:7;6302:9;:20;6294:57;;;;-1:-1:-1::0;;;6294:57:14::1;;;;;;;:::i;:::-;6370:16;::::0;::::1;::::0;::::1;::::0;::::1;;;6369:17;6361:52;;;;-1:-1:-1::0;;;6361:52:14::1;;;;;;;:::i;:::-;6423:14;::::0;::::1;:24:::0;;;6473:13:::1;::::0;::::1;::::0;:24:::1;::::0;6489:8;;6473:24:::1;:::i;:::-;6457:13;::::0;::::1;:40:::0;6531:5:::1;::::0;6523:39:::1;::::0;6508:9:::1;::::0;-1:-1:-1;;;;;6531:5:14::1;::::0;6550:7;;6508:9;6523:39;6508:9;6523:39;6550:7;6531:5;6523:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6507:55;;;6580:4;6572:49;;;;-1:-1:-1::0;;;6572:49:14::1;;;;;;;:::i;:::-;6660:12;::::0;::::1;::::0;6683:13:::1;::::0;::::1;::::0;6636:61:::1;::::0;-1:-1:-1;;;;;6660:12:14;;::::1;::::0;6650:8;;6636:61:::1;::::0;::::1;::::0;6674:7;11170:25:18;;11226:2;11211:18;;11204:34;11158:2;11143:18;;10996:248;6636:61:14::1;;;;;;;;6163:541;;6004:700:::0;;;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;11621:1201:13:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;11785:8;;5432:27:::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;617:1:::2;3282:7;;:19:::0;3274:63:::2;;;;-1:-1:-1::0;;;3274:63:13::2;;;;;;;:::i;:::-;617:1;3347:7;:18:::0;11818:21:::3;11842:18:::0;;;:8:::3;:18;::::0;;;;;;;11879:16;;::::3;::::0;::::3;::::0;::::3;;;11878:17;11870:52;;;;-1:-1:-1::0;;;11870:52:13::3;;;;;;;:::i;:::-;11958:6;:13;;;11940:15;:31;11932:58;;;;-1:-1:-1::0;;;11932:58:13::3;;;;;;;:::i;:::-;12129:117;::::0;;::::3;::::0;::::3;15211:19:18::0;;;15246:12;;;15239:28;;;12219:13:13::3;15283:12:18::0;;;15276:28;12084:19:13::3;::::0;15320:12:18;;12129:117:13::3;;;;;;;;;;;;12106:150;;;;;;12084:172;;12311:39;12327:11;12340:9;12311:15;:39::i;:::-;12303:69;;;;-1:-1:-1::0;;;12303:69:13::3;;;;;;;:::i;:::-;12440:20:::0;;::::3;::::0;;::::3;::::0;;;;12425:36:::3;::::0;;;:14:::3;:36:::0;;;;;;;;:43;;12464:4:::3;-1:-1:-1::0;;12425:43:13;;::::3;::::0;::::3;::::0;;;12549:15:::3;::::0;::::3;:23:::0;;;;::::3;::::0;;12628:5:::3;::::0;12653:12;;::::3;::::0;12628:53;;-1:-1:-1;;;12628:53:13;;-1:-1:-1;;;;;12653:12:13;;::::3;12628:53;::::0;::::3;12130:51:18::0;12197:18;;;12190:34;;;12628:5:13;::::3;::::0;:16:::3;::::0;12103:18:18;;12628:53:13::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;;;12723:12:13::3;::::0;::::3;::::0;12697:53:::3;::::0;2137:25:18;;;-1:-1:-1;;;;;12723:12:13;;::::3;::::0;12713:8;;12697:53:::3;::::0;2125:2:18;2110:18;12697:53:13::3;;;;;;;12788:12;::::0;::::3;::::0;12765:50:::3;::::0;2137:25:18;;;-1:-1:-1;;;;;12788:12:13;;::::3;::::0;12778:8;;12765:50:::3;::::0;2125:2:18;2110:18;12765:50:13::3;;;;;;;-1:-1:-1::0;;574:1:13::2;3386:22:::0;;-1:-1:-1;;;;;11621:1201:13:o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:3;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;10562:822:13:-;10736:7;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;10686:8;;5432:27:::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;617:1:::2;3282:7;;:19:::0;3274:63:::2;;;;-1:-1:-1::0;;;3274:63:13::2;;;;;;;:::i;:::-;617:1;3347:7;:18:::0;;;10760:26:::3;10789:16:::0;;;:6:::3;:16;::::0;;;;;;;10839:8:::3;:18:::0;;;;;;10876:15;;::::3;::::0;10789:16;;10839:18;10876:15:::3;;10868:44;;;::::0;-1:-1:-1;;;10868:44:13;;11797:2:18;10868:44:13::3;::::0;::::3;11779:21:18::0;11836:2;11816:18;;;11809:30;-1:-1:-1;;;11855:18:18;;;11848:46;11911:18;;10868:44:13::3;11595:340:18::0;10868:44:13::3;10949:5;:21;;;10930:15;:40;;10922:74;;;::::0;-1:-1:-1;;;10922:74:13;;15891:2:18;10922:74:13::3;::::0;::::3;15873:21:18::0;15930:2;15910:18;;;15903:30;-1:-1:-1;;;15949:18:18;;;15942:51;16010:18;;10922:74:13::3;15689:345:18::0;10922:74:13::3;11068:15;::::0;::::3;:23:::0;;-1:-1:-1;;11068:23:13::3;::::0;;11101:16:::3;::::0;::::3;:23:::0;;-1:-1:-1;;11134:23:13;11068::::3;11134::::0;;;11226:5:::3;::::0;-1:-1:-1;11253:12:13;;::::3;::::0;11268;;::::3;::::0;11226:55:::3;::::0;-1:-1:-1;;;11226:55:13;;-1:-1:-1;;;;;11253:12:13;;::::3;11226:55;::::0;::::3;12130:51:18::0;12197:18;;;12190:34;;;;11226:5:13;::::3;::::0;:18:::3;::::0;12103::18;;11226:55:13::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;;;11321:12:13::3;::::0;;::::3;::::0;11335;;::::3;::::0;11297:51:::3;::::0;2137:25:18;;;-1:-1:-1;;;;;11321:12:13;;::::3;::::0;11311:8;;11297:51:::3;::::0;2125:2:18;2110:18;11297:51:13::3;;;;;;;-1:-1:-1::0;11365:12:13::3;;::::0;;-1:-1:-1;;;574:1:13::2;3386:22:::0;;10562:822;;-1:-1:-1;10562:822:13:o;13990:1333::-;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;5432::::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;14176:8;;5432:27:::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;14196:21:::2;14220:18:::0;;;:8:::2;:18;::::0;;;;14256:12:::2;::::0;::::2;::::0;-1:-1:-1;;;;;14256:12:13::2;14272:10;14256:26;14248:59;;;;-1:-1:-1::0;;;14248:59:13::2;;;;;;;:::i;:::-;14338:7;14325:9;:20;14317:57;;;;-1:-1:-1::0;;;14317:57:13::2;;;;;;;:::i;:::-;14393:16;::::0;::::2;::::0;::::2;::::0;::::2;;;14392:17;14384:52;;;;-1:-1:-1::0;;;14384:52:13::2;;;;;;;:::i;:::-;14576:138;::::0;;::::2;::::0;::::2;16252:19:18::0;;;16287:12;;;16280:28;;;16324:12;;;16317:28;;;14687:13:13::2;16361:12:18::0;;;16354:28;14531:19:13::2;::::0;16398:13:18;;14576:138:13::2;;;;;;;;;;;;14553:171;;;;;;14531:193;;14779:39;14795:11;14808:9;14779:15;:39::i;:::-;14771:69;;;;-1:-1:-1::0;;;14771:69:13::2;;;;;;;:::i;:::-;14908:20:::0;;::::2;::::0;;::::2;::::0;;;;14893:36:::2;::::0;;;:14:::2;:36:::0;;;;;;:43;;-1:-1:-1;;14893:43:13::2;14932:4;14893:43;::::0;;14980:14:::2;::::0;::::2;:24:::0;;;15030:13:::2;::::0;::::2;::::0;:24:::2;::::0;15046:8;;15030:24:::2;:::i;:::-;15014:13;::::0;::::2;:40:::0;15141:5:::2;::::0;15133:39:::2;::::0;15118:9:::2;::::0;-1:-1:-1;;;;;15141:5:13::2;::::0;15160:7;;15118:9;15133:39;15118:9;15133:39;15160:7;15141:5;15133:39:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15117:55;;;15190:4;15182:49;;;;-1:-1:-1::0;;;15182:49:13::2;;;;;;;:::i;:::-;15279:12;::::0;::::2;::::0;15302:13:::2;::::0;::::2;::::0;15255:61:::2;::::0;-1:-1:-1;;;;;15279:12:13;;::::2;::::0;15269:8;;15255:61:::2;::::0;::::2;::::0;15293:7;11170:25:18;;11226:2;11211:18;;11204:34;11158:2;11143:18;;10996:248;15255:61:13::2;;;;;;;;-1:-1:-1::0;;574:1:13;3386:22;;-1:-1:-1;;;;;;13990:1333:13:o;9192:1268::-;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;5432::::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;9339:8;;5432:27:::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;9359:21:::2;9383:18:::0;;;:8:::2;:18;::::0;;;;9419:12:::2;::::0;::::2;::::0;-1:-1:-1;;;;;9419:12:13::2;9435:10;9419:26;9411:59;;;;-1:-1:-1::0;;;9411:59:13::2;;;;;;;:::i;:::-;9498:6;:17;;;9488:6;:27;;9480:65;;;::::0;-1:-1:-1;;;9480:65:13;;12627:2:18;9480:65:13::2;::::0;::::2;12609:21:18::0;12666:2;12646:18;;;12639:30;-1:-1:-1;;;12685:18:18;;;12678:55;12750:18;;9480:65:13::2;12425:349:18::0;9480:65:13::2;9564:16;::::0;::::2;::::0;::::2;::::0;::::2;;;9563:17;9555:52;;;;-1:-1:-1::0;;;9555:52:13::2;;;;;;;:::i;:::-;9643:6;:13;;;9625:15;:31;9617:58;;;;-1:-1:-1::0;;;9617:58:13::2;;;;;;;:::i;:::-;9813:111;::::0;;::::2;::::0;::::2;15211:19:18::0;;;15246:12;;;15239:28;;;9897:13:13::2;15283:12:18::0;;;15276:28;9768:19:13::2;::::0;15320:12:18;;9813:111:13::2;;;;;;;;;;;;9790:144;;;;;;9768:166;;9989:39;10005:11;10018:9;9989:15;:39::i;:::-;9981:69;;;;-1:-1:-1::0;;;9981:69:13::2;;;;;;;:::i;:::-;10118:20:::0;;::::2;::::0;;::::2;::::0;;;;10103:36:::2;::::0;;;:14:::2;:36:::0;;;;;;;:43;;-1:-1:-1;;10103:43:13::2;10142:4;10103:43:::0;;::::2;::::0;;;10176:219;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;10303:15:::2;10176:219:::0;;;;;;10367:17:::2;::::0;10176:219;;;;10349:35:::2;::::0;10367:17;10349:35:::2;:::i;:::-;10176:219:::0;;10157:16:::2;::::0;;;:6:::2;:16;::::0;;;;;;;;:238;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;10157:238:13::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;10432:12;;::::2;::::0;10411:42;;2137:25:18;;;-1:-1:-1;;;;;10432:12:13;;::::2;::::0;10157:16;;10411:42:::2;::::0;2110:18:18;10411:42:13::2;;;;;;;-1:-1:-1::0;;574:1:13;3386:22;;-1:-1:-1;;;;9192:1268:13:o;927:1213:14:-;-1:-1:-1;;;;;1108:19:14;;1100:53;;;;-1:-1:-1;;;1100:53:14;;;;;;;:::i;:::-;1181:1;1171:7;:11;1163:48;;;;-1:-1:-1;;;1163:48:14;;;;;;;:::i;:::-;1242:1;1229:10;:14;1221:55;;;;-1:-1:-1;;;1221:55:14;;;;;;;:::i;:::-;1305:1;1294:8;:12;1286:50;;;;-1:-1:-1;;;1286:50:14;;;;;;;:::i;:::-;1367:7;1354:9;:20;1346:57;;;;-1:-1:-1;;;1346:57:14;;;;;;;:::i;:::-;1422:16;1441:40;1458:5;1465:15;1441:16;:40::i;:::-;1500:18;;;;:8;:18;;;;;;;;:27;;1422:59;;-1:-1:-1;1500:27:14;;1499:28;1491:62;;;;-1:-1:-1;;;1491:62:14;;;;;;;:::i;:::-;1585:288;;;;;;;;1616:8;1585:288;;;;1645:5;-1:-1:-1;;;;;1585:288:14;;;;;1673:7;1585:288;;;;1706:10;1585:288;;;;1756:8;1738:15;:26;;;;:::i;:::-;1585:288;;1788:4;1585:288;;;;;;;;;;;;;;;1847:15;1585:288;;;;;1564:18;;;:8;:18;;;;;;;:309;;;;;;;;;;;;;-1:-1:-1;;;;;1564:309:14;;;-1:-1:-1;;;;;;1564:309:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1564:309:14;;;;;;;-1:-1:-1;;1564:309:14;;;;;;;;;;;;;;;;;;;;1884:28;1573:8;1884:18;:28::i;:::-;1946:5;;1938:39;;1923:9;;-1:-1:-1;;;;;1946:5:14;;1965:7;;1923:9;1938:39;1923:9;1938:39;1965:7;1946:5;1938:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1922:55;;;1995:4;1987:49;;;;-1:-1:-1;;;1987:49:14;;;;;;;:::i;:::-;-1:-1:-1;;;;;2052:81:14;;2068:8;2052:81;2085:7;2094:10;2106:26;2124:8;2106:15;:26;:::i;:::-;2052:81;;;18388:25:18;;;18444:2;18429:18;;18422:34;;;;18472:18;;;18465:34;18376:2;18361:18;2052:81:14;18186:319:18;15435:247:13;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;617:1:13::1;3282:7;;:19:::0;3274:63:::1;;;;-1:-1:-1::0;;;3274:63:13::1;;;;;;;:::i;:::-;617:1;3347:7;:18:::0;15627:5:::2;::::0;:48:::2;::::0;-1:-1:-1;;;15627:48:13;;15655:10:::2;15627:48;::::0;::::2;12130:51:18::0;12197:18;;;12190:34;;;-1:-1:-1;;;;;15627:5:13;;::::2;::::0;:19:::2;::::0;12103:18:18;;15627:48:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;574:1:13::1;3386:22:::0;;-1:-1:-1;;;;15435:247:13:o;3557:293::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3658:23:13;::::1;3650:58;;;::::0;-1:-1:-1;;;3650:58:13;;18712:2:18;3650:58:13::1;::::0;::::1;18694:21:18::0;18751:2;18731:18;;;18724:30;-1:-1:-1;;;18770:18:18;;;18763:52;18832:18;;3650:58:13::1;18510:346:18::0;3650:58:13::1;3738:13;::::0;;-1:-1:-1;;;;;3761:25:13;;::::1;-1:-1:-1::0;;;;;;3761:25:13;::::1;::::0;::::1;::::0;;;3801:42:::1;::::0;3738:13;::::1;::::0;3761:25;3738:13;;3801:42:::1;::::0;3718:17:::1;::::0;3801:42:::1;3640:210;3557:293:::0;;:::o;4323:353:14:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;4425:21:14::1;4449:18:::0;;;:8:::1;:18;::::0;;;;;;;4485:15;;::::1;::::0;::::1;;4477:45;;;;-1:-1:-1::0;;;4477:45:14::1;;;;;;;:::i;:::-;4552:13;4536:6;:13;;;:29;4532:138;;;4598:13;4581:6;:13;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4532:138:14::1;::::0;-1:-1:-1;4532:138:14::1;;4658:1;4642:13;::::0;::::1;:17:::0;4415:261:::1;4323:353:::0;;;:::o;3947:287:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4047:22:13;::::1;4039:56;;;::::0;-1:-1:-1;;;4039:56:13;;19196:2:18;4039:56:13::1;::::0;::::1;19178:21:18::0;19235:2;19215:18;;;19208:30;-1:-1:-1;;;19254:18:18;;;19247:51;19315:18;;4039:56:13::1;18994:345:18::0;4039:56:13::1;4132:5;::::0;;-1:-1:-1;;;;;4148:32:13;;::::1;-1:-1:-1::0;;;;;;4148:32:13;::::1;::::0;::::1;::::0;;;4195::::1;::::0;4132:5;::::1;::::0;4148:32;4132:5;;4195:32:::1;::::0;4105:16:::1;::::0;4195:32:::1;4029:205;3947:287:::0;;:::o;3996:321:14:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;4081:21:14::1;4105:18:::0;;;:8:::1;:18;::::0;;;;;;;4141:15;;::::1;::::0;::::1;;4133:45;;;;-1:-1:-1::0;;;4133:45:14::1;;;;;;;:::i;:::-;4189:15;::::0;::::1;:23:::0;;-1:-1:-1;;4189:23:14::1;::::0;;4238:19:::1;4189:23:::0;4238:15:::1;:19;:::i;:::-;4222:13;::::0;::::1;:35:::0;4297:12:::1;::::0;::::1;::::0;4273:37:::1;::::0;-1:-1:-1;;;;;4297:12:14;;::::1;::::0;4287:8;;4273:37:::1;::::0;4297:12:::1;::::0;4273:37:::1;4071:246;3996:321:::0;;:::o;3851:139::-;-1:-1:-1;;;;;;;;;;;;;;;;;3959:24:14;;;;:14;:24;;;;;;;3952:31;;;;;;;;;;;;3959:24;;3952:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3952:31:14;;;-1:-1:-1;;3952:31:14;;;;;;;;;;;;;;;;3851:139;-1:-1:-1;;3851:139:14:o;9193:272::-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;9333:6:14::1;9308:21;:31;;9300:64;;;::::0;-1:-1:-1;;;9300:64:14;;19931:2:18;9300:64:14::1;::::0;::::1;19913:21:18::0;19970:2;19950:18;;;19943:30;-1:-1:-1;;;19989:18:18;;;19982:50;20049:18;;9300:64:14::1;19729:344:18::0;9300:64:14::1;9375:9;9390:2;-1:-1:-1::0;;;;;9390:7:14::1;9405:6;9390:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9374:42;;;9434:4;9426:32;;;::::0;-1:-1:-1;;;9426:32:14;;20280:2:18;9426:32:14::1;::::0;::::1;20262:21:18::0;20319:2;20299:18;;;20292:30;-1:-1:-1;;;20338:18:18;;;20331:45;20393:18;;9426:32:14::1;20078:339:18::0;9054:129:14;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;-1:-1:-1;9145:17:14::1;:31:::0;;-1:-1:-1;;;;;;9145:31:14::1;-1:-1:-1::0;;;;;9145:31:14;;;::::1;::::0;;;::::1;::::0;;9054:129::o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;6710:466:14:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;6843:21:14::1;6867:18:::0;;;:8:::1;:18;::::0;;;;6903:15;;:27;::::1;6895:61;;;;-1:-1:-1::0;;;6895:61:14::1;;;;;;;:::i;:::-;6966:13;::::0;::::1;:31:::0;;;7030:15:::1;7011:34:::0;::::1;::::0;::::1;::::0;:53:::1;;-1:-1:-1::0;7049:15:14::1;::::0;::::1;::::0;::::1;;7011:53;7007:163;;;7080:15;::::0;::::1;:23:::0;;-1:-1:-1;;7080:23:14::1;::::0;;;7146:12;::::1;::::0;7122:37:::1;::::0;-1:-1:-1;;;;;7146:12:14;;::::1;::::0;7136:8;;7122:37:::1;::::0;7098:5:::1;::::0;7122:37:::1;6833:343;6710:466:::0;;;:::o;5060:256:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;5164:19:13;::::1;5156:53;;;::::0;-1:-1:-1;;;5156:53:13;;20624:2:18;5156:53:13::1;::::0;::::1;20606:21:18::0;20663:2;20643:18;;;20636:30;-1:-1:-1;;;20682:18:18;;;20675:51;20743:18;;5156:53:13::1;20422:345:18::0;5156:53:13::1;5236:10;-1:-1:-1::0;;;;;5227:19:13;::::1;::::0;5219:50:::1;;;::::0;-1:-1:-1;;;5219:50:13;;20974:2:18;5219:50:13::1;::::0;::::1;20956:21:18::0;21013:2;20993:18;;;20986:30;-1:-1:-1;;;21032:18:18;;;21025:48;21090:18;;5219:50:13::1;20772:342:18::0;5219:50:13::1;5279:30;-1:-1:-1::0;;;;;;;;;;;5303:5:13::1;5279:11;:30::i;7893:575:14:-:0;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;8038:21:14::1;8062:18:::0;;;:8:::1;:18;::::0;;;;8098:15;;:27;::::1;8090:61;;;;-1:-1:-1::0;;;8090:61:14::1;;;;;;;:::i;:::-;8180:224;;;;;;;;8217:8;8180:224;;;;8247:6;8180:224;;;;8278:9;8180:224;;;;;;8312:15;8180:224;;;;8376:17;;8358:15;:35;;;;:::i;:::-;8180:224:::0;;8161:16:::1;::::0;;;:6:::1;:16;::::0;;;;;;;;:243;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;8161:243:14::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;8440:12;;::::1;::::0;8419:42;;2137:25:18;;;-1:-1:-1;;;;;8440:12:14;;::::1;::::0;8161:16;;8419:42:::1;::::0;2110:18:18;8419:42:14::1;;;;;;;8028:440;7893:575:::0;;;;:::o;2221:1624::-;617:1:13;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;-1:-1:-1;;;;;2444:19:14;::::1;2436:53;;;;-1:-1:-1::0;;;2436:53:14::1;;;;;;;:::i;:::-;2517:1;2507:7;:11;2499:48;;;;-1:-1:-1::0;;;2499:48:14::1;;;;;;;:::i;:::-;2578:1;2565:10;:14;2557:55;;;;-1:-1:-1::0;;;2557:55:14::1;;;;;;;:::i;:::-;2641:1;2630:8;:12;2622:50;;;;-1:-1:-1::0;;;2622:50:14::1;;;;;;;:::i;:::-;2703:7;2690:9;:20;2682:57;;;;-1:-1:-1::0;;;2682:57:14::1;;;;;;;:::i;:::-;2758:19;2837:5;2860:7;2885:10;2913:8;2939:13;2803:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2780:196;;;;;;2758:218;;2994:39;3010:11;3023:9;2994:15;:39::i;:::-;2986:69;;;;-1:-1:-1::0;;;2986:69:14::1;;;;;;;:::i;:::-;3080:20:::0;;::::1;::::0;;::::1;::::0;;;;3065:36:::1;::::0;;;:14:::1;:36:::0;;;;;;:43;;-1:-1:-1;;3065:43:14::1;3104:4;3065:43;::::0;;3146:40:::1;3163:5:::0;3170:15:::1;3146:16;:40::i;:::-;3205:18;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;3127:59;;-1:-1:-1;3205:27:14::1;;3204:28;3196:62;;;;-1:-1:-1::0;;;3196:62:14::1;;;;;;;:::i;:::-;3290:288;;;;;;;;3321:8;3290:288;;;;3350:5;-1:-1:-1::0;;;;;3290:288:14::1;;;;;3378:7;3290:288;;;;3411:10;3290:288;;;;3461:8;3443:15;:26;;;;:::i;:::-;3290:288:::0;;3493:4:::1;3290:288;::::0;;::::1;::::0;;;;;;;;;;;3552:15:::1;3290:288:::0;;;;;3269:18;;;:8:::1;:18:::0;;;;;;;:309;;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;3269:309:14;;::::1;-1:-1:-1::0;;;;;;3269:309:14;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;;;;-1:-1:-1::0;;3269:309:14;::::1;;::::0;;;;-1:-1:-1;;3269:309:14;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;3589:28:::1;3278:8:::0;3589:18:::1;:28::i;:::-;3651:5;::::0;3643:39:::1;::::0;3628:9:::1;::::0;-1:-1:-1;;;;;3651:5:14::1;::::0;3670:7;;3628:9;3643:39;3628:9;3643:39;3670:7;3651:5;3643:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3627:55;;;3700:4;3692:49;;;;-1:-1:-1::0;;;3692:49:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3757:81:14;::::1;3773:8:::0;3757:81:::1;3790:7:::0;3799:10;3811:26:::1;3829:8:::0;3811:15:::1;:26;:::i;:::-;3757:81;::::0;;18388:25:18;;;18444:2;18429:18;;18422:34;;;;18472:18;;;18465:34;18376:2;18361:18;3757:81:14::1;18186:319:18::0;13338:348:13;13402:21;13426:18;;;:8;:18;;;;;;;;13462:15;;;;;;13454:45;;;;-1:-1:-1;;;13454:45:13;;;;;;;:::i;:::-;13536:6;:13;;;13517:15;:32;;13509:67;;;;-1:-1:-1;;;13509:67:13;;21817:2:18;13509:67:13;;;21799:21:18;21856:2;21836:18;;;21829:30;-1:-1:-1;;;21875:18:18;;;21868:52;21937:18;;13509:67:13;21615:346:18;13509:67:13;13595:15;;;:23;;-1:-1:-1;;13595:23:13;;;;13666:12;;;13642:37;;-1:-1:-1;;;;;13666:12:13;;;;13656:8;;13642:37;;13613:5;;13642:37;13392:294;13338:348;:::o;6677:2082::-;6886:7;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;-1:-1:-1;;;;;6915:19:13;::::1;6907:53;;;;-1:-1:-1::0;;;6907:53:13::1;;;;;;;:::i;:::-;6988:1;6978:7;:11;6970:48;;;;-1:-1:-1::0;;;6970:48:13::1;;;;;;;:::i;:::-;7049:1;7036:10;:14;7028:55;;;;-1:-1:-1::0;;;7028:55:13::1;;;;;;;:::i;:::-;7112:1;7101:8;:12;7093:50;;;;-1:-1:-1::0;;;7093:50:13::1;;;;;;;:::i;:::-;7174:7;7161:9;:20;7153:57;;;;-1:-1:-1::0;;;7153:57:13::1;;;;;;;:::i;:::-;7357:19;7436:5;7459:7;7484:10;7512:8;7538:13;7402:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7379:196;;;;;;7357:218;;7630:39;7646:11;7659:9;7630:15;:39::i;:::-;7622:69;;;;-1:-1:-1::0;;;7622:69:13::1;;;;;;;:::i;:::-;7759:20:::0;;::::1;::::0;;::::1;::::0;;;;7744:36:::1;::::0;;;:14:::1;:36:::0;;;;;;:43;;-1:-1:-1;;7744:43:13::1;7783:4;7744:43;::::0;;7864:40:::1;7881:5:::0;7888:15:::1;7864:16;:40::i;:::-;7923:18;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;7845:59;;-1:-1:-1;7923:27:13::1;;7922:28;7914:62;;;;-1:-1:-1::0;;;7914:62:13::1;;;;;;;:::i;:::-;8050:288;;;;;;;;8081:8;8050:288;;;;8110:5;-1:-1:-1::0;;;;;8050:288:13::1;;;;;8138:7;8050:288;;;;8171:10;8050:288;;;;8221:8;8203:15;:26;;;;:::i;:::-;8050:288:::0;;8253:4:::1;8050:288;::::0;;::::1;::::0;;;;;;;;;;;8312:15:::1;8050:288:::0;;;;;8029:18;;;:8:::1;:18:::0;;;;;;;:309;;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;8029:309:13;;::::1;-1:-1:-1::0;;;;;;8029:309:13;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;;;;-1:-1:-1::0;;8029:309:13;::::1;;::::0;;;;-1:-1:-1;;8029:309:13;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;8399:28:::1;8038:8:::0;8399:18:::1;:28::i;:::-;8506:5;::::0;8498:39:::1;::::0;8483:9:::1;::::0;-1:-1:-1;;;;;8506:5:13::1;::::0;8525:7;;8483:9;8498:39;8483:9;8498:39;8525:7;8506:5;8498:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8482:55;;;8555:4;8547:49;;;;-1:-1:-1::0;;;8547:49:13::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8612:81:13;::::1;8628:8:::0;8612:81:::1;8645:7:::0;8654:10;8666:26:::1;8684:8:::0;8666:15:::1;:26;:::i;:::-;8612:81;::::0;;18388:25:18;;;18444:2;18429:18;;18422:34;;;;18472:18;;;18465:34;18376:2;18361:18;8612:81:13::1;;;;;;;-1:-1:-1::0;574:1:13;3386:22;;8719:8;6677:2082;-1:-1:-1;;;;;;;6677:2082:13:o;4747:240::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4853:22:13;::::1;4845:56;;;::::0;-1:-1:-1;;;4845:56:13;;20624:2:18;4845:56:13::1;::::0;::::1;20606:21:18::0;20663:2;20643:18;;;20636:30;-1:-1:-1;;;20682:18:18;;;20675:51;20743:18;;4845:56:13::1;20422:345:18::0;4845:56:13::1;4911:32;-1:-1:-1::0;;;;;;;;;;;4934:8:13::1;4911:10;:32::i;:::-;-1:-1:-1::0;4958:22:13::1;::::0;-1:-1:-1;;;;;4958:22:13;::::1;::::0;::::1;::::0;;;::::1;4747:240:::0;;:::o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;7186:503:14:-:0;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;7321:21:14::1;7345:18:::0;;;:8:::1;:18;::::0;;;;7381:15;;:27;::::1;7373:61;;;;-1:-1:-1::0;;;7373:61:14::1;;;;;;;:::i;:::-;7452:15;::::0;::::1;::::0;::::1;;7444:45;;;;-1:-1:-1::0;;;7444:45:14::1;;;;;;;:::i;:::-;7499:17;7538:25;:16:::0;7557:6:::1;7538:25;:::i;:::-;7519:45;::::0;:15:::1;:45;:::i;:::-;7499:65;;7595:6;:13;;;7582:9;:26;;7574:73;;;::::0;-1:-1:-1;;;7574:73:14;;22168:2:18;7574:73:14::1;::::0;::::1;22150:21:18::0;22207:2;22187:18;;;22180:30;22246:34;22226:18;;;22219:62;-1:-1:-1;;;22297:18:18;;;22290:32;22339:19;;7574:73:14::1;21966:398:18::0;7574:73:14::1;7657:13;::::0;;::::1;:25:::0;-1:-1:-1;;;7186:503:14:o;3199:103:0:-;3265:30;3276:4;735:10:3;3265::0;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;5925:396:13;6058:20;;;;;;;;;;6018:4;6043:36;;;:14;:36;;;;;;;;;6042:37;6034:72;;;;-1:-1:-1;;;6034:72:13;;22571:2:18;6034:72:13;;;22553:21:18;22610:2;22590:18;;;22583:30;-1:-1:-1;;;22629:18:18;;;22622:52;22691:18;;6034:72:13;22369:346:18;6034:72:13;1401:34:7;6116:28:13;1388:48:7;;;1497:4;1490:25;;;1595:4;1579:21;;;6219:46:13;1579:21:7;6255:9:13;6219:13;:46::i;:::-;6301:13;;-1:-1:-1;;;;;6301:13:13;;;6282:32;;;;5925:396;-1:-1:-1;;;;;5925:396:13:o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:3;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;5556:159:13;5674:33;;-1:-1:-1;;22897:2:18;22893:15;;;22889:53;5674:33:13;;;22877:66:18;22959:12;;;22952:28;;;5638:7:13;;22996:12:18;;5674:33:13;;;;;;;;;;;;5664:44;;;;;;5657:51;;5556:159;;;;:::o;628:202:14:-;729:94;;;;;;;;;;;;;;;-1:-1:-1;;;729:94:14;;;;;;808:4;729:94;;;;;;;;-1:-1:-1;702:24:14;;;:14;:24;;;;;;;:121;;:24;;:121;;:24;:121;:::i;:::-;-1:-1:-1;702:121:14;;;;;;;;;;;;-1:-1:-1;;702:121:14;;;;;;;;;;-1:-1:-1;628:202:14:o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;12148:32:18;;3565:47:0;;;12130:51:18;12197:18;;;12190:34;;;12103:18;;3565:47:0;11940:290:18;3515:108:0;3432:197;;:::o;3714:255:6:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:6;;3714:255;-1:-1:-1;;;;3714:255:6:o;2129:778::-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:6;;2823:1;;-1:-1:-1;2827:35:6;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:6;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:6;;;;;2137:25:18;;;2110:18;;7634:46:6;1991:177:18;7563:243:6;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:6;;;;;2137:25:18;;;2110:18;;7763:32:6;1991:177:18;5203:1551:6;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:6;;-1:-1:-1;6385:30:6;;-1:-1:-1;6417:1:6;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;25861:25:18;;;25934:4;25922:17;;25902:18;;;25895:45;;;;25956:18;;;25949:34;;;25999:18;;;25992:34;;;6541:24:6;;25833:19:18;;6541:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:6;;-1:-1:-1;;6541:24:6;;;-1:-1:-1;;;;;;;6579:20:6;;6575:113;;-1:-1:-1;6631:1:6;;-1:-1:-1;6635:29:6;;-1:-1:-1;6631:1:6;;-1:-1:-1;6615:62:6;;6575:113;6706:6;-1:-1:-1;6714:20:6;;-1:-1:-1;6714:20:6;;-1:-1:-1;5203:1551:6;;;;;;;;;:::o;583:286:18:-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;736:23;;-1:-1:-1;;;;;;788:32:18;;778:43;;768:71;;835:1;832;825:12;768:71;858:5;583:286;-1:-1:-1;;;583:286:18:o;1066:160::-;1131:20;;1187:13;;1180:21;1170:32;;1160:60;;1216:1;1213;1206:12;1160:60;1066:160;;;:::o;1231:385::-;1308:6;1316;1324;1332;1385:3;1373:9;1364:7;1360:23;1356:33;1353:53;;;1402:1;1399;1392:12;1353:53;1438:9;1425:23;1415:33;;1467:35;1498:2;1487:9;1483:18;1467:35;:::i;:::-;1457:45;;1521:35;1552:2;1541:9;1537:18;1521:35;:::i;:::-;1511:45;;1575:35;1606:2;1595:9;1591:18;1575:35;:::i;:::-;1565:45;;1231:385;;;;;;;:::o;1621:180::-;1680:6;1733:2;1721:9;1712:7;1708:23;1704:32;1701:52;;;1749:1;1746;1739:12;1701:52;-1:-1:-1;1772:23:18;;1621:180;-1:-1:-1;1621:180:18:o;2355:248::-;2423:6;2431;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;-1:-1:-1;;2523:23:18;;;2593:2;2578:18;;;2565:32;;-1:-1:-1;2355:248:18:o;2608:316::-;2685:6;2693;2701;2754:2;2742:9;2733:7;2729:23;2725:32;2722:52;;;2770:1;2767;2760:12;2722:52;-1:-1:-1;;2793:23:18;;;2863:2;2848:18;;2835:32;;-1:-1:-1;2914:2:18;2899:18;;;2886:32;;2608:316;-1:-1:-1;2608:316:18:o;2929:131::-;-1:-1:-1;;;;;3004:31:18;;2994:42;;2984:70;;3050:1;3047;3040:12;3065:315;3133:6;3141;3194:2;3182:9;3173:7;3169:23;3165:32;3162:52;;;3210:1;3207;3200:12;3162:52;3246:9;3233:23;3223:33;;3306:2;3295:9;3291:18;3278:32;3319:31;3344:5;3319:31;:::i;:::-;3369:5;3359:15;;;3065:315;;;;;:::o;3385:127::-;3446:10;3441:3;3437:20;3434:1;3427:31;3477:4;3474:1;3467:15;3501:4;3498:1;3491:15;3517:718;3559:5;3612:3;3605:4;3597:6;3593:17;3589:27;3579:55;;3630:1;3627;3620:12;3579:55;3666:6;3653:20;3692:18;3729:2;3725;3722:10;3719:36;;;3735:18;;:::i;:::-;3810:2;3804:9;3778:2;3864:13;;-1:-1:-1;;3860:22:18;;;3884:2;3856:31;3852:40;3840:53;;;3908:18;;;3928:22;;;3905:46;3902:72;;;3954:18;;:::i;:::-;3994:10;3990:2;3983:22;4029:2;4021:6;4014:18;4075:3;4068:4;4063:2;4055:6;4051:15;4047:26;4044:35;4041:55;;;4092:1;4089;4082:12;4041:55;4156:2;4149:4;4141:6;4137:17;4130:4;4122:6;4118:17;4105:54;4203:1;4196:4;4191:2;4183:6;4179:15;4175:26;4168:37;4223:6;4214:15;;;;;;3517:718;;;;:::o;4240:456::-;4326:6;4334;4342;4395:2;4383:9;4374:7;4370:23;4366:32;4363:52;;;4411:1;4408;4401:12;4363:52;4447:9;4434:23;4424:33;;4504:2;4493:9;4489:18;4476:32;4466:42;;4559:2;4548:9;4544:18;4531:32;4586:18;4578:6;4575:30;4572:50;;;4618:1;4615;4608:12;4572:50;4641:49;4682:7;4673:6;4662:9;4658:22;4641:49;:::i;:::-;4631:59;;;4240:456;;;;;:::o;4701:525::-;4796:6;4804;4812;4820;4873:3;4861:9;4852:7;4848:23;4844:33;4841:53;;;4890:1;4887;4880:12;4841:53;4926:9;4913:23;4903:33;;4983:2;4972:9;4968:18;4955:32;4945:42;;5034:2;5023:9;5019:18;5006:32;4996:42;;5089:2;5078:9;5074:18;5061:32;5116:18;5108:6;5105:30;5102:50;;;5148:1;5145;5138:12;5102:50;5171:49;5212:7;5203:6;5192:9;5188:22;5171:49;:::i;:::-;5161:59;;;4701:525;;;;;;;:::o;5231:452::-;5317:6;5325;5333;5341;5394:3;5382:9;5373:7;5369:23;5365:33;5362:53;;;5411:1;5408;5401:12;5362:53;5450:9;5437:23;5469:31;5494:5;5469:31;:::i;:::-;5519:5;5571:2;5556:18;;5543:32;;-1:-1:-1;5622:2:18;5607:18;;5594:32;;5673:2;5658:18;5645:32;;-1:-1:-1;5231:452:18;-1:-1:-1;;;5231:452:18:o;5688:247::-;5747:6;5800:2;5788:9;5779:7;5775:23;5771:32;5768:52;;;5816:1;5813;5806:12;5768:52;5855:9;5842:23;5874:31;5899:5;5874:31;:::i;6200:767::-;6356:4;6385:2;6414;6403:9;6396:21;6452:6;6446:13;6495:4;6490:2;6479:9;6475:18;6468:32;6529:12;6523:19;6578:6;6573:2;6562:9;6558:18;6551:34;6603:1;6613:147;6627:6;6624:1;6621:13;6613:147;;;6723:20;;;6719:29;;6713:36;6688:17;;;6707:3;6684:27;6677:73;6642:10;;6613:147;;;6617:3;6810:1;6804:3;6795:6;6784:9;6780:22;6776:32;6769:43;6882:2;6874:6;6870:15;6864:22;6857:30;6850:38;6843:4;6832:9;6828:20;6821:68;6957:3;6950:2;6946:7;6941:2;6933:6;6929:15;6925:29;6914:9;6910:45;6906:55;6898:63;;;;;6200:767;;;;:::o;6972:323::-;7048:6;7056;7109:2;7097:9;7088:7;7084:23;7080:32;7077:52;;;7125:1;7122;7115:12;7077:52;7164:9;7151:23;7183:31;7208:5;7183:31;:::i;:::-;7233:5;7285:2;7270:18;;;;7257:32;;-1:-1:-1;;;6972:323:18:o;8037:316::-;8111:6;8119;8127;8180:2;8168:9;8159:7;8155:23;8151:32;8148:52;;;8196:1;8193;8186:12;8148:52;8232:9;8219:23;8209:33;;8289:2;8278:9;8274:18;8261:32;8251:42;;8312:35;8343:2;8332:9;8328:18;8312:35;:::i;:::-;8302:45;;8037:316;;;;;:::o;8358:661::-;8462:6;8470;8478;8486;8494;8547:3;8535:9;8526:7;8522:23;8518:33;8515:53;;;8564:1;8561;8554:12;8515:53;8603:9;8590:23;8622:31;8647:5;8622:31;:::i;:::-;8672:5;-1:-1:-1;8724:2:18;8709:18;;8696:32;;-1:-1:-1;8775:2:18;8760:18;;8747:32;;-1:-1:-1;8826:2:18;8811:18;;8798:32;;-1:-1:-1;8881:3:18;8866:19;;8853:33;8909:18;8898:30;;8895:50;;;8941:1;8938;8931:12;8895:50;8964:49;9005:7;8996:6;8985:9;8981:22;8964:49;:::i;:::-;8954:59;;;8358:661;;;;;;;;:::o;9989:345::-;10191:2;10173:21;;;10230:2;10210:18;;;10203:30;-1:-1:-1;;;10264:2:18;10249:18;;10242:51;10325:2;10310:18;;9989:345::o;10691:127::-;10752:10;10747:3;10743:20;10740:1;10733:31;10783:4;10780:1;10773:15;10807:4;10804:1;10797:15;10823:168;10896:9;;;10927;;10944:15;;;10938:22;;10924:37;10914:71;;10965:18;;:::i;11249:341::-;11451:2;11433:21;;;11490:2;11470:18;;;11463:30;-1:-1:-1;;;11524:2:18;11509:18;;11502:47;11581:2;11566:18;;11249:341::o;12779:346::-;12981:2;12963:21;;;13020:2;13000:18;;;12993:30;-1:-1:-1;;;13054:2:18;13039:18;;13032:52;13116:2;13101:18;;12779:346::o;13130:338::-;13332:2;13314:21;;;13371:2;13351:18;;;13344:30;-1:-1:-1;;;13405:2:18;13390:18;;13383:44;13459:2;13444:18;;13130:338::o;13473:125::-;13538:9;;;13559:10;;;13556:36;;;13572:18;;:::i;13603:344::-;13805:2;13787:21;;;13844:2;13824:18;;;13817:30;-1:-1:-1;;;13878:2:18;13863:18;;13856:50;13938:2;13923:18;;13603:344::o;13952:348::-;14154:2;14136:21;;;14193:2;14173:18;;;14166:30;14232:26;14227:2;14212:18;;14205:54;14291:2;14276:18;;13952:348::o;14305:356::-;14507:2;14489:21;;;14526:18;;;14519:30;14585:34;14580:2;14565:18;;14558:62;14652:2;14637:18;;14305:356::o;14666:355::-;14868:2;14850:21;;;14907:2;14887:18;;;14880:30;14946:33;14941:2;14926:18;;14919:61;15012:2;14997:18;;14666:355::o;15343:341::-;15545:2;15527:21;;;15584:2;15564:18;;;15557:30;-1:-1:-1;;;15618:2:18;15603:18;;15596:47;15675:2;15660:18;;15343:341::o;16422:345::-;16624:2;16606:21;;;16663:2;16643:18;;;16636:30;-1:-1:-1;;;16697:2:18;16682:18;;16675:51;16758:2;16743:18;;16422:345::o;16772:348::-;16974:2;16956:21;;;17013:2;16993:18;;;16986:30;17052:26;17047:2;17032:18;;17025:54;17111:2;17096:18;;16772:348::o;17125:352::-;17327:2;17309:21;;;17366:2;17346:18;;;17339:30;17405;17400:2;17385:18;;17378:58;17468:2;17453:18;;17125:352::o;17482:349::-;17684:2;17666:21;;;17723:2;17703:18;;;17696:30;17762:27;17757:2;17742:18;;17735:55;17822:2;17807:18;;17482:349::o;17836:345::-;18038:2;18020:21;;;18077:2;18057:18;;;18050:30;-1:-1:-1;;;18111:2:18;18096:18;;18089:51;18172:2;18157:18;;17836:345::o;18861:128::-;18928:9;;;18949:11;;;18946:37;;;18963:18;;:::i;19344:380::-;19423:1;19419:12;;;;19466;;;19487:61;;19541:4;19533:6;19529:17;19519:27;;19487:61;19594:2;19586:6;19583:14;19563:18;19560:38;19557:161;;19640:10;19635:3;19631:20;19628:1;19621:31;19675:4;19672:1;19665:15;19703:4;19700:1;19693:15;19557:161;;19344:380;;;:::o;21119:491::-;21380:2;21376:15;;;;-1:-1:-1;;21372:53:18;21360:66;;21451:2;21442:12;;21435:28;;;;21488:2;21479:12;;21472:28;;;;21525:2;21516:12;;21509:28;21562:3;21553:13;;21546:29;21600:3;21591:13;;21119:491::o;23145:545::-;23247:2;23242:3;23239:11;23236:448;;;23283:1;23308:5;23304:2;23297:17;23353:4;23349:2;23339:19;23423:2;23411:10;23407:19;23404:1;23400:27;23394:4;23390:38;23459:4;23447:10;23444:20;23441:47;;;-1:-1:-1;23482:4:18;23441:47;23537:2;23532:3;23528:12;23525:1;23521:20;23515:4;23511:31;23501:41;;23592:82;23610:2;23603:5;23600:13;23592:82;;;23655:17;;;23636:1;23625:13;23592:82;;;23596:3;;;23145:545;;;:::o;23866:1352::-;23992:3;23986:10;24019:18;24011:6;24008:30;24005:56;;;24041:18;;:::i;:::-;24070:97;24160:6;24120:38;24152:4;24146:11;24120:38;:::i;:::-;24114:4;24070:97;:::i;:::-;24222:4;;24286:2;24275:14;;24303:1;24298:663;;;;25005:1;25022:6;25019:89;;;-1:-1:-1;25074:19:18;;;25068:26;25019:89;-1:-1:-1;;23823:1:18;23819:11;;;23815:24;23811:29;23801:40;23847:1;23843:11;;;23798:57;25121:81;;24268:944;;24298:663;23092:1;23085:14;;;23129:4;23116:18;;-1:-1:-1;;24334:20:18;;;24452:236;24466:7;24463:1;24460:14;24452:236;;;24555:19;;;24549:26;24534:42;;24647:27;;;;24615:1;24603:14;;;;24482:19;;24452:236;;;24456:3;24716:6;24707:7;24704:19;24701:201;;;24777:19;;;24771:26;-1:-1:-1;;24860:1:18;24856:14;;;24872:3;24852:24;24848:37;24844:42;24829:58;24814:74;;24701:201;-1:-1:-1;;;;;24948:1:18;24932:14;;;24928:22;24915:36;;-1:-1:-1;23866:1352:18:o;25502:127::-;25563:10;25558:3;25554:20;25551:1;25544:31;25594:4;25591:1;25584:15;25618:4;25615:1;25608:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","advanceTime(bytes32,uint256)":"5f64e78a","approveClaim(bytes32)":"3719f096","approveClaimWithoutVerification(bytes32)":"20056ed3","cancelPolicy(bytes32,uint256,bytes)":"2fe1814c","cancelPolicyWithoutTransfer(bytes32)":"29216c7c","claimExpiryPeriod()":"30d95b53","createMockClaim(bytes32,uint256,bool)":"a9544464","emergencyWithdraw(uint256)":"5312ea8e","fileClaim(bytes32,uint256,bytes)":"5052cb49","fileClaimWithoutSignature(bytes32,uint256)":"2aadb560","forceExpirePolicy(bytes32)":"6def90b7","getClaim(bytes32)":"c9100bcb","getMockPolicyData(bytes32)":"6e9747ca","getPolicy(bytes32)":"a3f685f9","getRoleAdmin(bytes32)":"248a9ca3","grantAdminRole(address)":"c634b78e","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","markExpiredPolicy(bytes32)":"b0529da2","purchasePolicy(address,uint256,uint256,uint256,bytes)":"b87fb65c","purchasePolicyWithSignature(address,uint256,uint256,uint256,bytes)":"b04a733b","purchasePolicyWithoutSignature(address,uint256,uint256,uint256)":"528331db","renewPolicy(bytes32,uint256,uint256,bytes)":"4e494b7c","renewPolicyWithoutSignature(bytes32,uint256,uint256)":"2f1ed59e","renounceRole(bytes32,address)":"36568abe","revokeAdminRole(address)":"9a19c7b0","revokeRole(bytes32,address)":"d547741f","setClaimExpiryPeriod(uint256)":"19c0d1fa","setClaimState(bytes32,bool,bool,bool)":"08b3bf82","setExpiryTimestamp(bytes32,uint256)":"974552f9","setMockVaultReceiver(address)":"91cfb505","setTimeToNearExpiry(bytes32,uint256)":"f99dec74","setTrustedSigner(address)":"56a1c701","setVault(address)":"6817031b","simulateVaultTransfer(address,uint256)":"8b82e07a","supportsInterface(bytes4)":"01ffc9a7","trustedSigner()":"f74d5480","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedSigner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"ClaimExpiryPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimFiled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PolicyExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"PolicyPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiry\",\"type\":\"uint256\"}],\"name\":\"PolicyRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"TrustedSignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"VaultUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"timeToAdvance\",\"type\":\"uint256\"}],\"name\":\"advanceTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"approveClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"approveClaimWithoutVerification\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"cancelPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"cancelPolicyWithoutTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimExpiryPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"}],\"name\":\"createMockClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fileClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fileClaimWithoutSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"forceExpirePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.ClaimRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getMockPolicyData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"processed\",\"type\":\"bool\"}],\"internalType\":\"struct PolicyBaseMock.MockPolicyData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getPolicy\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.Policy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"markExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"purchasePolicy\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"purchasePolicyWithSignature\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"purchasePolicyWithoutSignature\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"renewPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"renewPolicyWithoutSignature\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"periodInDays\",\"type\":\"uint256\"}],\"name\":\"setClaimExpiryPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"setClaimState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"}],\"name\":\"setExpiryTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReceiver\",\"type\":\"address\"}],\"name\":\"setMockVaultReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"daysBeforeExpiry\",\"type\":\"uint256\"}],\"name\":\"setTimeToNearExpiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"simulateVaultTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract InsuranceVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"approveClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"cancelPolicy(bytes32,uint256,bytes)\":{\"params\":{\"policyId\":\"The ID of the policy\",\"refundAmount\":\"Refund amount\",\"signature\":\"Signature from the backend verifying the refund amount\"}},\"createMockClaim(bytes32,uint256,bool)\":{\"params\":{\"amount\":\"Claim amount\",\"isPending\":\"Whether the claim is pending\",\"policyId\":\"The ID of the policy\"}},\"emergencyWithdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}},\"fileClaim(bytes32,uint256,bytes)\":{\"params\":{\"amount\":\"Claim amount\",\"policyId\":\"The ID of the policy\",\"signature\":\"Signature from the backend verifying the claim\"}},\"fileClaimWithoutSignature(bytes32,uint256)\":{\"params\":{\"amount\":\"Claim amount\",\"policyId\":\"The ID of the policy\"}},\"getClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"markExpiredPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"params\":{\"duration\":\"Policy duration in seconds\",\"owner\":\"Address of the policy owner\",\"premium\":\"Premium amount calculated by backend\",\"signature\":\"Signature from the backend verifying the parameters\",\"sumAssured\":\"Sum assured amount\"}},\"renewPolicy(bytes32,uint256,uint256,bytes)\":{\"params\":{\"duration\":\"Additional duration in seconds\",\"policyId\":\"The ID of the policy\",\"premium\":\"New premium amount\",\"signature\":\"Signature from the backend verifying the renewal parameters\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimExpiryPeriod(uint256)\":{\"params\":{\"periodInDays\":\"Number of days a claim remains valid\"}},\"setTrustedSigner(address)\":{\"params\":{\"newSigner\":\"Address of the backend that will sign premium and claim amounts\"}},\"setVault(address)\":{\"params\":{\"newVault\":\"Address of the new vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"PolicyBaseMock\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveClaim(bytes32)\":{\"notice\":\"Approve a claim after admin review\"},\"cancelPolicy(bytes32,uint256,bytes)\":{\"notice\":\"Cancel the policy with backend verification\"},\"createMockClaim(bytes32,uint256,bool)\":{\"notice\":\"Create a mock claim directly (for testing only)\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Emergency withdraw function (only for admin)\"},\"fileClaim(bytes32,uint256,bytes)\":{\"notice\":\"File a claim for the insurance with signature verification\"},\"fileClaimWithoutSignature(bytes32,uint256)\":{\"notice\":\"File a claim without signature verification (for testing only)\"},\"getClaim(bytes32)\":{\"notice\":\"Get claim details\"},\"getPolicy(bytes32)\":{\"notice\":\"Get policy details\"},\"grantAdminRole(address)\":{\"notice\":\"Grant admin role (only default admin can do this)\"},\"markExpiredPolicy(bytes32)\":{\"notice\":\"Mark a policy as expired\"},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Purchase a new policy with backend-verified premium\"},\"purchasePolicyWithSignature(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Test version of purchasePolicy with signature verification\"},\"purchasePolicyWithoutSignature(address,uint256,uint256,uint256)\":{\"notice\":\"Mock function to directly purchase a policy without signature verification\"},\"renewPolicy(bytes32,uint256,uint256,bytes)\":{\"notice\":\"Renew an existing policy with backend-verified premium\"},\"revokeAdminRole(address)\":{\"notice\":\"Revoke admin role (only default admin can do this)\"},\"setClaimExpiryPeriod(uint256)\":{\"notice\":\"Set the claim expiry period\"},\"setTrustedSigner(address)\":{\"notice\":\"Set the trusted signer address\"},\"setVault(address)\":{\"notice\":\"Set the vault address\"}},\"notice\":\"Mock implementation of PolicyBase for testing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/PolicyBaseMock.sol\":\"PolicyBaseMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/base/PolicyBase.sol\":{\"keccak256\":\"0x555ae3aeceaa8b801b618d4c81768e8fc4faa13ce4531e4a6fd9eb924efd7926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18224c2ebd1c0fb75462a1791303086d1907609e60777f1db2385b4655686b7a\",\"dweb:/ipfs/QmVPqATESLLM2VpC67qC1PEW36jBY9MS57Ym497x4iZJqk\"]},\"contracts/mock/PolicyBaseMock.sol\":{\"keccak256\":\"0xebcdbb69c1eb7333f3096ba07531b394eb0294ad5ff1951903913fbb757510fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc42f0b1ede8b5aa4f0c6f14f75d16517c27d288ab78da1cf8c8becbdcf000d2\",\"dweb:/ipfs/QmcGcHHXhpmsHi8ePPbRcjdpPDMErh69NC5tf8F7koNupB\"]},\"contracts/utils/InsuranceVault.sol\":{\"keccak256\":\"0xd6ba55d73f4d10601c8a80c9de92154a2b0be98cc6c93a6146a9aea6e8ffb5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a99626984a220c68a6e19592536581477b445caae18158c0e733f75ccb862c97\",\"dweb:/ipfs/QmXLqCxfrLYvLd6hzUxCtnU2FmeP3ge52KskSJP9gH9oUG\"]}},\"version\":1}"}},"contracts/plans/HealthCareLite.sol":{"HealthCareLite":{"abi":[{"inputs":[{"internalType":"address","name":"_trustedSigner","type":"address"},{"internalType":"address payable","name":"_vaultAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"AdminGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"ClaimExpiryPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimFiled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"PolicyCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"PolicyExpired","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sumAssured","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"PolicyPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"PolicyRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newExpiry","type":"uint256"}],"name":"PolicyRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"}],"name":"PremiumCalculated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"}],"name":"TrustedSignerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldVault","type":"address"},{"indexed":true,"internalType":"address","name":"newVault","type":"address"}],"name":"VaultUpdated","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"approveClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"calculateRefund","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"refundAmount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"cancelPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimExpiryPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fileClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getClaim","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiryTimestamp","type":"uint256"}],"internalType":"struct PolicyBase.ClaimRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getPolicy","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct PolicyBase.Policy","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getRemainingCoverage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"grantAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"markExpiredPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"purchaseHealthPolicy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"purchasePolicy","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"renewPolicy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"revokeAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"periodInDays","type":"uint256"}],"name":"setClaimExpiryPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newSigner","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newVault","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract InsuranceVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_6221":{"entryPoint":null,"id":6221,"parameterSlots":2,"returnSlots":0},"@_8174":{"entryPoint":null,"id":8174,"parameterSlots":2,"returnSlots":0},"@_grantRole_256":{"entryPoint":356,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_payable_fromMemory":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":531,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1246:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:18"},"nodeType":"YulFunctionCall","src":"125:12:18"},"nodeType":"YulExpressionStatement","src":"125:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:18"},"nodeType":"YulFunctionCall","src":"104:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:18"},"nodeType":"YulFunctionCall","src":"100:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:18"},"nodeType":"YulFunctionCall","src":"89:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:18"},"nodeType":"YulFunctionCall","src":"79:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:18"},"nodeType":"YulFunctionCall","src":"72:50:18"},"nodeType":"YulIf","src":"69:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:18","type":""}],"src":"14:131:18"},{"body":{"nodeType":"YulBlock","src":"256:287:18","statements":[{"body":{"nodeType":"YulBlock","src":"302:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"311:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"314:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"304:6:18"},"nodeType":"YulFunctionCall","src":"304:12:18"},"nodeType":"YulExpressionStatement","src":"304:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"277:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"286:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"273:3:18"},"nodeType":"YulFunctionCall","src":"273:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"298:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"269:3:18"},"nodeType":"YulFunctionCall","src":"269:32:18"},"nodeType":"YulIf","src":"266:52:18"},{"nodeType":"YulVariableDeclaration","src":"327:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"346:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"340:5:18"},"nodeType":"YulFunctionCall","src":"340:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"331:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"390:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"365:24:18"},"nodeType":"YulFunctionCall","src":"365:31:18"},"nodeType":"YulExpressionStatement","src":"365:31:18"},{"nodeType":"YulAssignment","src":"405:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"415:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"405:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"429:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:18"},"nodeType":"YulFunctionCall","src":"450:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"444:5:18"},"nodeType":"YulFunctionCall","src":"444:25:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"433:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"503:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"478:24:18"},"nodeType":"YulFunctionCall","src":"478:33:18"},"nodeType":"YulExpressionStatement","src":"478:33:18"},{"nodeType":"YulAssignment","src":"520:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"530:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"520:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"214:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"225:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"237:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"245:6:18","type":""}],"src":"150:393:18"},{"body":{"nodeType":"YulBlock","src":"722:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"739:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"750:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"732:6:18"},"nodeType":"YulFunctionCall","src":"732:21:18"},"nodeType":"YulExpressionStatement","src":"732:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"773:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"784:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"769:3:18"},"nodeType":"YulFunctionCall","src":"769:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"789:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:18"},"nodeType":"YulFunctionCall","src":"762:30:18"},"nodeType":"YulExpressionStatement","src":"762:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"823:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:18"},"nodeType":"YulFunctionCall","src":"808:18:18"},{"hexValue":"496e76616c6964207369676e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"828:24:18","type":"","value":"Invalid signer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"801:6:18"},"nodeType":"YulFunctionCall","src":"801:52:18"},"nodeType":"YulExpressionStatement","src":"801:52:18"},{"nodeType":"YulAssignment","src":"862:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"874:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"885:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:18"},"nodeType":"YulFunctionCall","src":"870:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"862:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"699:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"713:4:18","type":""}],"src":"548:346:18"},{"body":{"nodeType":"YulBlock","src":"1073:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1101:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1083:6:18"},"nodeType":"YulFunctionCall","src":"1083:21:18"},"nodeType":"YulExpressionStatement","src":"1083:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1124:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1135:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:18"},"nodeType":"YulFunctionCall","src":"1120:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"1140:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1113:6:18"},"nodeType":"YulFunctionCall","src":"1113:30:18"},"nodeType":"YulExpressionStatement","src":"1113:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:18"},"nodeType":"YulFunctionCall","src":"1159:18:18"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nodeType":"YulLiteral","src":"1179:23:18","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:18"},"nodeType":"YulFunctionCall","src":"1152:51:18"},"nodeType":"YulExpressionStatement","src":"1152:51:18"},{"nodeType":"YulAssignment","src":"1212:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1224:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1235:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:18"},"nodeType":"YulFunctionCall","src":"1220:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1212:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1050:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1064:4:18","type":""}],"src":"899:345:18"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid signer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405262093a806004553480156200001857600080fd5b5060405162002a2638038062002a268339810160408190526200003b916200022c565b81816001600160a01b038216620000995760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964207369676e657220616464726573730000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038116620000f15760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964207661756c7420616464726573730000000000000000000000604482015260640162000090565b620000fe60003362000164565b506200012b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753362000164565b50600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790555050600180556200026b565b6000828152602081815260408083206001600160a01b038516845290915281205460ff1662000209576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001c03390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200020d565b5060005b92915050565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6127ab806200027b6000396000f3fe6080604052600436106101bb5760003560e01c80638c51f60f116100ec578063b87fb65c1161008a578063cb80486011610064578063cb80486014610748578063d547741f14610768578063f74d548014610788578063fbfa77cf146107c057600080fd5b8063b87fb65c14610637578063c634b78e1461064a578063c9100bcb1461066a57600080fd5b8063a217fddf116100c6578063a217fddf146104ad578063a3f685f9146104c2578063aa04cd1414610604578063b0529da21461061757600080fd5b80638c51f60f1461044d57806391d148541461046d5780639a19c7b01461048d57600080fd5b80633719f096116101595780635312ea8e116101335780635312ea8e146103cb57806356a1c701146103eb5780636817031b1461040b57806375b238fc1461042b57600080fd5b80633719f096146103785780634e494b7c146103985780635052cb49146103ab57600080fd5b80632f2ff15d116101955780632f2ff15d146103025780632fe1814c1461032257806330d95b531461034257806336568abe1461035857600080fd5b806301ffc9a71461026f57806319c0d1fa146102a4578063248a9ca3146102c457600080fd5b3661026a576003546040516000916001600160a01b03169034908381818185875af1925050503d806000811461020d576040519150601f19603f3d011682016040523d82523d6000602084013e610212565b606091505b50509050806102685760405162461bcd60e51b815260206004820152601e60248201527f45544820666f7277617264696e6720746f207661756c74206661696c6564000060448201526064015b60405180910390fd5b005b600080fd5b34801561027b57600080fd5b5061028f61028a3660046123a7565b6107e0565b60405190151581526020015b60405180910390f35b3480156102b057600080fd5b506102686102bf3660046123d8565b610817565b3480156102d057600080fd5b506102f46102df3660046123d8565b60009081526020819052604090206001015490565b60405190815260200161029b565b34801561030e57600080fd5b5061026861031d366004612406565b6108c6565b34801561032e57600080fd5b5061026861033d3660046124d9565b6108f1565b34801561034e57600080fd5b506102f460045481565b34801561036457600080fd5b50610268610373366004612406565b610b5e565b34801561038457600080fd5b506102f46103933660046123d8565b610b96565b6102686103a6366004612529565b610e02565b3480156103b757600080fd5b506102686103c63660046124d9565b61113d565b3480156103d757600080fd5b506102686103e63660046123d8565b611436565b3480156103f757600080fd5b50610268610406366004612583565b6114d4565b34801561041757600080fd5b50610268610426366004612583565b611581565b34801561043757600080fd5b506102f460008051602061275683398151915281565b34801561045957600080fd5b506102f46104683660046123d8565b61162d565b34801561047957600080fd5b5061028f610488366004612406565b611729565b34801561049957600080fd5b506102686104a8366004612583565b611752565b3480156104b957600080fd5b506102f4600081565b3480156104ce57600080fd5b5061059b6104dd3660046123d8565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250600090815260056020818152604092839020835161010080820186528254825260018301546001600160a01b03169382019390935260028201549481019490945260038101546060850152600481015460808501529182015460ff808216151560a086015291900416151560c08301526006015460e082015290565b60405161029b9190815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a08083015115159082015260c08083015115159082015260e091820151918101919091526101000190565b6102686106123660046125a0565b611810565b34801561062357600080fd5b506102686106323660046123d8565b611862565b6102f46106453660046125a0565b61192f565b34801561065657600080fd5b50610268610665366004612583565b611e15565b34801561067657600080fd5b506107046106853660046123d8565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260066020908152604091829020825160a08101845281548152600182015492810192909252600281015460ff1615159282019290925260038201546060820152600490910154608082015290565b60405161029b9190600060a0820190508251825260208301516020830152604083015115156040830152606083015160608301526080830151608083015292915050565b34801561075457600080fd5b506102f46107633660046123d8565b611ebf565b34801561077457600080fd5b50610268610783366004612406565b611f85565b34801561079457600080fd5b506002546107a8906001600160a01b031681565b6040516001600160a01b03909116815260200161029b565b3480156107cc57600080fd5b506003546107a8906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b148061081157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600061082281611faa565b600082116108725760405162461bcd60e51b815260206004820152601760248201527f506572696f64206d75737420626520706f736974697665000000000000000000604482015260640161025f565b6004546108828362015180612623565b60048190556040805183815260208101929092527fb792057619e1a3b0e2768725ef4cb4fc3cbf647c992d306e6876522e3fc0cdbc910160405180910390a1505050565b6000828152602081905260409020600101546108e181611faa565b6108eb8383611fb7565b50505050565b60008051602061275683398151915261090981611faa565b60008481526005602081905260409091200154849060ff1661093d5760405162461bcd60e51b815260040161025f9061263a565b60008581526005602081905260409091209081015460ff166109715760405162461bcd60e51b815260040161025f9061263a565b6005810154610100900460ff16156109c45760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b604482015260640161025f565b60018101546040516000916109ed9189916001600160a01b031690899085904690602001612665565b604051602081830303815290604052805190602001209050610a0f8186612049565b610a2b5760405162461bcd60e51b815260040161025f90612695565b8451602080870191909120600090815260079091526040908190208054600160ff1991821681179092556005850180549091169055600354908401549151631f9cab4760e21b81526001600160a01b03928316600482015260248101899052911690637e72ad1c90604401600060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b5050505060018201546040518781526001600160a01b039091169088907fae2eb9a5ff7e26865940377aafb8a569997727d3bc48028ed88199eed260087f9060200160405180910390a360018201546040518781526001600160a01b039091169088907feffda959fad3422ef4e602f1642198e56536dbbf192da630dcbc451b5b5c203d906020015b60405180910390a350505050505050565b6001600160a01b0381163314610b875760405163334bd91960e11b815260040160405180910390fd5b610b918282612100565b505050565b6000600080516020612756833981519152610bb081611faa565b60008381526005602081905260409091200154839060ff16610be45760405162461bcd60e51b815260040161025f9061263a565b60008481526006602090815260408083206005909252909120600282015460ff16610c445760405162461bcd60e51b815260206004820152601060248201526f4e6f2070656e64696e6720636c61696d60801b604482015260640161025f565b8160040154421115610c905760405162461bcd60e51b815260206004820152601560248201527410db185a5b481c995c5d595cdd08195e1c1a5c9959605a1b604482015260640161025f565b60028201805460ff19169055600182015460008781526008602052604081208054909190610cbf9084906126c0565b9091555050600381015460008781526008602052604090205410610cef5760058101805461ffff19166101001790555b60035460018281015490840154604051631e55af2160e31b81526001600160a01b039283166004820152602481019190915291169063f2ad790890604401600060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b50505050600181810154908301546040519081526001600160a01b039091169087907f636494174e4a0f872de31b104ec14fb50edb1bdc4b1db9f006eaa68a61610f9c9060200160405180910390a3600181810154908301546040519081526001600160a01b039091169087907f957a909a771d0c1c8b37c8f5c6c9df37d8d7c521d3d99445839ede9153d063589060200160405180910390a35060010154949350505050565b600084815260056020526040902060018101546001600160a01b03163314610e635760405162461bcd60e51b81526020600482015260146024820152732737ba103a3432903837b634b1bc9037bbb732b960611b604482015260640161025f565b600581015460ff16610e875760405162461bcd60e51b815260040161025f9061263a565b6005810154610100900460ff1615610ed85760405162461bcd60e51b8152602060048201526014602482015273141bdb1a58de48199d5b1b1e4818db185a5b595960621b604482015260640161025f565b833414610f225760405162461bcd60e51b8152602060048201526018602482015277125b98dbdc9c9958dd081c1c995b5a5d5b48185b5bdd5b9d60421b604482015260640161025f565b806004015442101580610f47575062278d00428260040154610f4491906126d3565b11155b610f885760405162461bcd60e51b8152602060048201526012602482015271546f6f206561726c7920746f2072656e657760701b604482015260640161025f565b60018101546040516301e1338091600091610fb99189916001600160a01b0390911690899086904690602001612665565b604051602081830303815290604052805190602001209050610fdb8185612049565b610ff75760405162461bcd60e51b815260040161025f90612695565b8351602080860191909120600090815260079091526040808220805460ff1916600117905560035490516001600160a01b039091169034908381818185875af1925050503d8060008114611067576040519150601f19603f3d011682016040523d82523d6000602084013e61106c565b606091505b50509050806110b55760405162461bcd60e51b815260206004820152601560248201527415985d5b1d081d1c985b9cd9995c8819985a5b1959605a1b604482015260640161025f565b600284018790556000888152600860205260408120556110d583426126c0565b60048501819055600185015460028601546040516001600160a01b03909216928b927f16fe3aa381de20cb3e0fb3f9ae8d20168747df7e26dbc2b381ad5025ee5ca0869261112b92908252602082015260400190565b60405180910390a35050505050505050565b60026001540361115f5760405162461bcd60e51b815260040161025f906126e6565b600260015560008381526005602081905260409091200154839060ff166111985760405162461bcd60e51b815260040161025f9061263a565b600084815260056020526040902060018101546001600160a01b031633146111f95760405162461bcd60e51b81526020600482015260146024820152732737ba103a3432903837b634b1bc9037bbb732b960611b604482015260640161025f565b806003015484111561124d5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20657863656564732073756d206173737572656400000000000000604482015260640161025f565b6005810154610100900460ff16156112a05760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b604482015260640161025f565b806004015442106112e45760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b604482015260640161025f565b60408051602081018790529081018590524660608201526000906080016040516020818303038152906040528051906020012090506113238185612049565b61133f5760405162461bcd60e51b815260040161025f90612695565b8351602080860191909120600090815260078252604090819020805460ff19166001908117909155815160a081018352898152928301889052908201524260608201819052600454608083019161139691906126c0565b905260008781526006602090815260409182902083518155838201516001808301919091558484015160028301805460ff1916911515919091179055606085015160038301556080909401516004909101559184015490518781526001600160a01b039091169188917fcb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f1910160405180910390a350506001805550505050565b600061144181611faa565b6002600154036114635760405162461bcd60e51b815260040161025f906126e6565b600260015560035460405163c107532960e01b8152336004820152602481018490526001600160a01b039091169063c107532990604401600060405180830381600087803b1580156114b457600080fd5b505af11580156114c8573d6000803e3d6000fd5b50506001805550505050565b60006114df81611faa565b6001600160a01b03821661152e5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964207369676e6572206164647265737360501b604482015260640161025f565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f4a297cf5d32586f80d2b0708a39d2da1f46e6ae7722171e1c51dfd685b5b8aa890600090a3505050565b600061158c81611faa565b6001600160a01b0382166115da5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b604482015260640161025f565b600380546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3990600090a3505050565b6000818152600560208181526040808420815161010080820184528254825260018301546001600160a01b03169482019490945260028201549281019290925260038101546060830152600481015460808301529283015460ff80821615801560a08501529390910416151560c082015260069092015460e0830152806116b8575080608001514210155b156116c65750600092915050565b60004282608001516116d891906126d3565b905060008260e0015183608001516116f091906126d3565b90508060000361170557506000949350505050565b808284604001516117169190612623565b611720919061271d565b95945050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600061175d81611faa565b6001600160a01b0382166117ab5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b604482015260640161025f565b336001600160a01b038316036117f85760405162461bcd60e51b815260206004820152601260248201527121b0b73737ba103932bb37b5b29039b2b63360711b604482015260640161025f565b610b9160008051602061275683398151915283612100565b6301e133806000611824878787858761192f565b9050866001600160a01b0316817fb1efb5a54d173a08f1d7ae00e21150da481ac80d259826760104a5ba97be6fa888604051610b4d91815260200190565b60008181526005602081905260409091209081015460ff166118965760405162461bcd60e51b815260040161025f9061263a565b80600401544210156118e35760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de481b9bdd08195e1c1a5c9959081e595d60521b604482015260640161025f565b60058101805460ff1916905560018101546040516001600160a01b039091169083907f8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe00290600090a35050565b60006002600154036119535760405162461bcd60e51b815260040161025f906126e6565b60026001556001600160a01b0386166119a65760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b604482015260640161025f565b600085116119f65760405162461bcd60e51b815260206004820152601860248201527f5072656d69756d206d75737420626520706f7369746976650000000000000000604482015260640161025f565b60008411611a465760405162461bcd60e51b815260206004820152601c60248201527f53756d2061737375726564206d75737420626520706f73697469766500000000604482015260640161025f565b60008311611a965760405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f73697469766500000000000000604482015260640161025f565b843414611ae05760405162461bcd60e51b8152602060048201526018602482015277125b98dbdc9c9958dd081c1c995b5a5d5b48185b5bdd5b9d60421b604482015260640161025f565b6040516001600160601b0319606088901b16602082015260348101869052605481018590526074810184905246609482015260009060b401604051602081830303815290604052805190602001209050611b3a8184612049565b611b565760405162461bcd60e51b815260040161025f90612695565b82516020808501919091206000908152600790915260408120805460ff19166001179055611bc188426040516001600160601b0319606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b6000818152600560208190526040909120015490915060ff1615611c1f5760405162461bcd60e51b8152602060048201526015602482015274506f6c69637920616c72656164792065786973747360581b604482015260640161025f565b604051806101000160405280828152602001896001600160a01b031681526020018881526020018781526020018642611c5891906126c0565b81526001602080830182905260006040808501829052426060958601528682526005808452818320875181558785015195810180546001600160a01b039097166001600160a01b0319909716969096179095558682015160028601559486015160038501556080860151600485015560a0860151948401805460c088015115156101000261ff00199715159790971661ffff19909116179590951790945560e090940151600690920191909155600890528120556003546040516000916001600160a01b03169089908381818185875af1925050503d8060008114611d59576040519150601f19603f3d011682016040523d82523d6000602084013e611d5e565b606091505b5050905080611daf5760405162461bcd60e51b815260206004820181905260248201527f5072656d69756d207472616e7366657220746f207661756c74206661696c6564604482015260640161025f565b6001600160a01b038916827f105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff8a8a611de78b426126c0565b6040805193845260208401929092529082015260600160405180910390a35060018055979650505050505050565b6000611e2081611faa565b6001600160a01b038216611e6e5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b604482015260640161025f565b611e8660008051602061275683398151915283611fb7565b506040516001600160a01b038316907f1c4e23de8d72c94b22992bd4d7b6786b215ba876af214ff63e6a0ca38fc97af490600090a25050565b6000818152600560208181526040808420815161010080820184528254825260018301546001600160a01b03169482019490945260028201549281019290925260038101546060830152600481015460808301529283015460ff808216151560a084018190529390910416151560c082015260069092015460e0830152611f495750600092915050565b60008381526008602052604090205460608201518110611f6d575060009392505050565b808260600151611f7d91906126d3565b949350505050565b600082815260208190526040902060010154611fa081611faa565b6108eb8383612100565b611fb4813361216b565b50565b6000611fc38383611729565b612041576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055611ff93390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610811565b506000610811565b805160208083019190912060009081526007909152604081205460ff16156120ac5760405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c9948185b1c9958591e481d5cd95960521b604482015260640161025f565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c849052603c8120906120e682856121a8565b6002546001600160a01b0390811691161495945050505050565b600061210c8383611729565b15612041576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610811565b6121758282611729565b6121a45760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161025f565b5050565b6000806000806121b886866121d2565b9250925092506121c8828261221f565b5090949350505050565b6000806000835160410361220c5760208401516040850151606086015160001a6121fe888285856122d8565b955095509550505050612218565b50508151600091506002905b9250925092565b60008260038111156122335761223361273f565b0361223c575050565b60018260038111156122505761225061273f565b0361226e5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156122825761228261273f565b036122a35760405163fce698f760e01b81526004810182905260240161025f565b60038260038111156122b7576122b761273f565b036121a4576040516335e2f38360e21b81526004810182905260240161025f565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115612313575060009150600390508261239d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015612367573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166123935750600092506001915082905061239d565b9250600091508190505b9450945094915050565b6000602082840312156123b957600080fd5b81356001600160e01b0319811681146123d157600080fd5b9392505050565b6000602082840312156123ea57600080fd5b5035919050565b6001600160a01b0381168114611fb457600080fd5b6000806040838503121561241957600080fd5b82359150602083013561242b816123f1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261245d57600080fd5b813567ffffffffffffffff8082111561247857612478612436565b604051601f8301601f19908116603f011681019082821181831017156124a0576124a0612436565b816040528381528660208588010111156124b957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156124ee57600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561251357600080fd5b61251f8682870161244c565b9150509250925092565b6000806000806080858703121561253f57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561256b57600080fd5b6125778782880161244c565b91505092959194509250565b60006020828403121561259557600080fd5b81356123d1816123f1565b600080600080600060a086880312156125b857600080fd5b85356125c3816123f1565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156125f457600080fd5b6126008882890161244c565b9150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108115761081161260d565b602080825260119082015270506f6c696379206e6f742061637469766560781b604082015260600190565b94855260609390931b6001600160601b031916602085015260348401919091526054830152607482015260940190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b808201808211156108115761081161260d565b818103818111156108115761081161260d565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008261273a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220333315e24f99645f177e1437c7eee2531507a799d203a1d53a76b87ab2e88a9864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x93A80 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2A26 CODESIZE SUB DUP1 PUSH3 0x2A26 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3B SWAP2 PUSH3 0x22C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6572206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207661756C7420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x90 JUMP JUMPDEST PUSH3 0xFE PUSH1 0x0 CALLER PUSH3 0x164 JUMP JUMPDEST POP PUSH3 0x12B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x164 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 SSTORE PUSH3 0x26B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x209 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1C0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x20D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x24D DUP2 PUSH3 0x213 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x260 DUP2 PUSH3 0x213 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x27AB DUP1 PUSH3 0x27B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C51F60F GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xB87FB65C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCB804860 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCB804860 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB87FB65C EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xA3F685F9 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xAA04CD14 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xB0529DA2 EQ PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C51F60F EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3719F096 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x5312EA8E GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3719F096 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x4E494B7C EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x5052CB49 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x2FE1814C EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x30D95B53 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x19C0D1FA EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x26A JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x212 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820666F7277617264696E6720746F207661756C74206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x1752 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59B PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 SWAP1 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x192F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x1E15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x704 PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x763 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x1EBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x783 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x1F85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x7A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x7A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x811 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x822 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F64206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x882 DUP4 PUSH3 0x15180 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB792057619E1A3B0E2768725EF4CB4FC3CBF647C992D306E6876522E3FC0CDBC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8E1 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x8EB DUP4 DUP4 PUSH2 0x1FB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x909 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x93D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x9ED SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 DUP6 SWAP1 CHAINID SWAP1 PUSH1 0x20 ADD PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA0F DUP2 DUP7 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP6 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 DUP5 ADD SLOAD SWAP2 MLOAD PUSH4 0x1F9CAB47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7E72AD1C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xEFFDA959FAD3422EF4E602F1642198E56536DBBF192DA630DCBC451B5B5C203D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB91 DUP3 DUP3 PUSH2 0x2100 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xBB0 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481C995C5D595CDD08195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xCBF SWAP1 DUP5 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT PUSH2 0xCEF JUMPI PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x957A909A771D0C1C8B37C8F5C6C9DF37D8D7C521D3D99445839EDE9153D06358 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x141BDB1A58DE48199D5B1B1E4818DB185A5B5959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP4 CALLVALUE EQ PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x125B98DBDC9C9958DD081C1C995B5A5D5B48185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xF47 JUMPI POP PUSH3 0x278D00 TIMESTAMP DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0xF44 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6F206561726C7920746F2072656E6577 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xFB9 SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 DUP7 SWAP1 CHAINID SWAP1 PUSH1 0x20 ADD PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xFDB DUP2 DUP6 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1067 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x106C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x15985D5B1D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP8 SWAP1 SSTORE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x10D5 DUP4 TIMESTAMP PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP12 SWAP3 PUSH32 0x16FE3AA381DE20CB3E0FB3F9AE8D20168747DF7E26DBC2B381AD5025EE5CA086 SWAP3 PUSH2 0x112B SWAP3 SWAP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20657863656564732073756D206173737572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1323 DUP2 DUP6 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP4 ADD SWAP2 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP5 ADD SLOAD SWAP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1441 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC1075329 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC1075329 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DF DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964207369676E65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x4A297CF5D32586F80D2B0708A39D2DA1F46E6AE7722171E1C51DFD685B5B8AA8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158C DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x483BDEDAAF23706A9800AC1AF0D852B34927780D79F9D6BA60A80C7CAD75EA39 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO DUP1 ISZERO PUSH1 0xA0 DUP6 ADD MSTORE SWAP4 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE DUP1 PUSH2 0x16B8 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x16C6 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x16D8 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x16F0 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1705 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1716 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x271D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175D DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x17F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA103932BB37B5B29039B2B633 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH2 0xB91 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x2100 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x0 PUSH2 0x1824 DUP8 DUP8 DUP8 DUP6 DUP8 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xB1EFB5A54D173A08F1D7AE00E21150DA481AC80D259826760104A5BA97BE6FA8 DUP9 PUSH1 0x40 MLOAD PUSH2 0xB4D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE481B9BDD08195E1C1A5C9959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x19A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x19F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D75737420626520706F7369746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1A46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D2061737375726564206D75737420626520706F73697469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x1AE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x125B98DBDC9C9958DD081C1C995B5A5D5B48185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x74 DUP2 ADD DUP5 SWAP1 MSTORE CHAINID PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xB4 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1B3A DUP2 DUP5 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x1B56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1BC1 DUP9 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 TIMESTAMP PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP2 DUP4 KECCAK256 DUP8 MLOAD DUP2 SSTORE DUP8 DUP6 ADD MLOAD SWAP6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE DUP7 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP5 DUP7 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP7 ADD MLOAD SWAP5 DUP5 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP8 ISZERO ISZERO SWAP8 SWAP1 SWAP8 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD MLOAD PUSH1 0x6 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SWAP1 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D59 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D207472616E7366657220746F207661756C74206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP11 DUP11 PUSH2 0x1DE7 DUP12 TIMESTAMP PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E20 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH2 0x1E86 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1FB7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1C4E23DE8D72C94B22992BD4D7B6786B215BA876AF214FF63E6A0CA38FC97AF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x1F49 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP3 ADD MLOAD DUP2 LT PUSH2 0x1F6D JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x1F7D SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1FA0 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x8EB DUP4 DUP4 PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x1FB4 DUP2 CALLER PUSH2 0x216B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP4 DUP4 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x2041 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1FF9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x811 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x811 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP5 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 PUSH2 0x20E6 DUP3 DUP6 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210C DUP4 DUP4 PUSH2 0x1729 JUMP JUMPDEST ISZERO PUSH2 0x2041 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x2175 DUP3 DUP3 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x21A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x25F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x21B8 DUP7 DUP7 PUSH2 0x21D2 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x21C8 DUP3 DUP3 PUSH2 0x221F JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x220C JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x21FE DUP9 DUP3 DUP6 DUP6 PUSH2 0x22D8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2218 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2233 JUMPI PUSH2 0x2233 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x223C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2250 JUMPI PUSH2 0x2250 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x226E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2282 JUMPI PUSH2 0x2282 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x22A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22B7 JUMPI PUSH2 0x22B7 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x21A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x2313 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2393 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x239D JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x23D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x242B DUP2 PUSH2 0x23F1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2478 JUMPI PUSH2 0x2478 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x24A0 JUMPI PUSH2 0x24A0 PUSH2 0x2436 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x24B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251F DUP7 DUP3 DUP8 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x253F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x256B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2577 DUP8 DUP3 DUP9 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23D1 DUP2 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x25C3 DUP2 PUSH2 0x23F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2600 DUP9 DUP3 DUP10 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x34 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x94 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x260D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x273A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220333315E24F99645F177E1437 0xC7 0xEE 0xE2 MSTORE8 ISZERO SMOD 0xA7 SWAP10 0xD2 SUB LOG1 0xD5 GASPRICE PUSH23 0xB87AB2E88A9864736F6C63430008140033000000000000 ","sourceMap":"371:6270:15:-:0;;;982:6:13;947:41;;1031:177:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1118:14;1134:13;-1:-1:-1;;;;;2612:28:13;;2604:63;;;;-1:-1:-1;;;2604:63:13;;750:2:18;2604:63:13;;;732:21:18;789:2;769:18;;;762:30;828:24;808:18;;;801:52;870:18;;2604:63:13;;;;;;;;;-1:-1:-1;;;;;2685:27:13;;2677:61;;;;-1:-1:-1;;;2677:61:13;;1101:2:18;2677:61:13;;;1083:21:18;1140:2;1120:18;;;1113:30;1179:23;1159:18;;;1152:51;1220:18;;2677:61:13;899:345:18;2677:61:13;2834:42;2232:4:0;2865:10:13;2834;:42::i;:::-;-1:-1:-1;2886:34:13;711:23;2909:10;2886;:34::i;:::-;-1:-1:-1;2977:13:13;:30;;-1:-1:-1;;;;;2977:30:13;;;-1:-1:-1;;;;;;2977:30:13;;;;;;;3055:5;:37;;;;;;;;;;;-1:-1:-1;;2977:30:13;3150:22;;371:6270:15;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:131:18:-;-1:-1:-1;;;;;89:31:18;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:18;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;899:345::-;371:6270:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_6035":{"entryPoint":null,"id":6035,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@_7171":{"entryPoint":null,"id":7171,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":8555,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":8106,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":8119,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@_processPolicyData_8188":{"entryPoint":null,"id":8188,"parameterSlots":1,"returnSlots":0},"@_revokeRole_294":{"entryPoint":8448,"id":294,"parameterSlots":2,"returnSlots":1},"@_throwError_2357":{"entryPoint":8735,"id":2357,"parameterSlots":2,"returnSlots":0},"@approveClaim_8333":{"entryPoint":2966,"id":8333,"parameterSlots":1,"returnSlots":1},"@calculateRefund_8431":{"entryPoint":5677,"id":8431,"parameterSlots":1,"returnSlots":1},"@cancelPolicy_8686":{"entryPoint":2289,"id":8686,"parameterSlots":3,"returnSlots":0},"@claimExpiryPeriod_6043":{"entryPoint":null,"id":6043,"parameterSlots":0,"returnSlots":0},"@emergencyWithdraw_7149":{"entryPoint":5174,"id":7149,"parameterSlots":1,"returnSlots":0},"@fileClaim_6750":{"entryPoint":4413,"id":6750,"parameterSlots":3,"returnSlots":0},"@generatePolicyId_6440":{"entryPoint":null,"id":6440,"parameterSlots":2,"returnSlots":1},"@getClaim_6966":{"entryPoint":null,"id":6966,"parameterSlots":1,"returnSlots":1},"@getPolicy_6952":{"entryPoint":null,"id":6952,"parameterSlots":1,"returnSlots":1},"@getRemainingCoverage_8373":{"entryPoint":7871,"id":8373,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@grantAdminRole_6373":{"entryPoint":7701,"id":6373,"parameterSlots":1,"returnSlots":0},"@grantRole_147":{"entryPoint":2246,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":5929,"id":80,"parameterSlots":2,"returnSlots":1},"@markExpiredPolicy_7007":{"entryPoint":6242,"id":7007,"parameterSlots":1,"returnSlots":0},"@purchaseHealthPolicy_8224":{"entryPoint":6160,"id":8224,"parameterSlots":5,"returnSlots":0},"@purchasePolicy_6637":{"entryPoint":6447,"id":6637,"parameterSlots":5,"returnSlots":1},"@recover_2114":{"entryPoint":8616,"id":2114,"parameterSlots":2,"returnSlots":1},"@renewPolicy_8583":{"entryPoint":3586,"id":8583,"parameterSlots":4,"returnSlots":0},"@renounceRole_189":{"entryPoint":2910,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeAdminRole_6406":{"entryPoint":5970,"id":6406,"parameterSlots":1,"returnSlots":0},"@revokeRole_166":{"entryPoint":8069,"id":166,"parameterSlots":2,"returnSlots":0},"@setClaimExpiryPeriod_6344":{"entryPoint":2071,"id":6344,"parameterSlots":1,"returnSlots":0},"@setTrustedSigner_6274":{"entryPoint":5332,"id":6274,"parameterSlots":1,"returnSlots":0},"@setVault_6312":{"entryPoint":5505,"id":6312,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2467":{"entryPoint":null,"id":2467,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":2016,"id":62,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_2373":{"entryPoint":null,"id":2373,"parameterSlots":1,"returnSlots":1},"@trustedSigner_6037":{"entryPoint":null,"id":6037,"parameterSlots":0,"returnSlots":0},"@tryRecover_2084":{"entryPoint":8658,"id":2084,"parameterSlots":2,"returnSlots":3},"@tryRecover_2272":{"entryPoint":8920,"id":2272,"parameterSlots":4,"returnSlots":3},"@vault_6040":{"entryPoint":null,"id":6040,"parameterSlots":0,"returnSlots":0},"@verifySignature_6479":{"entryPoint":8265,"id":6479,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":9292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9632,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9222,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr":{"entryPoint":9433,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9513,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":9127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9176,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":9829,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4654520bfb7a1211dc62fbc344559546ad7e0d91b78b10f2db6e35265513c112__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d76cf27bc80af243699efb8730beafe5275b692ea1efbfa6263df73ff30ee004__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9958,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ec47c552a0e8414889fb5ebbf7be1d49d85f9d9e5d9e3476751b87f7e80e6738__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9920,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10013,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9763,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9939,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9741,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10047,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9270,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":9201,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20183:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"205:14:18","statements":[{"nodeType":"YulAssignment","src":"207:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"214:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"207:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"189:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"197:3:18","type":""}],"src":"14:205:18"},{"body":{"nodeType":"YulBlock","src":"398:180:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"426:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"408:6:18"},"nodeType":"YulFunctionCall","src":"408:21:18"},"nodeType":"YulExpressionStatement","src":"408:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"449:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"445:3:18"},"nodeType":"YulFunctionCall","src":"445:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:18","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"438:6:18"},"nodeType":"YulFunctionCall","src":"438:30:18"},"nodeType":"YulExpressionStatement","src":"438:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"488:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"499:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"484:3:18"},"nodeType":"YulFunctionCall","src":"484:18:18"},{"hexValue":"45544820666f7277617264696e6720746f207661756c74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"504:32:18","type":"","value":"ETH forwarding to vault failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"477:6:18"},"nodeType":"YulFunctionCall","src":"477:60:18"},"nodeType":"YulExpressionStatement","src":"477:60:18"},{"nodeType":"YulAssignment","src":"546:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"558:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"569:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"554:3:18"},"nodeType":"YulFunctionCall","src":"554:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"546:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"375:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"389:4:18","type":""}],"src":"224:354:18"},{"body":{"nodeType":"YulBlock","src":"652:217:18","statements":[{"body":{"nodeType":"YulBlock","src":"698:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"710:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"700:6:18"},"nodeType":"YulFunctionCall","src":"700:12:18"},"nodeType":"YulExpressionStatement","src":"700:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"673:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"682:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"669:3:18"},"nodeType":"YulFunctionCall","src":"669:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"694:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"665:3:18"},"nodeType":"YulFunctionCall","src":"665:32:18"},"nodeType":"YulIf","src":"662:52:18"},{"nodeType":"YulVariableDeclaration","src":"723:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"749:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"736:12:18"},"nodeType":"YulFunctionCall","src":"736:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"727:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"823:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:18"},"nodeType":"YulFunctionCall","src":"825:12:18"},"nodeType":"YulExpressionStatement","src":"825:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"792:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"808:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"799:3:18"},"nodeType":"YulFunctionCall","src":"799:20:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"788:3:18"},"nodeType":"YulFunctionCall","src":"788:32:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"778:2:18"},"nodeType":"YulFunctionCall","src":"778:43:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"771:6:18"},"nodeType":"YulFunctionCall","src":"771:51:18"},"nodeType":"YulIf","src":"768:71:18"},{"nodeType":"YulAssignment","src":"848:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"858:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"848:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"618:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"629:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"641:6:18","type":""}],"src":"583:286:18"},{"body":{"nodeType":"YulBlock","src":"969:92:18","statements":[{"nodeType":"YulAssignment","src":"979:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1002:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:18"},"nodeType":"YulFunctionCall","src":"987:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"979:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1046:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1039:6:18"},"nodeType":"YulFunctionCall","src":"1039:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1032:6:18"},"nodeType":"YulFunctionCall","src":"1032:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1014:6:18"},"nodeType":"YulFunctionCall","src":"1014:41:18"},"nodeType":"YulExpressionStatement","src":"1014:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"938:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"949:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"960:4:18","type":""}],"src":"874:187:18"},{"body":{"nodeType":"YulBlock","src":"1136:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1182:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1191:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1184:6:18"},"nodeType":"YulFunctionCall","src":"1184:12:18"},"nodeType":"YulExpressionStatement","src":"1184:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1157:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1153:3:18"},"nodeType":"YulFunctionCall","src":"1153:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1178:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1149:3:18"},"nodeType":"YulFunctionCall","src":"1149:32:18"},"nodeType":"YulIf","src":"1146:52:18"},{"nodeType":"YulAssignment","src":"1207:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1217:12:18"},"nodeType":"YulFunctionCall","src":"1217:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1207:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1102:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1113:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1125:6:18","type":""}],"src":"1066:180:18"},{"body":{"nodeType":"YulBlock","src":"1321:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1367:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1376:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1379:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1369:6:18"},"nodeType":"YulFunctionCall","src":"1369:12:18"},"nodeType":"YulExpressionStatement","src":"1369:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1342:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1338:3:18"},"nodeType":"YulFunctionCall","src":"1338:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1363:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1334:3:18"},"nodeType":"YulFunctionCall","src":"1334:32:18"},"nodeType":"YulIf","src":"1331:52:18"},{"nodeType":"YulAssignment","src":"1392:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1415:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1402:12:18"},"nodeType":"YulFunctionCall","src":"1402:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1392:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1287:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1298:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1310:6:18","type":""}],"src":"1251:180:18"},{"body":{"nodeType":"YulBlock","src":"1537:76:18","statements":[{"nodeType":"YulAssignment","src":"1547:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1559:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1570:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1555:3:18"},"nodeType":"YulFunctionCall","src":"1555:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1547:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1589:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1600:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1582:6:18"},"nodeType":"YulFunctionCall","src":"1582:25:18"},"nodeType":"YulExpressionStatement","src":"1582:25:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1506:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1517:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1528:4:18","type":""}],"src":"1436:177:18"},{"body":{"nodeType":"YulBlock","src":"1663:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"1727:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1736:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1739:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1729:6:18"},"nodeType":"YulFunctionCall","src":"1729:12:18"},"nodeType":"YulExpressionStatement","src":"1729:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1686:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1697:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1712:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1708:3:18"},"nodeType":"YulFunctionCall","src":"1708:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1721:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1704:3:18"},"nodeType":"YulFunctionCall","src":"1704:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1693:3:18"},"nodeType":"YulFunctionCall","src":"1693:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1683:2:18"},"nodeType":"YulFunctionCall","src":"1683:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1676:6:18"},"nodeType":"YulFunctionCall","src":"1676:50:18"},"nodeType":"YulIf","src":"1673:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1652:5:18","type":""}],"src":"1618:131:18"},{"body":{"nodeType":"YulBlock","src":"1841:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"1887:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1896:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1889:6:18"},"nodeType":"YulFunctionCall","src":"1889:12:18"},"nodeType":"YulExpressionStatement","src":"1889:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1862:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1854:3:18"},"nodeType":"YulFunctionCall","src":"1854:32:18"},"nodeType":"YulIf","src":"1851:52:18"},{"nodeType":"YulAssignment","src":"1912:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1935:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1922:12:18"},"nodeType":"YulFunctionCall","src":"1922:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1912:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1954:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1984:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1995:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1980:3:18"},"nodeType":"YulFunctionCall","src":"1980:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1967:12:18"},"nodeType":"YulFunctionCall","src":"1967:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1958:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2033:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2008:24:18"},"nodeType":"YulFunctionCall","src":"2008:31:18"},"nodeType":"YulExpressionStatement","src":"2008:31:18"},{"nodeType":"YulAssignment","src":"2048:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2058:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2048:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1799:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1810:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1822:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1830:6:18","type":""}],"src":"1754:315:18"},{"body":{"nodeType":"YulBlock","src":"2106:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2123:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2130:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2135:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2126:3:18"},"nodeType":"YulFunctionCall","src":"2126:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2116:6:18"},"nodeType":"YulFunctionCall","src":"2116:31:18"},"nodeType":"YulExpressionStatement","src":"2116:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2163:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2166:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2156:6:18"},"nodeType":"YulFunctionCall","src":"2156:15:18"},"nodeType":"YulExpressionStatement","src":"2156:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2187:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2190:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2180:6:18"},"nodeType":"YulFunctionCall","src":"2180:15:18"},"nodeType":"YulExpressionStatement","src":"2180:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2074:127:18"},{"body":{"nodeType":"YulBlock","src":"2258:666:18","statements":[{"body":{"nodeType":"YulBlock","src":"2307:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2316:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2319:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2309:6:18"},"nodeType":"YulFunctionCall","src":"2309:12:18"},"nodeType":"YulExpressionStatement","src":"2309:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2286:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2294:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:18"},"nodeType":"YulFunctionCall","src":"2282:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2301:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2278:3:18"},"nodeType":"YulFunctionCall","src":"2278:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2271:6:18"},"nodeType":"YulFunctionCall","src":"2271:35:18"},"nodeType":"YulIf","src":"2268:55:18"},{"nodeType":"YulVariableDeclaration","src":"2332:30:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2355:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2342:12:18"},"nodeType":"YulFunctionCall","src":"2342:20:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2336:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2371:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2381:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2375:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2422:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2424:16:18"},"nodeType":"YulFunctionCall","src":"2424:18:18"},"nodeType":"YulExpressionStatement","src":"2424:18:18"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2414:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"2418:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2411:2:18"},"nodeType":"YulFunctionCall","src":"2411:10:18"},"nodeType":"YulIf","src":"2408:36:18"},{"nodeType":"YulVariableDeclaration","src":"2453:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2467:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2463:3:18"},"nodeType":"YulFunctionCall","src":"2463:7:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2457:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2493:5:18"},"nodeType":"YulFunctionCall","src":"2493:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2483:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2511:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2533:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2557:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"2561:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2553:3:18"},"nodeType":"YulFunctionCall","src":"2553:13:18"},{"name":"_3","nodeType":"YulIdentifier","src":"2568:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2549:3:18"},"nodeType":"YulFunctionCall","src":"2549:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"2573:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2545:3:18"},"nodeType":"YulFunctionCall","src":"2545:31:18"},{"name":"_3","nodeType":"YulIdentifier","src":"2578:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:18"},"nodeType":"YulFunctionCall","src":"2541:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2529:3:18"},"nodeType":"YulFunctionCall","src":"2529:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2515:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2641:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2643:16:18"},"nodeType":"YulFunctionCall","src":"2643:18:18"},"nodeType":"YulExpressionStatement","src":"2643:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2600:10:18"},{"name":"_2","nodeType":"YulIdentifier","src":"2612:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2597:2:18"},"nodeType":"YulFunctionCall","src":"2597:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2620:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2632:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2617:2:18"},"nodeType":"YulFunctionCall","src":"2617:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2594:2:18"},"nodeType":"YulFunctionCall","src":"2594:46:18"},"nodeType":"YulIf","src":"2591:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2679:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2683:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2672:6:18"},"nodeType":"YulFunctionCall","src":"2672:22:18"},"nodeType":"YulExpressionStatement","src":"2672:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2710:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2718:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2703:6:18"},"nodeType":"YulFunctionCall","src":"2703:18:18"},"nodeType":"YulExpressionStatement","src":"2703:18:18"},{"body":{"nodeType":"YulBlock","src":"2769:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2778:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2781:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2771:6:18"},"nodeType":"YulFunctionCall","src":"2771:12:18"},"nodeType":"YulExpressionStatement","src":"2771:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2752:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2740:3:18"},"nodeType":"YulFunctionCall","src":"2740:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"2757:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2736:3:18"},"nodeType":"YulFunctionCall","src":"2736:26:18"},{"name":"end","nodeType":"YulIdentifier","src":"2764:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2733:2:18"},"nodeType":"YulFunctionCall","src":"2733:35:18"},"nodeType":"YulIf","src":"2730:55:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2811:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2819:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2807:3:18"},"nodeType":"YulFunctionCall","src":"2807:17:18"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2838:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:18"},"nodeType":"YulFunctionCall","src":"2826:17:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2845:2:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2794:12:18"},"nodeType":"YulFunctionCall","src":"2794:54:18"},"nodeType":"YulExpressionStatement","src":"2794:54:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2872:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2880:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2868:3:18"},"nodeType":"YulFunctionCall","src":"2868:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"2885:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2864:3:18"},"nodeType":"YulFunctionCall","src":"2864:26:18"},{"kind":"number","nodeType":"YulLiteral","src":"2892:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2857:6:18"},"nodeType":"YulFunctionCall","src":"2857:37:18"},"nodeType":"YulExpressionStatement","src":"2857:37:18"},{"nodeType":"YulAssignment","src":"2903:15:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2903:5:18"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2232:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2240:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2248:5:18","type":""}],"src":"2206:718:18"},{"body":{"nodeType":"YulBlock","src":"3042:343:18","statements":[{"body":{"nodeType":"YulBlock","src":"3088:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3100:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3090:6:18"},"nodeType":"YulFunctionCall","src":"3090:12:18"},"nodeType":"YulExpressionStatement","src":"3090:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3063:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3072:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3059:3:18"},"nodeType":"YulFunctionCall","src":"3059:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3084:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3055:3:18"},"nodeType":"YulFunctionCall","src":"3055:32:18"},"nodeType":"YulIf","src":"3052:52:18"},{"nodeType":"YulAssignment","src":"3113:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3136:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3123:12:18"},"nodeType":"YulFunctionCall","src":"3123:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3113:6:18"}]},{"nodeType":"YulAssignment","src":"3155:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3182:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3193:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3178:3:18"},"nodeType":"YulFunctionCall","src":"3178:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3165:12:18"},"nodeType":"YulFunctionCall","src":"3165:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3155:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3206:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3237:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3248:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:18"},"nodeType":"YulFunctionCall","src":"3233:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3220:12:18"},"nodeType":"YulFunctionCall","src":"3220:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3210:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3295:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3304:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3307:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3297:6:18"},"nodeType":"YulFunctionCall","src":"3297:12:18"},"nodeType":"YulExpressionStatement","src":"3297:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3267:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3275:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3264:2:18"},"nodeType":"YulFunctionCall","src":"3264:30:18"},"nodeType":"YulIf","src":"3261:50:18"},{"nodeType":"YulAssignment","src":"3320:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3351:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3362:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3347:3:18"},"nodeType":"YulFunctionCall","src":"3347:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3371:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3330:16:18"},"nodeType":"YulFunctionCall","src":"3330:49:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3320:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2992:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3003:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3015:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3023:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3031:6:18","type":""}],"src":"2929:456:18"},{"body":{"nodeType":"YulBlock","src":"3491:76:18","statements":[{"nodeType":"YulAssignment","src":"3501:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3513:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3509:3:18"},"nodeType":"YulFunctionCall","src":"3509:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3543:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3554:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3536:6:18"},"nodeType":"YulFunctionCall","src":"3536:25:18"},"nodeType":"YulExpressionStatement","src":"3536:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3460:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3471:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3482:4:18","type":""}],"src":"3390:177:18"},{"body":{"nodeType":"YulBlock","src":"3702:395:18","statements":[{"body":{"nodeType":"YulBlock","src":"3749:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3758:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3761:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3751:6:18"},"nodeType":"YulFunctionCall","src":"3751:12:18"},"nodeType":"YulExpressionStatement","src":"3751:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3723:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3732:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3719:3:18"},"nodeType":"YulFunctionCall","src":"3719:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3744:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3715:3:18"},"nodeType":"YulFunctionCall","src":"3715:33:18"},"nodeType":"YulIf","src":"3712:53:18"},{"nodeType":"YulAssignment","src":"3774:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3784:12:18"},"nodeType":"YulFunctionCall","src":"3784:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3774:6:18"}]},{"nodeType":"YulAssignment","src":"3816:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3854:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:18"},"nodeType":"YulFunctionCall","src":"3839:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3826:12:18"},"nodeType":"YulFunctionCall","src":"3826:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3816:6:18"}]},{"nodeType":"YulAssignment","src":"3867:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3894:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3905:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3890:3:18"},"nodeType":"YulFunctionCall","src":"3890:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3877:12:18"},"nodeType":"YulFunctionCall","src":"3877:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3867:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3918:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3949:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3960:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3945:3:18"},"nodeType":"YulFunctionCall","src":"3945:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3932:12:18"},"nodeType":"YulFunctionCall","src":"3932:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3922:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4007:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4016:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4019:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4009:6:18"},"nodeType":"YulFunctionCall","src":"4009:12:18"},"nodeType":"YulExpressionStatement","src":"4009:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3979:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3987:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3976:2:18"},"nodeType":"YulFunctionCall","src":"3976:30:18"},"nodeType":"YulIf","src":"3973:50:18"},{"nodeType":"YulAssignment","src":"4032:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4063:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4074:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4059:3:18"},"nodeType":"YulFunctionCall","src":"4059:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4083:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4042:16:18"},"nodeType":"YulFunctionCall","src":"4042:49:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4032:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3644:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3655:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3667:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3675:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3683:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3691:6:18","type":""}],"src":"3572:525:18"},{"body":{"nodeType":"YulBlock","src":"4172:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"4218:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4227:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4230:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4220:6:18"},"nodeType":"YulFunctionCall","src":"4220:12:18"},"nodeType":"YulExpressionStatement","src":"4220:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4193:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4202:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4189:3:18"},"nodeType":"YulFunctionCall","src":"4189:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4185:3:18"},"nodeType":"YulFunctionCall","src":"4185:32:18"},"nodeType":"YulIf","src":"4182:52:18"},{"nodeType":"YulVariableDeclaration","src":"4243:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4269:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4256:12:18"},"nodeType":"YulFunctionCall","src":"4256:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4247:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4313:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4288:24:18"},"nodeType":"YulFunctionCall","src":"4288:31:18"},"nodeType":"YulExpressionStatement","src":"4288:31:18"},{"nodeType":"YulAssignment","src":"4328:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4338:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4328:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4138:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4149:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4161:6:18","type":""}],"src":"4102:247:18"},{"body":{"nodeType":"YulBlock","src":"4432:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"4478:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4487:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4490:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4480:6:18"},"nodeType":"YulFunctionCall","src":"4480:12:18"},"nodeType":"YulExpressionStatement","src":"4480:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4453:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4449:3:18"},"nodeType":"YulFunctionCall","src":"4449:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4474:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4445:3:18"},"nodeType":"YulFunctionCall","src":"4445:32:18"},"nodeType":"YulIf","src":"4442:52:18"},{"nodeType":"YulVariableDeclaration","src":"4503:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4529:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4516:12:18"},"nodeType":"YulFunctionCall","src":"4516:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4507:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4573:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4548:24:18"},"nodeType":"YulFunctionCall","src":"4548:31:18"},"nodeType":"YulExpressionStatement","src":"4548:31:18"},{"nodeType":"YulAssignment","src":"4588:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4598:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4588:6:18"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4398:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4409:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4421:6:18","type":""}],"src":"4354:255:18"},{"body":{"nodeType":"YulBlock","src":"4763:583:18","statements":[{"nodeType":"YulAssignment","src":"4773:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4785:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4796:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:18"},"nodeType":"YulFunctionCall","src":"4781:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4773:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4816:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4833:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4827:5:18"},"nodeType":"YulFunctionCall","src":"4827:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4809:6:18"},"nodeType":"YulFunctionCall","src":"4809:32:18"},"nodeType":"YulExpressionStatement","src":"4809:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4872:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4857:3:18"},"nodeType":"YulFunctionCall","src":"4857:20:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4893:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4901:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4889:3:18"},"nodeType":"YulFunctionCall","src":"4889:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4883:5:18"},"nodeType":"YulFunctionCall","src":"4883:24:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4917:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4922:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4913:3:18"},"nodeType":"YulFunctionCall","src":"4913:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4926:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4909:3:18"},"nodeType":"YulFunctionCall","src":"4909:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:18"},"nodeType":"YulFunctionCall","src":"4879:50:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:18"},"nodeType":"YulFunctionCall","src":"4850:80:18"},"nodeType":"YulExpressionStatement","src":"4850:80:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4950:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4961:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4946:3:18"},"nodeType":"YulFunctionCall","src":"4946:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4978:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4986:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4974:3:18"},"nodeType":"YulFunctionCall","src":"4974:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4968:5:18"},"nodeType":"YulFunctionCall","src":"4968:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4939:6:18"},"nodeType":"YulFunctionCall","src":"4939:54:18"},"nodeType":"YulExpressionStatement","src":"4939:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5013:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5024:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5009:3:18"},"nodeType":"YulFunctionCall","src":"5009:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5041:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5049:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5037:3:18"},"nodeType":"YulFunctionCall","src":"5037:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5031:5:18"},"nodeType":"YulFunctionCall","src":"5031:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5002:6:18"},"nodeType":"YulFunctionCall","src":"5002:54:18"},"nodeType":"YulExpressionStatement","src":"5002:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5076:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5087:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5072:3:18"},"nodeType":"YulFunctionCall","src":"5072:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5104:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5112:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:18"},"nodeType":"YulFunctionCall","src":"5100:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5094:5:18"},"nodeType":"YulFunctionCall","src":"5094:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5065:6:18"},"nodeType":"YulFunctionCall","src":"5065:54:18"},"nodeType":"YulExpressionStatement","src":"5065:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5139:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5150:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5135:3:18"},"nodeType":"YulFunctionCall","src":"5135:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5181:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5189:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5177:3:18"},"nodeType":"YulFunctionCall","src":"5177:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5171:5:18"},"nodeType":"YulFunctionCall","src":"5171:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5164:6:18"},"nodeType":"YulFunctionCall","src":"5164:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5157:6:18"},"nodeType":"YulFunctionCall","src":"5157:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5128:6:18"},"nodeType":"YulFunctionCall","src":"5128:70:18"},"nodeType":"YulExpressionStatement","src":"5128:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5218:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5229:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5214:3:18"},"nodeType":"YulFunctionCall","src":"5214:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5260:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5268:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5256:3:18"},"nodeType":"YulFunctionCall","src":"5256:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5250:5:18"},"nodeType":"YulFunctionCall","src":"5250:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5243:6:18"},"nodeType":"YulFunctionCall","src":"5243:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5236:6:18"},"nodeType":"YulFunctionCall","src":"5236:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5207:6:18"},"nodeType":"YulFunctionCall","src":"5207:70:18"},"nodeType":"YulExpressionStatement","src":"5207:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5297:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5308:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5293:3:18"},"nodeType":"YulFunctionCall","src":"5293:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5325:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5333:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:18"},"nodeType":"YulFunctionCall","src":"5321:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5315:5:18"},"nodeType":"YulFunctionCall","src":"5315:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:18"},"nodeType":"YulFunctionCall","src":"5286:54:18"},"nodeType":"YulExpressionStatement","src":"5286:54:18"}]},"name":"abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4732:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4743:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4754:4:18","type":""}],"src":"4614:732:18"},{"body":{"nodeType":"YulBlock","src":"5498:514:18","statements":[{"body":{"nodeType":"YulBlock","src":"5545:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5554:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5557:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5547:6:18"},"nodeType":"YulFunctionCall","src":"5547:12:18"},"nodeType":"YulExpressionStatement","src":"5547:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5519:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5528:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5515:3:18"},"nodeType":"YulFunctionCall","src":"5515:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5540:3:18","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5511:3:18"},"nodeType":"YulFunctionCall","src":"5511:33:18"},"nodeType":"YulIf","src":"5508:53:18"},{"nodeType":"YulVariableDeclaration","src":"5570:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5596:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5583:12:18"},"nodeType":"YulFunctionCall","src":"5583:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5574:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5640:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5615:24:18"},"nodeType":"YulFunctionCall","src":"5615:31:18"},"nodeType":"YulExpressionStatement","src":"5615:31:18"},{"nodeType":"YulAssignment","src":"5655:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5665:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5655:6:18"}]},{"nodeType":"YulAssignment","src":"5679:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5706:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5717:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5702:3:18"},"nodeType":"YulFunctionCall","src":"5702:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5689:12:18"},"nodeType":"YulFunctionCall","src":"5689:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5679:6:18"}]},{"nodeType":"YulAssignment","src":"5730:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5757:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5768:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5753:3:18"},"nodeType":"YulFunctionCall","src":"5753:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5740:12:18"},"nodeType":"YulFunctionCall","src":"5740:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5730:6:18"}]},{"nodeType":"YulAssignment","src":"5781:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5808:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5819:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5804:3:18"},"nodeType":"YulFunctionCall","src":"5804:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5791:12:18"},"nodeType":"YulFunctionCall","src":"5791:32:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5781:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5832:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5863:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5874:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5859:3:18"},"nodeType":"YulFunctionCall","src":"5859:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5846:12:18"},"nodeType":"YulFunctionCall","src":"5846:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5836:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5922:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5931:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5934:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5924:6:18"},"nodeType":"YulFunctionCall","src":"5924:12:18"},"nodeType":"YulExpressionStatement","src":"5924:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5894:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5902:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5891:2:18"},"nodeType":"YulFunctionCall","src":"5891:30:18"},"nodeType":"YulIf","src":"5888:50:18"},{"nodeType":"YulAssignment","src":"5947:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5978:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5989:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5974:3:18"},"nodeType":"YulFunctionCall","src":"5974:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5998:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5957:16:18"},"nodeType":"YulFunctionCall","src":"5957:49:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5947:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5432:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5443:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5455:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5463:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5471:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5479:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5487:6:18","type":""}],"src":"5351:661:18"},{"body":{"nodeType":"YulBlock","src":"6178:352:18","statements":[{"nodeType":"YulAssignment","src":"6188:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6200:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6211:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6196:3:18"},"nodeType":"YulFunctionCall","src":"6196:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6231:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6248:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6242:5:18"},"nodeType":"YulFunctionCall","src":"6242:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6224:6:18"},"nodeType":"YulFunctionCall","src":"6224:32:18"},"nodeType":"YulExpressionStatement","src":"6224:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6276:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6287:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:18"},"nodeType":"YulFunctionCall","src":"6272:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6304:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6312:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6300:3:18"},"nodeType":"YulFunctionCall","src":"6300:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6294:5:18"},"nodeType":"YulFunctionCall","src":"6294:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6265:6:18"},"nodeType":"YulFunctionCall","src":"6265:54:18"},"nodeType":"YulExpressionStatement","src":"6265:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6339:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6350:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6335:3:18"},"nodeType":"YulFunctionCall","src":"6335:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6381:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6389:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:18"},"nodeType":"YulFunctionCall","src":"6377:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6371:5:18"},"nodeType":"YulFunctionCall","src":"6371:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6364:6:18"},"nodeType":"YulFunctionCall","src":"6364:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6357:6:18"},"nodeType":"YulFunctionCall","src":"6357:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:18"},"nodeType":"YulFunctionCall","src":"6328:70:18"},"nodeType":"YulExpressionStatement","src":"6328:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6418:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6429:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6414:3:18"},"nodeType":"YulFunctionCall","src":"6414:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6446:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6454:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6442:3:18"},"nodeType":"YulFunctionCall","src":"6442:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6436:5:18"},"nodeType":"YulFunctionCall","src":"6436:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6407:6:18"},"nodeType":"YulFunctionCall","src":"6407:54:18"},"nodeType":"YulExpressionStatement","src":"6407:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6481:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6492:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6477:3:18"},"nodeType":"YulFunctionCall","src":"6477:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6509:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6517:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:18"},"nodeType":"YulFunctionCall","src":"6505:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6499:5:18"},"nodeType":"YulFunctionCall","src":"6499:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6470:6:18"},"nodeType":"YulFunctionCall","src":"6470:54:18"},"nodeType":"YulExpressionStatement","src":"6470:54:18"}]},"name":"abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6147:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6158:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6169:4:18","type":""}],"src":"6017:513:18"},{"body":{"nodeType":"YulBlock","src":"6636:102:18","statements":[{"nodeType":"YulAssignment","src":"6646:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6658:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6669:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6654:3:18"},"nodeType":"YulFunctionCall","src":"6654:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6646:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6688:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6703:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6719:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6724:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6715:3:18"},"nodeType":"YulFunctionCall","src":"6715:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"6728:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6711:3:18"},"nodeType":"YulFunctionCall","src":"6711:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6699:3:18"},"nodeType":"YulFunctionCall","src":"6699:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6681:6:18"},"nodeType":"YulFunctionCall","src":"6681:51:18"},"nodeType":"YulExpressionStatement","src":"6681:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6605:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6616:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6627:4:18","type":""}],"src":"6535:203:18"},{"body":{"nodeType":"YulBlock","src":"6875:102:18","statements":[{"nodeType":"YulAssignment","src":"6885:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6897:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6908:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6893:3:18"},"nodeType":"YulFunctionCall","src":"6893:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6885:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6927:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6942:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6958:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6963:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6954:3:18"},"nodeType":"YulFunctionCall","src":"6954:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"6967:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6950:3:18"},"nodeType":"YulFunctionCall","src":"6950:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6938:3:18"},"nodeType":"YulFunctionCall","src":"6938:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6920:6:18"},"nodeType":"YulFunctionCall","src":"6920:51:18"},"nodeType":"YulExpressionStatement","src":"6920:51:18"}]},"name":"abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6844:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6855:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6866:4:18","type":""}],"src":"6743:234:18"},{"body":{"nodeType":"YulBlock","src":"7156:173:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7173:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7184:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7166:6:18"},"nodeType":"YulFunctionCall","src":"7166:21:18"},"nodeType":"YulExpressionStatement","src":"7166:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7207:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7218:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7203:3:18"},"nodeType":"YulFunctionCall","src":"7203:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"7223:2:18","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7196:6:18"},"nodeType":"YulFunctionCall","src":"7196:30:18"},"nodeType":"YulExpressionStatement","src":"7196:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:18"},"nodeType":"YulFunctionCall","src":"7242:18:18"},{"hexValue":"506572696f64206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"7262:25:18","type":"","value":"Period must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7235:6:18"},"nodeType":"YulFunctionCall","src":"7235:53:18"},"nodeType":"YulExpressionStatement","src":"7235:53:18"},{"nodeType":"YulAssignment","src":"7297:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7320:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7305:3:18"},"nodeType":"YulFunctionCall","src":"7305:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7297:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7133:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7147:4:18","type":""}],"src":"6982:347:18"},{"body":{"nodeType":"YulBlock","src":"7366:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7390:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7395:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7386:3:18"},"nodeType":"YulFunctionCall","src":"7386:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:18"},"nodeType":"YulFunctionCall","src":"7376:31:18"},"nodeType":"YulExpressionStatement","src":"7376:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7423:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7426:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7416:6:18"},"nodeType":"YulFunctionCall","src":"7416:15:18"},"nodeType":"YulExpressionStatement","src":"7416:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7447:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7450:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7440:6:18"},"nodeType":"YulFunctionCall","src":"7440:15:18"},"nodeType":"YulExpressionStatement","src":"7440:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7334:127:18"},{"body":{"nodeType":"YulBlock","src":"7518:116:18","statements":[{"nodeType":"YulAssignment","src":"7528:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7543:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7546:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7539:3:18"},"nodeType":"YulFunctionCall","src":"7539:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7528:7:18"}]},{"body":{"nodeType":"YulBlock","src":"7606:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7608:16:18"},"nodeType":"YulFunctionCall","src":"7608:18:18"},"nodeType":"YulExpressionStatement","src":"7608:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7577:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7570:6:18"},"nodeType":"YulFunctionCall","src":"7570:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7584:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7591:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"7600:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7587:3:18"},"nodeType":"YulFunctionCall","src":"7587:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7581:2:18"},"nodeType":"YulFunctionCall","src":"7581:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7567:2:18"},"nodeType":"YulFunctionCall","src":"7567:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7560:6:18"},"nodeType":"YulFunctionCall","src":"7560:45:18"},"nodeType":"YulIf","src":"7557:71:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7497:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7500:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7506:7:18","type":""}],"src":"7466:168:18"},{"body":{"nodeType":"YulBlock","src":"7768:119:18","statements":[{"nodeType":"YulAssignment","src":"7778:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7790:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7801:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:18"},"nodeType":"YulFunctionCall","src":"7786:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7778:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7820:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7831:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7813:6:18"},"nodeType":"YulFunctionCall","src":"7813:25:18"},"nodeType":"YulExpressionStatement","src":"7813:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7858:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7869:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7854:3:18"},"nodeType":"YulFunctionCall","src":"7854:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7874:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7847:6:18"},"nodeType":"YulFunctionCall","src":"7847:34:18"},"nodeType":"YulExpressionStatement","src":"7847:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7729:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7740:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7748:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7759:4:18","type":""}],"src":"7639:248:18"},{"body":{"nodeType":"YulBlock","src":"8066:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8083:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8094:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8076:6:18"},"nodeType":"YulFunctionCall","src":"8076:21:18"},"nodeType":"YulExpressionStatement","src":"8076:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8117:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8128:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8113:3:18"},"nodeType":"YulFunctionCall","src":"8113:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"8133:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8106:6:18"},"nodeType":"YulFunctionCall","src":"8106:30:18"},"nodeType":"YulExpressionStatement","src":"8106:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8156:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8167:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:18"},"nodeType":"YulFunctionCall","src":"8152:18:18"},{"hexValue":"506f6c696379206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"8172:19:18","type":"","value":"Policy not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8145:6:18"},"nodeType":"YulFunctionCall","src":"8145:47:18"},"nodeType":"YulExpressionStatement","src":"8145:47:18"},{"nodeType":"YulAssignment","src":"8201:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8213:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8224:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8209:3:18"},"nodeType":"YulFunctionCall","src":"8209:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8201:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8043:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8057:4:18","type":""}],"src":"7892:341:18"},{"body":{"nodeType":"YulBlock","src":"8412:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8429:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8440:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8422:6:18"},"nodeType":"YulFunctionCall","src":"8422:21:18"},"nodeType":"YulExpressionStatement","src":"8422:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8463:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8474:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8459:3:18"},"nodeType":"YulFunctionCall","src":"8459:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"8479:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8452:6:18"},"nodeType":"YulFunctionCall","src":"8452:30:18"},"nodeType":"YulExpressionStatement","src":"8452:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8502:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8513:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8498:3:18"},"nodeType":"YulFunctionCall","src":"8498:18:18"},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"8518:24:18","type":"","value":"Policy already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8491:6:18"},"nodeType":"YulFunctionCall","src":"8491:52:18"},"nodeType":"YulExpressionStatement","src":"8491:52:18"},{"nodeType":"YulAssignment","src":"8552:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8564:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8575:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:18"},"nodeType":"YulFunctionCall","src":"8560:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8552:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8389:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8403:4:18","type":""}],"src":"8238:346:18"},{"body":{"nodeType":"YulBlock","src":"8820:260:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8837:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"8842:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8830:6:18"},"nodeType":"YulFunctionCall","src":"8830:19:18"},"nodeType":"YulExpressionStatement","src":"8830:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8869:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8874:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8865:3:18"},"nodeType":"YulFunctionCall","src":"8865:12:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8887:2:18","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"8891:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8883:3:18"},"nodeType":"YulFunctionCall","src":"8883:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8904:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8900:3:18"},"nodeType":"YulFunctionCall","src":"8900:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8879:3:18"},"nodeType":"YulFunctionCall","src":"8879:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8858:6:18"},"nodeType":"YulFunctionCall","src":"8858:75:18"},"nodeType":"YulExpressionStatement","src":"8858:75:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8953:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8958:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8949:3:18"},"nodeType":"YulFunctionCall","src":"8949:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"8963:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8942:6:18"},"nodeType":"YulFunctionCall","src":"8942:28:18"},"nodeType":"YulExpressionStatement","src":"8942:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8990:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8995:2:18","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8986:3:18"},"nodeType":"YulFunctionCall","src":"8986:12:18"},{"name":"value3","nodeType":"YulIdentifier","src":"9000:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8979:6:18"},"nodeType":"YulFunctionCall","src":"8979:28:18"},"nodeType":"YulExpressionStatement","src":"8979:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9027:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9032:3:18","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:18"},"nodeType":"YulFunctionCall","src":"9023:13:18"},{"name":"value4","nodeType":"YulIdentifier","src":"9038:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9016:6:18"},"nodeType":"YulFunctionCall","src":"9016:29:18"},"nodeType":"YulExpressionStatement","src":"9016:29:18"},{"nodeType":"YulAssignment","src":"9054:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9070:3:18","type":"","value":"148"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9061:3:18"},"nodeType":"YulFunctionCall","src":"9061:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9054:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8764:3:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8769:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8777:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8785:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8793:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8801:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8812:3:18","type":""}],"src":"8589:491:18"},{"body":{"nodeType":"YulBlock","src":"9259:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9276:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9287:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9269:6:18"},"nodeType":"YulFunctionCall","src":"9269:21:18"},"nodeType":"YulExpressionStatement","src":"9269:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9310:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9321:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9306:3:18"},"nodeType":"YulFunctionCall","src":"9306:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"9326:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9299:6:18"},"nodeType":"YulFunctionCall","src":"9299:30:18"},"nodeType":"YulExpressionStatement","src":"9299:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9349:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9360:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9345:3:18"},"nodeType":"YulFunctionCall","src":"9345:18:18"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"9365:19:18","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9338:6:18"},"nodeType":"YulFunctionCall","src":"9338:47:18"},"nodeType":"YulExpressionStatement","src":"9338:47:18"},{"nodeType":"YulAssignment","src":"9394:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9406:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9417:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9402:3:18"},"nodeType":"YulFunctionCall","src":"9402:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9394:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9236:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9250:4:18","type":""}],"src":"9085:341:18"},{"body":{"nodeType":"YulBlock","src":"9576:145:18","statements":[{"nodeType":"YulAssignment","src":"9586:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9598:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9609:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9594:3:18"},"nodeType":"YulFunctionCall","src":"9594:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9586:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9628:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9643:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9659:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9664:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9655:3:18"},"nodeType":"YulFunctionCall","src":"9655:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"9668:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9651:3:18"},"nodeType":"YulFunctionCall","src":"9651:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9639:3:18"},"nodeType":"YulFunctionCall","src":"9639:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9621:6:18"},"nodeType":"YulFunctionCall","src":"9621:51:18"},"nodeType":"YulExpressionStatement","src":"9621:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9692:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9703:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9688:3:18"},"nodeType":"YulFunctionCall","src":"9688:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"9708:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9681:6:18"},"nodeType":"YulFunctionCall","src":"9681:34:18"},"nodeType":"YulExpressionStatement","src":"9681:34:18"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9537:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9548:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9556:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9567:4:18","type":""}],"src":"9431:290:18"},{"body":{"nodeType":"YulBlock","src":"9900:166:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9917:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9928:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9910:6:18"},"nodeType":"YulFunctionCall","src":"9910:21:18"},"nodeType":"YulExpressionStatement","src":"9910:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9951:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9962:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9947:3:18"},"nodeType":"YulFunctionCall","src":"9947:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"9967:2:18","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9940:6:18"},"nodeType":"YulFunctionCall","src":"9940:30:18"},"nodeType":"YulExpressionStatement","src":"9940:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9990:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10001:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9986:3:18"},"nodeType":"YulFunctionCall","src":"9986:18:18"},{"hexValue":"4e6f2070656e64696e6720636c61696d","kind":"string","nodeType":"YulLiteral","src":"10006:18:18","type":"","value":"No pending claim"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9979:6:18"},"nodeType":"YulFunctionCall","src":"9979:46:18"},"nodeType":"YulExpressionStatement","src":"9979:46:18"},{"nodeType":"YulAssignment","src":"10034:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10046:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10042:3:18"},"nodeType":"YulFunctionCall","src":"10042:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10034:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9877:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9891:4:18","type":""}],"src":"9726:340:18"},{"body":{"nodeType":"YulBlock","src":"10245:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10262:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10255:6:18"},"nodeType":"YulFunctionCall","src":"10255:21:18"},"nodeType":"YulExpressionStatement","src":"10255:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10296:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10307:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10292:3:18"},"nodeType":"YulFunctionCall","src":"10292:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"10312:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10285:6:18"},"nodeType":"YulFunctionCall","src":"10285:30:18"},"nodeType":"YulExpressionStatement","src":"10285:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10346:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:18"},"nodeType":"YulFunctionCall","src":"10331:18:18"},{"hexValue":"436c61696d20726571756573742065787069726564","kind":"string","nodeType":"YulLiteral","src":"10351:23:18","type":"","value":"Claim request expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10324:6:18"},"nodeType":"YulFunctionCall","src":"10324:51:18"},"nodeType":"YulExpressionStatement","src":"10324:51:18"},{"nodeType":"YulAssignment","src":"10384:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10396:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10407:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10392:3:18"},"nodeType":"YulFunctionCall","src":"10392:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10384:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10222:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10236:4:18","type":""}],"src":"10071:345:18"},{"body":{"nodeType":"YulBlock","src":"10469:77:18","statements":[{"nodeType":"YulAssignment","src":"10479:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10490:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"10493:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10486:3:18"},"nodeType":"YulFunctionCall","src":"10486:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10479:3:18"}]},{"body":{"nodeType":"YulBlock","src":"10518:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10520:16:18"},"nodeType":"YulFunctionCall","src":"10520:18:18"},"nodeType":"YulExpressionStatement","src":"10520:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10510:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"10513:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10507:2:18"},"nodeType":"YulFunctionCall","src":"10507:10:18"},"nodeType":"YulIf","src":"10504:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10452:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"10455:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10461:3:18","type":""}],"src":"10421:125:18"},{"body":{"nodeType":"YulBlock","src":"10725:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10742:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10753:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10735:6:18"},"nodeType":"YulFunctionCall","src":"10735:21:18"},"nodeType":"YulExpressionStatement","src":"10735:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10776:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10772:3:18"},"nodeType":"YulFunctionCall","src":"10772:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"10792:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10765:6:18"},"nodeType":"YulFunctionCall","src":"10765:30:18"},"nodeType":"YulExpressionStatement","src":"10765:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10815:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10811:3:18"},"nodeType":"YulFunctionCall","src":"10811:18:18"},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","kind":"string","nodeType":"YulLiteral","src":"10831:22:18","type":"","value":"Not the policy owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10804:6:18"},"nodeType":"YulFunctionCall","src":"10804:50:18"},"nodeType":"YulExpressionStatement","src":"10804:50:18"},{"nodeType":"YulAssignment","src":"10863:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10875:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10886:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10871:3:18"},"nodeType":"YulFunctionCall","src":"10871:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10863:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10702:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10716:4:18","type":""}],"src":"10551:344:18"},{"body":{"nodeType":"YulBlock","src":"11074:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11091:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11102:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11084:6:18"},"nodeType":"YulFunctionCall","src":"11084:21:18"},"nodeType":"YulExpressionStatement","src":"11084:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11125:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11136:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11121:3:18"},"nodeType":"YulFunctionCall","src":"11121:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11141:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11114:6:18"},"nodeType":"YulFunctionCall","src":"11114:30:18"},"nodeType":"YulExpressionStatement","src":"11114:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11164:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11175:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11160:3:18"},"nodeType":"YulFunctionCall","src":"11160:18:18"},{"hexValue":"506f6c6963792066756c6c7920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"11180:22:18","type":"","value":"Policy fully claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11153:6:18"},"nodeType":"YulFunctionCall","src":"11153:50:18"},"nodeType":"YulExpressionStatement","src":"11153:50:18"},{"nodeType":"YulAssignment","src":"11212:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11224:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11235:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11220:3:18"},"nodeType":"YulFunctionCall","src":"11220:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11212:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ec47c552a0e8414889fb5ebbf7be1d49d85f9d9e5d9e3476751b87f7e80e6738__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11051:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11065:4:18","type":""}],"src":"10900:344:18"},{"body":{"nodeType":"YulBlock","src":"11423:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11440:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11433:6:18"},"nodeType":"YulFunctionCall","src":"11433:21:18"},"nodeType":"YulExpressionStatement","src":"11433:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11474:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11485:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11470:3:18"},"nodeType":"YulFunctionCall","src":"11470:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11490:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11463:6:18"},"nodeType":"YulFunctionCall","src":"11463:30:18"},"nodeType":"YulExpressionStatement","src":"11463:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11513:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11524:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11509:3:18"},"nodeType":"YulFunctionCall","src":"11509:18:18"},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"11529:26:18","type":"","value":"Incorrect premium amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11502:6:18"},"nodeType":"YulFunctionCall","src":"11502:54:18"},"nodeType":"YulExpressionStatement","src":"11502:54:18"},{"nodeType":"YulAssignment","src":"11565:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11577:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11588:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11573:3:18"},"nodeType":"YulFunctionCall","src":"11573:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11565:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11400:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11414:4:18","type":""}],"src":"11249:348:18"},{"body":{"nodeType":"YulBlock","src":"11651:79:18","statements":[{"nodeType":"YulAssignment","src":"11661:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11673:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"11676:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11669:3:18"},"nodeType":"YulFunctionCall","src":"11669:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11661:4:18"}]},{"body":{"nodeType":"YulBlock","src":"11702:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11704:16:18"},"nodeType":"YulFunctionCall","src":"11704:18:18"},"nodeType":"YulExpressionStatement","src":"11704:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11693:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"11699:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11690:2:18"},"nodeType":"YulFunctionCall","src":"11690:11:18"},"nodeType":"YulIf","src":"11687:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11633:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"11636:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11642:4:18","type":""}],"src":"11602:128:18"},{"body":{"nodeType":"YulBlock","src":"11909:168:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11926:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11937:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11919:6:18"},"nodeType":"YulFunctionCall","src":"11919:21:18"},"nodeType":"YulExpressionStatement","src":"11919:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11960:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11971:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11956:3:18"},"nodeType":"YulFunctionCall","src":"11956:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11976:2:18","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11949:6:18"},"nodeType":"YulFunctionCall","src":"11949:30:18"},"nodeType":"YulExpressionStatement","src":"11949:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11999:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12010:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11995:3:18"},"nodeType":"YulFunctionCall","src":"11995:18:18"},{"hexValue":"546f6f206561726c7920746f2072656e6577","kind":"string","nodeType":"YulLiteral","src":"12015:20:18","type":"","value":"Too early to renew"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11988:6:18"},"nodeType":"YulFunctionCall","src":"11988:48:18"},"nodeType":"YulExpressionStatement","src":"11988:48:18"},{"nodeType":"YulAssignment","src":"12045:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12068:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:18"},"nodeType":"YulFunctionCall","src":"12053:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12045:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_d76cf27bc80af243699efb8730beafe5275b692ea1efbfa6263df73ff30ee004__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11886:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11900:4:18","type":""}],"src":"11735:342:18"},{"body":{"nodeType":"YulBlock","src":"12256:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12273:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12284:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12266:6:18"},"nodeType":"YulFunctionCall","src":"12266:21:18"},"nodeType":"YulExpressionStatement","src":"12266:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12307:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12318:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12303:3:18"},"nodeType":"YulFunctionCall","src":"12303:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"12323:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12296:6:18"},"nodeType":"YulFunctionCall","src":"12296:30:18"},"nodeType":"YulExpressionStatement","src":"12296:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12346:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12357:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12342:3:18"},"nodeType":"YulFunctionCall","src":"12342:18:18"},{"hexValue":"5661756c74207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"12362:23:18","type":"","value":"Vault transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12335:6:18"},"nodeType":"YulFunctionCall","src":"12335:51:18"},"nodeType":"YulExpressionStatement","src":"12335:51:18"},{"nodeType":"YulAssignment","src":"12395:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12407:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12418:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12403:3:18"},"nodeType":"YulFunctionCall","src":"12403:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12395:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4654520bfb7a1211dc62fbc344559546ad7e0d91b78b10f2db6e35265513c112__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12233:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12247:4:18","type":""}],"src":"12082:345:18"},{"body":{"nodeType":"YulBlock","src":"12606:181:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12623:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12634:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12616:6:18"},"nodeType":"YulFunctionCall","src":"12616:21:18"},"nodeType":"YulExpressionStatement","src":"12616:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12657:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12668:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12653:3:18"},"nodeType":"YulFunctionCall","src":"12653:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"12673:2:18","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12646:6:18"},"nodeType":"YulFunctionCall","src":"12646:30:18"},"nodeType":"YulExpressionStatement","src":"12646:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12696:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12707:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12692:3:18"},"nodeType":"YulFunctionCall","src":"12692:18:18"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"12712:33:18","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12685:6:18"},"nodeType":"YulFunctionCall","src":"12685:61:18"},"nodeType":"YulExpressionStatement","src":"12685:61:18"},{"nodeType":"YulAssignment","src":"12755:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12767:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12778:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12763:3:18"},"nodeType":"YulFunctionCall","src":"12763:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12755:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12583:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12597:4:18","type":""}],"src":"12432:355:18"},{"body":{"nodeType":"YulBlock","src":"12966:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12983:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12994:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12976:6:18"},"nodeType":"YulFunctionCall","src":"12976:21:18"},"nodeType":"YulExpressionStatement","src":"12976:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13017:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13028:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13013:3:18"},"nodeType":"YulFunctionCall","src":"13013:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13033:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13006:6:18"},"nodeType":"YulFunctionCall","src":"13006:30:18"},"nodeType":"YulExpressionStatement","src":"13006:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13056:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13067:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13052:3:18"},"nodeType":"YulFunctionCall","src":"13052:18:18"},{"hexValue":"436c61696d20657863656564732073756d2061737375726564","kind":"string","nodeType":"YulLiteral","src":"13072:27:18","type":"","value":"Claim exceeds sum assured"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13045:6:18"},"nodeType":"YulFunctionCall","src":"13045:55:18"},"nodeType":"YulExpressionStatement","src":"13045:55:18"},{"nodeType":"YulAssignment","src":"13109:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13121:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13117:3:18"},"nodeType":"YulFunctionCall","src":"13117:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13109:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12943:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12957:4:18","type":""}],"src":"12792:349:18"},{"body":{"nodeType":"YulBlock","src":"13320:164:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13337:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13348:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13330:6:18"},"nodeType":"YulFunctionCall","src":"13330:21:18"},"nodeType":"YulExpressionStatement","src":"13330:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13371:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13382:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13367:3:18"},"nodeType":"YulFunctionCall","src":"13367:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13387:2:18","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13360:6:18"},"nodeType":"YulFunctionCall","src":"13360:30:18"},"nodeType":"YulExpressionStatement","src":"13360:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13410:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13421:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13406:3:18"},"nodeType":"YulFunctionCall","src":"13406:18:18"},{"hexValue":"506f6c6963792065787069726564","kind":"string","nodeType":"YulLiteral","src":"13426:16:18","type":"","value":"Policy expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13399:6:18"},"nodeType":"YulFunctionCall","src":"13399:44:18"},"nodeType":"YulExpressionStatement","src":"13399:44:18"},{"nodeType":"YulAssignment","src":"13452:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13464:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13475:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13460:3:18"},"nodeType":"YulFunctionCall","src":"13460:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13452:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13297:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13311:4:18","type":""}],"src":"13146:338:18"},{"body":{"nodeType":"YulBlock","src":"13664:137:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13681:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"13686:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13674:6:18"},"nodeType":"YulFunctionCall","src":"13674:19:18"},"nodeType":"YulExpressionStatement","src":"13674:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13713:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13718:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13709:3:18"},"nodeType":"YulFunctionCall","src":"13709:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"13723:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13702:6:18"},"nodeType":"YulFunctionCall","src":"13702:28:18"},"nodeType":"YulExpressionStatement","src":"13702:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13750:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13755:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13746:3:18"},"nodeType":"YulFunctionCall","src":"13746:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"13760:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13739:6:18"},"nodeType":"YulFunctionCall","src":"13739:28:18"},"nodeType":"YulExpressionStatement","src":"13739:28:18"},{"nodeType":"YulAssignment","src":"13776:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13787:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13792:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13783:3:18"},"nodeType":"YulFunctionCall","src":"13783:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13776:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13624:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13629:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13637:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13645:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13656:3:18","type":""}],"src":"13489:312:18"},{"body":{"nodeType":"YulBlock","src":"13980:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13997:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14008:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13990:6:18"},"nodeType":"YulFunctionCall","src":"13990:21:18"},"nodeType":"YulExpressionStatement","src":"13990:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14031:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14042:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14027:3:18"},"nodeType":"YulFunctionCall","src":"14027:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14047:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14020:6:18"},"nodeType":"YulFunctionCall","src":"14020:30:18"},"nodeType":"YulExpressionStatement","src":"14020:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14070:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14081:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14066:3:18"},"nodeType":"YulFunctionCall","src":"14066:18:18"},{"hexValue":"496e76616c6964207369676e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"14086:24:18","type":"","value":"Invalid signer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14059:6:18"},"nodeType":"YulFunctionCall","src":"14059:52:18"},"nodeType":"YulExpressionStatement","src":"14059:52:18"},{"nodeType":"YulAssignment","src":"14120:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14132:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14143:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14128:3:18"},"nodeType":"YulFunctionCall","src":"14128:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14120:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13957:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13971:4:18","type":""}],"src":"13806:346:18"},{"body":{"nodeType":"YulBlock","src":"14331:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14348:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14359:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14341:6:18"},"nodeType":"YulFunctionCall","src":"14341:21:18"},"nodeType":"YulExpressionStatement","src":"14341:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14382:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14393:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14378:3:18"},"nodeType":"YulFunctionCall","src":"14378:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14398:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14371:6:18"},"nodeType":"YulFunctionCall","src":"14371:30:18"},"nodeType":"YulExpressionStatement","src":"14371:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14421:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14432:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14417:3:18"},"nodeType":"YulFunctionCall","src":"14417:18:18"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nodeType":"YulLiteral","src":"14437:23:18","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14410:6:18"},"nodeType":"YulFunctionCall","src":"14410:51:18"},"nodeType":"YulExpressionStatement","src":"14410:51:18"},{"nodeType":"YulAssignment","src":"14470:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14482:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14493:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14478:3:18"},"nodeType":"YulFunctionCall","src":"14478:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14470:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14308:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14322:4:18","type":""}],"src":"14157:345:18"},{"body":{"nodeType":"YulBlock","src":"14553:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"14584:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14605:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14612:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14617:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14608:3:18"},"nodeType":"YulFunctionCall","src":"14608:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14598:6:18"},"nodeType":"YulFunctionCall","src":"14598:31:18"},"nodeType":"YulExpressionStatement","src":"14598:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14649:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14652:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14642:6:18"},"nodeType":"YulFunctionCall","src":"14642:15:18"},"nodeType":"YulExpressionStatement","src":"14642:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14677:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14680:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14670:6:18"},"nodeType":"YulFunctionCall","src":"14670:15:18"},"nodeType":"YulExpressionStatement","src":"14670:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14573:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14566:6:18"},"nodeType":"YulFunctionCall","src":"14566:9:18"},"nodeType":"YulIf","src":"14563:132:18"},{"nodeType":"YulAssignment","src":"14704:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14713:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"14716:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14709:3:18"},"nodeType":"YulFunctionCall","src":"14709:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14704:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14538:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"14541:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"14547:1:18","type":""}],"src":"14507:217:18"},{"body":{"nodeType":"YulBlock","src":"14903:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14920:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14931:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14913:6:18"},"nodeType":"YulFunctionCall","src":"14913:21:18"},"nodeType":"YulExpressionStatement","src":"14913:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14954:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14965:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14950:3:18"},"nodeType":"YulFunctionCall","src":"14950:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14970:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14943:6:18"},"nodeType":"YulFunctionCall","src":"14943:30:18"},"nodeType":"YulExpressionStatement","src":"14943:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14993:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15004:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14989:3:18"},"nodeType":"YulFunctionCall","src":"14989:18:18"},{"hexValue":"496e76616c69642061646d696e2061646472657373","kind":"string","nodeType":"YulLiteral","src":"15009:23:18","type":"","value":"Invalid admin address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14982:6:18"},"nodeType":"YulFunctionCall","src":"14982:51:18"},"nodeType":"YulExpressionStatement","src":"14982:51:18"},{"nodeType":"YulAssignment","src":"15042:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15054:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15065:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15050:3:18"},"nodeType":"YulFunctionCall","src":"15050:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15042:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14880:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14894:4:18","type":""}],"src":"14729:345:18"},{"body":{"nodeType":"YulBlock","src":"15253:168:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15270:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15281:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15263:6:18"},"nodeType":"YulFunctionCall","src":"15263:21:18"},"nodeType":"YulExpressionStatement","src":"15263:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15304:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15315:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15300:3:18"},"nodeType":"YulFunctionCall","src":"15300:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15320:2:18","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15293:6:18"},"nodeType":"YulFunctionCall","src":"15293:30:18"},"nodeType":"YulExpressionStatement","src":"15293:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15343:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15354:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15339:3:18"},"nodeType":"YulFunctionCall","src":"15339:18:18"},{"hexValue":"43616e6e6f74207265766f6b652073656c66","kind":"string","nodeType":"YulLiteral","src":"15359:20:18","type":"","value":"Cannot revoke self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15332:6:18"},"nodeType":"YulFunctionCall","src":"15332:48:18"},"nodeType":"YulExpressionStatement","src":"15332:48:18"},{"nodeType":"YulAssignment","src":"15389:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15401:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15412:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15397:3:18"},"nodeType":"YulFunctionCall","src":"15397:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15389:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15230:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15244:4:18","type":""}],"src":"15079:342:18"},{"body":{"nodeType":"YulBlock","src":"15600:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15617:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15628:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15610:6:18"},"nodeType":"YulFunctionCall","src":"15610:21:18"},"nodeType":"YulExpressionStatement","src":"15610:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15651:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15662:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15647:3:18"},"nodeType":"YulFunctionCall","src":"15647:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15667:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15640:6:18"},"nodeType":"YulFunctionCall","src":"15640:30:18"},"nodeType":"YulExpressionStatement","src":"15640:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15690:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15701:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15686:3:18"},"nodeType":"YulFunctionCall","src":"15686:18:18"},{"hexValue":"506f6c696379206e6f74206578706972656420796574","kind":"string","nodeType":"YulLiteral","src":"15706:24:18","type":"","value":"Policy not expired yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15679:6:18"},"nodeType":"YulFunctionCall","src":"15679:52:18"},"nodeType":"YulExpressionStatement","src":"15679:52:18"},{"nodeType":"YulAssignment","src":"15740:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15752:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15763:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15748:3:18"},"nodeType":"YulFunctionCall","src":"15748:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15740:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15577:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15591:4:18","type":""}],"src":"15426:346:18"},{"body":{"nodeType":"YulBlock","src":"15951:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15968:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15979:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15961:6:18"},"nodeType":"YulFunctionCall","src":"15961:21:18"},"nodeType":"YulExpressionStatement","src":"15961:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16002:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16013:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15998:3:18"},"nodeType":"YulFunctionCall","src":"15998:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16018:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15991:6:18"},"nodeType":"YulFunctionCall","src":"15991:30:18"},"nodeType":"YulExpressionStatement","src":"15991:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16041:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16052:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16037:3:18"},"nodeType":"YulFunctionCall","src":"16037:18:18"},{"hexValue":"496e76616c6964206f776e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"16057:23:18","type":"","value":"Invalid owner address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16030:6:18"},"nodeType":"YulFunctionCall","src":"16030:51:18"},"nodeType":"YulExpressionStatement","src":"16030:51:18"},{"nodeType":"YulAssignment","src":"16090:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16102:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16113:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16098:3:18"},"nodeType":"YulFunctionCall","src":"16098:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16090:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15928:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15942:4:18","type":""}],"src":"15777:345:18"},{"body":{"nodeType":"YulBlock","src":"16301:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16318:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16329:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16311:6:18"},"nodeType":"YulFunctionCall","src":"16311:21:18"},"nodeType":"YulExpressionStatement","src":"16311:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16352:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16363:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16348:3:18"},"nodeType":"YulFunctionCall","src":"16348:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16368:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16341:6:18"},"nodeType":"YulFunctionCall","src":"16341:30:18"},"nodeType":"YulExpressionStatement","src":"16341:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16391:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16402:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16387:3:18"},"nodeType":"YulFunctionCall","src":"16387:18:18"},{"hexValue":"5072656d69756d206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"16407:26:18","type":"","value":"Premium must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16380:6:18"},"nodeType":"YulFunctionCall","src":"16380:54:18"},"nodeType":"YulExpressionStatement","src":"16380:54:18"},{"nodeType":"YulAssignment","src":"16443:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16455:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16466:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16451:3:18"},"nodeType":"YulFunctionCall","src":"16451:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16443:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16278:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16292:4:18","type":""}],"src":"16127:348:18"},{"body":{"nodeType":"YulBlock","src":"16654:178:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16671:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16682:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16664:6:18"},"nodeType":"YulFunctionCall","src":"16664:21:18"},"nodeType":"YulExpressionStatement","src":"16664:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16705:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16716:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16701:3:18"},"nodeType":"YulFunctionCall","src":"16701:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16721:2:18","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16694:6:18"},"nodeType":"YulFunctionCall","src":"16694:30:18"},"nodeType":"YulExpressionStatement","src":"16694:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16744:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16755:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16740:3:18"},"nodeType":"YulFunctionCall","src":"16740:18:18"},{"hexValue":"53756d2061737375726564206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"16760:30:18","type":"","value":"Sum assured must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16733:6:18"},"nodeType":"YulFunctionCall","src":"16733:58:18"},"nodeType":"YulExpressionStatement","src":"16733:58:18"},{"nodeType":"YulAssignment","src":"16800:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16812:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16823:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16808:3:18"},"nodeType":"YulFunctionCall","src":"16808:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16800:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16631:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16645:4:18","type":""}],"src":"16480:352:18"},{"body":{"nodeType":"YulBlock","src":"17011:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17028:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17039:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17021:6:18"},"nodeType":"YulFunctionCall","src":"17021:21:18"},"nodeType":"YulExpressionStatement","src":"17021:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17062:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17073:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17058:3:18"},"nodeType":"YulFunctionCall","src":"17058:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17078:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17051:6:18"},"nodeType":"YulFunctionCall","src":"17051:30:18"},"nodeType":"YulExpressionStatement","src":"17051:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17101:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17112:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17097:3:18"},"nodeType":"YulFunctionCall","src":"17097:18:18"},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"17117:27:18","type":"","value":"Duration must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17090:6:18"},"nodeType":"YulFunctionCall","src":"17090:55:18"},"nodeType":"YulExpressionStatement","src":"17090:55:18"},{"nodeType":"YulAssignment","src":"17154:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17166:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17177:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17162:3:18"},"nodeType":"YulFunctionCall","src":"17162:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17154:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16988:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17002:4:18","type":""}],"src":"16837:349:18"},{"body":{"nodeType":"YulBlock","src":"17422:260:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17439:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17452:2:18","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"17456:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17448:3:18"},"nodeType":"YulFunctionCall","src":"17448:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17469:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17465:3:18"},"nodeType":"YulFunctionCall","src":"17465:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17444:3:18"},"nodeType":"YulFunctionCall","src":"17444:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17432:6:18"},"nodeType":"YulFunctionCall","src":"17432:66:18"},"nodeType":"YulExpressionStatement","src":"17432:66:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17518:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17523:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17514:3:18"},"nodeType":"YulFunctionCall","src":"17514:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"17528:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17507:6:18"},"nodeType":"YulFunctionCall","src":"17507:28:18"},"nodeType":"YulExpressionStatement","src":"17507:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17555:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17560:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17551:3:18"},"nodeType":"YulFunctionCall","src":"17551:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"17565:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17544:6:18"},"nodeType":"YulFunctionCall","src":"17544:28:18"},"nodeType":"YulExpressionStatement","src":"17544:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17592:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17597:2:18","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17588:3:18"},"nodeType":"YulFunctionCall","src":"17588:12:18"},{"name":"value3","nodeType":"YulIdentifier","src":"17602:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17581:6:18"},"nodeType":"YulFunctionCall","src":"17581:28:18"},"nodeType":"YulExpressionStatement","src":"17581:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17629:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17634:3:18","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17625:3:18"},"nodeType":"YulFunctionCall","src":"17625:13:18"},{"name":"value4","nodeType":"YulIdentifier","src":"17640:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17618:6:18"},"nodeType":"YulFunctionCall","src":"17618:29:18"},"nodeType":"YulExpressionStatement","src":"17618:29:18"},{"nodeType":"YulAssignment","src":"17656:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17667:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17672:3:18","type":"","value":"148"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17663:3:18"},"nodeType":"YulFunctionCall","src":"17663:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17656:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17366:3:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17371:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17379:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17387:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17395:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17403:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17414:3:18","type":""}],"src":"17191:491:18"},{"body":{"nodeType":"YulBlock","src":"17861:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17878:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17889:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17871:6:18"},"nodeType":"YulFunctionCall","src":"17871:21:18"},"nodeType":"YulExpressionStatement","src":"17871:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17912:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17923:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17908:3:18"},"nodeType":"YulFunctionCall","src":"17908:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17928:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17901:6:18"},"nodeType":"YulFunctionCall","src":"17901:30:18"},"nodeType":"YulExpressionStatement","src":"17901:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17951:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17962:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:18"},"nodeType":"YulFunctionCall","src":"17947:18:18"},{"hexValue":"506f6c69637920616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"17967:23:18","type":"","value":"Policy already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:18"},"nodeType":"YulFunctionCall","src":"17940:51:18"},"nodeType":"YulExpressionStatement","src":"17940:51:18"},{"nodeType":"YulAssignment","src":"18000:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18012:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18023:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18008:3:18"},"nodeType":"YulFunctionCall","src":"18008:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18000:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17838:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17852:4:18","type":""}],"src":"17687:345:18"},{"body":{"nodeType":"YulBlock","src":"18211:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18228:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18239:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18221:6:18"},"nodeType":"YulFunctionCall","src":"18221:21:18"},"nodeType":"YulExpressionStatement","src":"18221:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18262:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18273:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18258:3:18"},"nodeType":"YulFunctionCall","src":"18258:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18278:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18251:6:18"},"nodeType":"YulFunctionCall","src":"18251:30:18"},"nodeType":"YulExpressionStatement","src":"18251:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18301:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18312:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18297:3:18"},"nodeType":"YulFunctionCall","src":"18297:18:18"},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"18317:34:18","type":"","value":"Premium transfer to vault failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18290:6:18"},"nodeType":"YulFunctionCall","src":"18290:62:18"},"nodeType":"YulExpressionStatement","src":"18290:62:18"},{"nodeType":"YulAssignment","src":"18361:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18373:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18384:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18369:3:18"},"nodeType":"YulFunctionCall","src":"18369:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18361:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18188:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18202:4:18","type":""}],"src":"18037:356:18"},{"body":{"nodeType":"YulBlock","src":"18555:162:18","statements":[{"nodeType":"YulAssignment","src":"18565:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18577:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18588:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18573:3:18"},"nodeType":"YulFunctionCall","src":"18573:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18565:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18607:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"18618:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18600:6:18"},"nodeType":"YulFunctionCall","src":"18600:25:18"},"nodeType":"YulExpressionStatement","src":"18600:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18645:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18656:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18641:3:18"},"nodeType":"YulFunctionCall","src":"18641:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"18661:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18634:6:18"},"nodeType":"YulFunctionCall","src":"18634:34:18"},"nodeType":"YulExpressionStatement","src":"18634:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18688:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18699:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18684:3:18"},"nodeType":"YulFunctionCall","src":"18684:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"18704:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18677:6:18"},"nodeType":"YulFunctionCall","src":"18677:34:18"},"nodeType":"YulExpressionStatement","src":"18677:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18508:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18519:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18527:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18535:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18546:4:18","type":""}],"src":"18398:319:18"},{"body":{"nodeType":"YulBlock","src":"18896:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18913:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18924:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18906:6:18"},"nodeType":"YulFunctionCall","src":"18906:21:18"},"nodeType":"YulExpressionStatement","src":"18906:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18947:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18958:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18943:3:18"},"nodeType":"YulFunctionCall","src":"18943:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18963:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18936:6:18"},"nodeType":"YulFunctionCall","src":"18936:30:18"},"nodeType":"YulExpressionStatement","src":"18936:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18986:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18997:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18982:3:18"},"nodeType":"YulFunctionCall","src":"18982:18:18"},{"hexValue":"5369676e617475726520616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"19002:24:18","type":"","value":"Signature already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18975:6:18"},"nodeType":"YulFunctionCall","src":"18975:52:18"},"nodeType":"YulExpressionStatement","src":"18975:52:18"},{"nodeType":"YulAssignment","src":"19036:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19048:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19059:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19044:3:18"},"nodeType":"YulFunctionCall","src":"19044:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19036:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18873:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18887:4:18","type":""}],"src":"18722:346:18"},{"body":{"nodeType":"YulBlock","src":"19220:147:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19237:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19250:2:18","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"19254:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19246:3:18"},"nodeType":"YulFunctionCall","src":"19246:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19267:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19263:3:18"},"nodeType":"YulFunctionCall","src":"19263:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19242:3:18"},"nodeType":"YulFunctionCall","src":"19242:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19230:6:18"},"nodeType":"YulFunctionCall","src":"19230:66:18"},"nodeType":"YulExpressionStatement","src":"19230:66:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19316:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19321:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19312:3:18"},"nodeType":"YulFunctionCall","src":"19312:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"19326:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19305:6:18"},"nodeType":"YulFunctionCall","src":"19305:28:18"},"nodeType":"YulExpressionStatement","src":"19305:28:18"},{"nodeType":"YulAssignment","src":"19342:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19353:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19358:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19349:3:18"},"nodeType":"YulFunctionCall","src":"19349:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19342:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19188:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19193:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19201:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19212:3:18","type":""}],"src":"19073:294:18"},{"body":{"nodeType":"YulBlock","src":"19501:145:18","statements":[{"nodeType":"YulAssignment","src":"19511:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19523:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19534:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19519:3:18"},"nodeType":"YulFunctionCall","src":"19519:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19511:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19553:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19568:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19584:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19589:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19580:3:18"},"nodeType":"YulFunctionCall","src":"19580:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"19593:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19576:3:18"},"nodeType":"YulFunctionCall","src":"19576:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19564:3:18"},"nodeType":"YulFunctionCall","src":"19564:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19546:6:18"},"nodeType":"YulFunctionCall","src":"19546:51:18"},"nodeType":"YulExpressionStatement","src":"19546:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19617:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19628:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19613:3:18"},"nodeType":"YulFunctionCall","src":"19613:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"19633:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19606:6:18"},"nodeType":"YulFunctionCall","src":"19606:34:18"},"nodeType":"YulExpressionStatement","src":"19606:34:18"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19462:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19473:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19481:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19492:4:18","type":""}],"src":"19372:274:18"},{"body":{"nodeType":"YulBlock","src":"19683:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19700:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19707:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19712:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19703:3:18"},"nodeType":"YulFunctionCall","src":"19703:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19693:6:18"},"nodeType":"YulFunctionCall","src":"19693:31:18"},"nodeType":"YulExpressionStatement","src":"19693:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19740:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19743:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19733:6:18"},"nodeType":"YulFunctionCall","src":"19733:15:18"},"nodeType":"YulExpressionStatement","src":"19733:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19764:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19767:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19757:6:18"},"nodeType":"YulFunctionCall","src":"19757:15:18"},"nodeType":"YulExpressionStatement","src":"19757:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"19651:127:18"},{"body":{"nodeType":"YulBlock","src":"19964:217:18","statements":[{"nodeType":"YulAssignment","src":"19974:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19986:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19997:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19982:3:18"},"nodeType":"YulFunctionCall","src":"19982:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20017:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"20028:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20010:6:18"},"nodeType":"YulFunctionCall","src":"20010:25:18"},"nodeType":"YulExpressionStatement","src":"20010:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20055:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20066:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20051:3:18"},"nodeType":"YulFunctionCall","src":"20051:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20075:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20083:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20071:3:18"},"nodeType":"YulFunctionCall","src":"20071:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20044:6:18"},"nodeType":"YulFunctionCall","src":"20044:45:18"},"nodeType":"YulExpressionStatement","src":"20044:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20109:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20120:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20105:3:18"},"nodeType":"YulFunctionCall","src":"20105:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"20125:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20098:6:18"},"nodeType":"YulFunctionCall","src":"20098:34:18"},"nodeType":"YulExpressionStatement","src":"20098:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20152:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20163:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20148:3:18"},"nodeType":"YulFunctionCall","src":"20148:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"20168:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20141:6:18"},"nodeType":"YulFunctionCall","src":"20141:34:18"},"nodeType":"YulExpressionStatement","src":"20141:34:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19909:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19920:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19928:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19936:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19944:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19955:4:18","type":""}],"src":"19783:398:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ETH forwarding to vault failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 0xc0)))))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Period must be positive\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Policy not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Policy already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), value3)\n        mstore(add(pos, 116), value4)\n        end := add(pos, 148)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No pending claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Claim request expired\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not the policy owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec47c552a0e8414889fb5ebbf7be1d49d85f9d9e5d9e3476751b87f7e80e6738__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Policy fully claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Incorrect premium amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d76cf27bc80af243699efb8730beafe5275b692ea1efbfa6263df73ff30ee004__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Too early to renew\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4654520bfb7a1211dc62fbc344559546ad7e0d91b78b10f2db6e35265513c112__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Vault transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Claim exceeds sum assured\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Policy expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        end := add(pos, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid signer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Cannot revoke self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Policy not expired yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid owner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Premium must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Sum assured must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Duration must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), value3)\n        mstore(add(pos, 116), value4)\n        end := add(pos, 148)\n    }\n    function abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Policy already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Premium transfer to vault failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Signature already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101bb5760003560e01c80638c51f60f116100ec578063b87fb65c1161008a578063cb80486011610064578063cb80486014610748578063d547741f14610768578063f74d548014610788578063fbfa77cf146107c057600080fd5b8063b87fb65c14610637578063c634b78e1461064a578063c9100bcb1461066a57600080fd5b8063a217fddf116100c6578063a217fddf146104ad578063a3f685f9146104c2578063aa04cd1414610604578063b0529da21461061757600080fd5b80638c51f60f1461044d57806391d148541461046d5780639a19c7b01461048d57600080fd5b80633719f096116101595780635312ea8e116101335780635312ea8e146103cb57806356a1c701146103eb5780636817031b1461040b57806375b238fc1461042b57600080fd5b80633719f096146103785780634e494b7c146103985780635052cb49146103ab57600080fd5b80632f2ff15d116101955780632f2ff15d146103025780632fe1814c1461032257806330d95b531461034257806336568abe1461035857600080fd5b806301ffc9a71461026f57806319c0d1fa146102a4578063248a9ca3146102c457600080fd5b3661026a576003546040516000916001600160a01b03169034908381818185875af1925050503d806000811461020d576040519150601f19603f3d011682016040523d82523d6000602084013e610212565b606091505b50509050806102685760405162461bcd60e51b815260206004820152601e60248201527f45544820666f7277617264696e6720746f207661756c74206661696c6564000060448201526064015b60405180910390fd5b005b600080fd5b34801561027b57600080fd5b5061028f61028a3660046123a7565b6107e0565b60405190151581526020015b60405180910390f35b3480156102b057600080fd5b506102686102bf3660046123d8565b610817565b3480156102d057600080fd5b506102f46102df3660046123d8565b60009081526020819052604090206001015490565b60405190815260200161029b565b34801561030e57600080fd5b5061026861031d366004612406565b6108c6565b34801561032e57600080fd5b5061026861033d3660046124d9565b6108f1565b34801561034e57600080fd5b506102f460045481565b34801561036457600080fd5b50610268610373366004612406565b610b5e565b34801561038457600080fd5b506102f46103933660046123d8565b610b96565b6102686103a6366004612529565b610e02565b3480156103b757600080fd5b506102686103c63660046124d9565b61113d565b3480156103d757600080fd5b506102686103e63660046123d8565b611436565b3480156103f757600080fd5b50610268610406366004612583565b6114d4565b34801561041757600080fd5b50610268610426366004612583565b611581565b34801561043757600080fd5b506102f460008051602061275683398151915281565b34801561045957600080fd5b506102f46104683660046123d8565b61162d565b34801561047957600080fd5b5061028f610488366004612406565b611729565b34801561049957600080fd5b506102686104a8366004612583565b611752565b3480156104b957600080fd5b506102f4600081565b3480156104ce57600080fd5b5061059b6104dd3660046123d8565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250600090815260056020818152604092839020835161010080820186528254825260018301546001600160a01b03169382019390935260028201549481019490945260038101546060850152600481015460808501529182015460ff808216151560a086015291900416151560c08301526006015460e082015290565b60405161029b9190815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a08083015115159082015260c08083015115159082015260e091820151918101919091526101000190565b6102686106123660046125a0565b611810565b34801561062357600080fd5b506102686106323660046123d8565b611862565b6102f46106453660046125a0565b61192f565b34801561065657600080fd5b50610268610665366004612583565b611e15565b34801561067657600080fd5b506107046106853660046123d8565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260066020908152604091829020825160a08101845281548152600182015492810192909252600281015460ff1615159282019290925260038201546060820152600490910154608082015290565b60405161029b9190600060a0820190508251825260208301516020830152604083015115156040830152606083015160608301526080830151608083015292915050565b34801561075457600080fd5b506102f46107633660046123d8565b611ebf565b34801561077457600080fd5b50610268610783366004612406565b611f85565b34801561079457600080fd5b506002546107a8906001600160a01b031681565b6040516001600160a01b03909116815260200161029b565b3480156107cc57600080fd5b506003546107a8906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b148061081157506301ffc9a760e01b6001600160e01b03198316145b92915050565b600061082281611faa565b600082116108725760405162461bcd60e51b815260206004820152601760248201527f506572696f64206d75737420626520706f736974697665000000000000000000604482015260640161025f565b6004546108828362015180612623565b60048190556040805183815260208101929092527fb792057619e1a3b0e2768725ef4cb4fc3cbf647c992d306e6876522e3fc0cdbc910160405180910390a1505050565b6000828152602081905260409020600101546108e181611faa565b6108eb8383611fb7565b50505050565b60008051602061275683398151915261090981611faa565b60008481526005602081905260409091200154849060ff1661093d5760405162461bcd60e51b815260040161025f9061263a565b60008581526005602081905260409091209081015460ff166109715760405162461bcd60e51b815260040161025f9061263a565b6005810154610100900460ff16156109c45760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b604482015260640161025f565b60018101546040516000916109ed9189916001600160a01b031690899085904690602001612665565b604051602081830303815290604052805190602001209050610a0f8186612049565b610a2b5760405162461bcd60e51b815260040161025f90612695565b8451602080870191909120600090815260079091526040908190208054600160ff1991821681179092556005850180549091169055600354908401549151631f9cab4760e21b81526001600160a01b03928316600482015260248101899052911690637e72ad1c90604401600060405180830381600087803b158015610ab057600080fd5b505af1158015610ac4573d6000803e3d6000fd5b5050505060018201546040518781526001600160a01b039091169088907fae2eb9a5ff7e26865940377aafb8a569997727d3bc48028ed88199eed260087f9060200160405180910390a360018201546040518781526001600160a01b039091169088907feffda959fad3422ef4e602f1642198e56536dbbf192da630dcbc451b5b5c203d906020015b60405180910390a350505050505050565b6001600160a01b0381163314610b875760405163334bd91960e11b815260040160405180910390fd5b610b918282612100565b505050565b6000600080516020612756833981519152610bb081611faa565b60008381526005602081905260409091200154839060ff16610be45760405162461bcd60e51b815260040161025f9061263a565b60008481526006602090815260408083206005909252909120600282015460ff16610c445760405162461bcd60e51b815260206004820152601060248201526f4e6f2070656e64696e6720636c61696d60801b604482015260640161025f565b8160040154421115610c905760405162461bcd60e51b815260206004820152601560248201527410db185a5b481c995c5d595cdd08195e1c1a5c9959605a1b604482015260640161025f565b60028201805460ff19169055600182015460008781526008602052604081208054909190610cbf9084906126c0565b9091555050600381015460008781526008602052604090205410610cef5760058101805461ffff19166101001790555b60035460018281015490840154604051631e55af2160e31b81526001600160a01b039283166004820152602481019190915291169063f2ad790890604401600060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b50505050600181810154908301546040519081526001600160a01b039091169087907f636494174e4a0f872de31b104ec14fb50edb1bdc4b1db9f006eaa68a61610f9c9060200160405180910390a3600181810154908301546040519081526001600160a01b039091169087907f957a909a771d0c1c8b37c8f5c6c9df37d8d7c521d3d99445839ede9153d063589060200160405180910390a35060010154949350505050565b600084815260056020526040902060018101546001600160a01b03163314610e635760405162461bcd60e51b81526020600482015260146024820152732737ba103a3432903837b634b1bc9037bbb732b960611b604482015260640161025f565b600581015460ff16610e875760405162461bcd60e51b815260040161025f9061263a565b6005810154610100900460ff1615610ed85760405162461bcd60e51b8152602060048201526014602482015273141bdb1a58de48199d5b1b1e4818db185a5b595960621b604482015260640161025f565b833414610f225760405162461bcd60e51b8152602060048201526018602482015277125b98dbdc9c9958dd081c1c995b5a5d5b48185b5bdd5b9d60421b604482015260640161025f565b806004015442101580610f47575062278d00428260040154610f4491906126d3565b11155b610f885760405162461bcd60e51b8152602060048201526012602482015271546f6f206561726c7920746f2072656e657760701b604482015260640161025f565b60018101546040516301e1338091600091610fb99189916001600160a01b0390911690899086904690602001612665565b604051602081830303815290604052805190602001209050610fdb8185612049565b610ff75760405162461bcd60e51b815260040161025f90612695565b8351602080860191909120600090815260079091526040808220805460ff1916600117905560035490516001600160a01b039091169034908381818185875af1925050503d8060008114611067576040519150601f19603f3d011682016040523d82523d6000602084013e61106c565b606091505b50509050806110b55760405162461bcd60e51b815260206004820152601560248201527415985d5b1d081d1c985b9cd9995c8819985a5b1959605a1b604482015260640161025f565b600284018790556000888152600860205260408120556110d583426126c0565b60048501819055600185015460028601546040516001600160a01b03909216928b927f16fe3aa381de20cb3e0fb3f9ae8d20168747df7e26dbc2b381ad5025ee5ca0869261112b92908252602082015260400190565b60405180910390a35050505050505050565b60026001540361115f5760405162461bcd60e51b815260040161025f906126e6565b600260015560008381526005602081905260409091200154839060ff166111985760405162461bcd60e51b815260040161025f9061263a565b600084815260056020526040902060018101546001600160a01b031633146111f95760405162461bcd60e51b81526020600482015260146024820152732737ba103a3432903837b634b1bc9037bbb732b960611b604482015260640161025f565b806003015484111561124d5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20657863656564732073756d206173737572656400000000000000604482015260640161025f565b6005810154610100900460ff16156112a05760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b604482015260640161025f565b806004015442106112e45760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b604482015260640161025f565b60408051602081018790529081018590524660608201526000906080016040516020818303038152906040528051906020012090506113238185612049565b61133f5760405162461bcd60e51b815260040161025f90612695565b8351602080860191909120600090815260078252604090819020805460ff19166001908117909155815160a081018352898152928301889052908201524260608201819052600454608083019161139691906126c0565b905260008781526006602090815260409182902083518155838201516001808301919091558484015160028301805460ff1916911515919091179055606085015160038301556080909401516004909101559184015490518781526001600160a01b039091169188917fcb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f1910160405180910390a350506001805550505050565b600061144181611faa565b6002600154036114635760405162461bcd60e51b815260040161025f906126e6565b600260015560035460405163c107532960e01b8152336004820152602481018490526001600160a01b039091169063c107532990604401600060405180830381600087803b1580156114b457600080fd5b505af11580156114c8573d6000803e3d6000fd5b50506001805550505050565b60006114df81611faa565b6001600160a01b03821661152e5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964207369676e6572206164647265737360501b604482015260640161025f565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f4a297cf5d32586f80d2b0708a39d2da1f46e6ae7722171e1c51dfd685b5b8aa890600090a3505050565b600061158c81611faa565b6001600160a01b0382166115da5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b604482015260640161025f565b600380546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3990600090a3505050565b6000818152600560208181526040808420815161010080820184528254825260018301546001600160a01b03169482019490945260028201549281019290925260038101546060830152600481015460808301529283015460ff80821615801560a08501529390910416151560c082015260069092015460e0830152806116b8575080608001514210155b156116c65750600092915050565b60004282608001516116d891906126d3565b905060008260e0015183608001516116f091906126d3565b90508060000361170557506000949350505050565b808284604001516117169190612623565b611720919061271d565b95945050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600061175d81611faa565b6001600160a01b0382166117ab5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b604482015260640161025f565b336001600160a01b038316036117f85760405162461bcd60e51b815260206004820152601260248201527121b0b73737ba103932bb37b5b29039b2b63360711b604482015260640161025f565b610b9160008051602061275683398151915283612100565b6301e133806000611824878787858761192f565b9050866001600160a01b0316817fb1efb5a54d173a08f1d7ae00e21150da481ac80d259826760104a5ba97be6fa888604051610b4d91815260200190565b60008181526005602081905260409091209081015460ff166118965760405162461bcd60e51b815260040161025f9061263a565b80600401544210156118e35760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de481b9bdd08195e1c1a5c9959081e595d60521b604482015260640161025f565b60058101805460ff1916905560018101546040516001600160a01b039091169083907f8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe00290600090a35050565b60006002600154036119535760405162461bcd60e51b815260040161025f906126e6565b60026001556001600160a01b0386166119a65760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b604482015260640161025f565b600085116119f65760405162461bcd60e51b815260206004820152601860248201527f5072656d69756d206d75737420626520706f7369746976650000000000000000604482015260640161025f565b60008411611a465760405162461bcd60e51b815260206004820152601c60248201527f53756d2061737375726564206d75737420626520706f73697469766500000000604482015260640161025f565b60008311611a965760405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f73697469766500000000000000604482015260640161025f565b843414611ae05760405162461bcd60e51b8152602060048201526018602482015277125b98dbdc9c9958dd081c1c995b5a5d5b48185b5bdd5b9d60421b604482015260640161025f565b6040516001600160601b0319606088901b16602082015260348101869052605481018590526074810184905246609482015260009060b401604051602081830303815290604052805190602001209050611b3a8184612049565b611b565760405162461bcd60e51b815260040161025f90612695565b82516020808501919091206000908152600790915260408120805460ff19166001179055611bc188426040516001600160601b0319606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b6000818152600560208190526040909120015490915060ff1615611c1f5760405162461bcd60e51b8152602060048201526015602482015274506f6c69637920616c72656164792065786973747360581b604482015260640161025f565b604051806101000160405280828152602001896001600160a01b031681526020018881526020018781526020018642611c5891906126c0565b81526001602080830182905260006040808501829052426060958601528682526005808452818320875181558785015195810180546001600160a01b039097166001600160a01b0319909716969096179095558682015160028601559486015160038501556080860151600485015560a0860151948401805460c088015115156101000261ff00199715159790971661ffff19909116179590951790945560e090940151600690920191909155600890528120556003546040516000916001600160a01b03169089908381818185875af1925050503d8060008114611d59576040519150601f19603f3d011682016040523d82523d6000602084013e611d5e565b606091505b5050905080611daf5760405162461bcd60e51b815260206004820181905260248201527f5072656d69756d207472616e7366657220746f207661756c74206661696c6564604482015260640161025f565b6001600160a01b038916827f105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff8a8a611de78b426126c0565b6040805193845260208401929092529082015260600160405180910390a35060018055979650505050505050565b6000611e2081611faa565b6001600160a01b038216611e6e5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b604482015260640161025f565b611e8660008051602061275683398151915283611fb7565b506040516001600160a01b038316907f1c4e23de8d72c94b22992bd4d7b6786b215ba876af214ff63e6a0ca38fc97af490600090a25050565b6000818152600560208181526040808420815161010080820184528254825260018301546001600160a01b03169482019490945260028201549281019290925260038101546060830152600481015460808301529283015460ff808216151560a084018190529390910416151560c082015260069092015460e0830152611f495750600092915050565b60008381526008602052604090205460608201518110611f6d575060009392505050565b808260600151611f7d91906126d3565b949350505050565b600082815260208190526040902060010154611fa081611faa565b6108eb8383612100565b611fb4813361216b565b50565b6000611fc38383611729565b612041576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055611ff93390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610811565b506000610811565b805160208083019190912060009081526007909152604081205460ff16156120ac5760405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c9948185b1c9958591e481d5cd95960521b604482015260640161025f565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c849052603c8120906120e682856121a8565b6002546001600160a01b0390811691161495945050505050565b600061210c8383611729565b15612041576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610811565b6121758282611729565b6121a45760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161025f565b5050565b6000806000806121b886866121d2565b9250925092506121c8828261221f565b5090949350505050565b6000806000835160410361220c5760208401516040850151606086015160001a6121fe888285856122d8565b955095509550505050612218565b50508151600091506002905b9250925092565b60008260038111156122335761223361273f565b0361223c575050565b60018260038111156122505761225061273f565b0361226e5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156122825761228261273f565b036122a35760405163fce698f760e01b81526004810182905260240161025f565b60038260038111156122b7576122b761273f565b036121a4576040516335e2f38360e21b81526004810182905260240161025f565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115612313575060009150600390508261239d565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015612367573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166123935750600092506001915082905061239d565b9250600091508190505b9450945094915050565b6000602082840312156123b957600080fd5b81356001600160e01b0319811681146123d157600080fd5b9392505050565b6000602082840312156123ea57600080fd5b5035919050565b6001600160a01b0381168114611fb457600080fd5b6000806040838503121561241957600080fd5b82359150602083013561242b816123f1565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261245d57600080fd5b813567ffffffffffffffff8082111561247857612478612436565b604051601f8301601f19908116603f011681019082821181831017156124a0576124a0612436565b816040528381528660208588010111156124b957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156124ee57600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561251357600080fd5b61251f8682870161244c565b9150509250925092565b6000806000806080858703121561253f57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561256b57600080fd5b6125778782880161244c565b91505092959194509250565b60006020828403121561259557600080fd5b81356123d1816123f1565b600080600080600060a086880312156125b857600080fd5b85356125c3816123f1565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff8111156125f457600080fd5b6126008882890161244c565b9150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108115761081161260d565b602080825260119082015270506f6c696379206e6f742061637469766560781b604082015260600190565b94855260609390931b6001600160601b031916602085015260348401919091526054830152607482015260940190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b808201808211156108115761081161260d565b818103818111156108115761081161260d565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008261273a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220333315e24f99645f177e1437c7eee2531507a799d203a1d53a76b87ab2e88a9864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C51F60F GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xB87FB65C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCB804860 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCB804860 EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x7C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB87FB65C EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xA3F685F9 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xAA04CD14 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xB0529DA2 EQ PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C51F60F EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3719F096 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x5312EA8E GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3719F096 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x4E494B7C EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x5052CB49 EQ PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x2FE1814C EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x30D95B53 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x19C0D1FA EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x26A JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x212 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820666F7277617264696E6720746F207661756C74206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x23A7 JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x393 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D9 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x1436 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x14D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x1581 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x1729 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x1752 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59B PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 SWAP1 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x1810 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x632 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x2F4 PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0x192F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x2583 JUMP JUMPDEST PUSH2 0x1E15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x704 PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH2 0x763 CALLDATASIZE PUSH1 0x4 PUSH2 0x23D8 JUMP JUMPDEST PUSH2 0x1EBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x268 PUSH2 0x783 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH2 0x1F85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x7A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x7A8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x811 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x822 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F64206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x882 DUP4 PUSH3 0x15180 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB792057619E1A3B0E2768725EF4CB4FC3CBF647C992D306E6876522E3FC0CDBC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x8E1 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x8EB DUP4 DUP4 PUSH2 0x1FB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x909 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x93D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x9ED SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 DUP6 SWAP1 CHAINID SWAP1 PUSH1 0x20 ADD PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA0F DUP2 DUP7 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP6 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 DUP5 ADD SLOAD SWAP2 MLOAD PUSH4 0x1F9CAB47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7E72AD1C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xEFFDA959FAD3422EF4E602F1642198E56536DBBF192DA630DCBC451B5B5C203D SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB91 DUP3 DUP3 PUSH2 0x2100 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xBB0 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481C995C5D595CDD08195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xCBF SWAP1 DUP5 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT PUSH2 0xCEF JUMPI PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x957A909A771D0C1C8B37C8F5C6C9DF37D8D7C521D3D99445839EDE9153D06358 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xE87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x141BDB1A58DE48199D5B1B1E4818DB185A5B5959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP4 CALLVALUE EQ PUSH2 0xF22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x125B98DBDC9C9958DD081C1C995B5A5D5B48185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xF47 JUMPI POP PUSH3 0x278D00 TIMESTAMP DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0xF44 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6F206561726C7920746F2072656E6577 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E13380 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xFB9 SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 DUP7 SWAP1 CHAINID SWAP1 PUSH1 0x20 ADD PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xFDB DUP2 DUP6 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1067 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x106C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x15985D5B1D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x2 DUP5 ADD DUP8 SWAP1 SSTORE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x10D5 DUP4 TIMESTAMP PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP12 SWAP3 PUSH32 0x16FE3AA381DE20CB3E0FB3F9AE8D20168747DF7E26DBC2B381AD5025EE5CA086 SWAP3 PUSH2 0x112B SWAP3 SWAP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x115F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0x1198 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20657863656564732073756D206173737572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0x12E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1323 DUP2 DUP6 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP4 ADD SWAP2 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP5 ADD SLOAD SWAP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1441 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC1075329 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC1075329 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DF DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964207369676E65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x4A297CF5D32586F80D2B0708A39D2DA1F46E6AE7722171E1C51DFD685B5B8AA8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x158C DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x483BDEDAAF23706A9800AC1AF0D852B34927780D79F9D6BA60A80C7CAD75EA39 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO DUP1 ISZERO PUSH1 0xA0 DUP6 ADD MSTORE SWAP4 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE DUP1 PUSH2 0x16B8 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x16C6 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x16D8 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x16F0 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x1705 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1716 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x271D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175D DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x17AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x17F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA103932BB37B5B29039B2B633 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH2 0xB91 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x2100 JUMP JUMPDEST PUSH4 0x1E13380 PUSH1 0x0 PUSH2 0x1824 DUP8 DUP8 DUP8 DUP6 DUP8 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xB1EFB5A54D173A08F1D7AE00E21150DA481AC80D259826760104A5BA97BE6FA8 DUP9 PUSH1 0x40 MLOAD PUSH2 0xB4D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x263A JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x18E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE481B9BDD08195E1C1A5C9959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x26E6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x19A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x19F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D75737420626520706F7369746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1A46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D2061737375726564206D75737420626520706F73697469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x1AE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x125B98DBDC9C9958DD081C1C995B5A5D5B48185B5BDD5B9D PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x74 DUP2 ADD DUP5 SWAP1 MSTORE CHAINID PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xB4 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1B3A DUP2 DUP5 PUSH2 0x2049 JUMP JUMPDEST PUSH2 0x1B56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2695 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1BC1 DUP9 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1C1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 TIMESTAMP PUSH2 0x1C58 SWAP2 SWAP1 PUSH2 0x26C0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE DUP2 DUP4 KECCAK256 DUP8 MLOAD DUP2 SSTORE DUP8 DUP6 ADD MLOAD SWAP6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE DUP7 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE SWAP5 DUP7 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP7 ADD MLOAD SWAP5 DUP5 ADD DUP1 SLOAD PUSH1 0xC0 DUP9 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP8 ISZERO ISZERO SWAP8 SWAP1 SWAP8 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0xE0 SWAP1 SWAP5 ADD MLOAD PUSH1 0x6 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SWAP1 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D59 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D5E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1DAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D207472616E7366657220746F207661756C74206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP11 DUP11 PUSH2 0x1DE7 DUP12 TIMESTAMP PUSH2 0x26C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E20 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH2 0x1E86 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2756 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1FB7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1C4E23DE8D72C94B22992BD4D7B6786B215BA876AF214FF63E6A0CA38FC97AF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x1F49 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 DUP3 ADD MLOAD DUP2 LT PUSH2 0x1F6D JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x1F7D SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1FA0 DUP2 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x8EB DUP4 DUP4 PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x1FB4 DUP2 CALLER PUSH2 0x216B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP4 DUP4 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x2041 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1FF9 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x811 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x811 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25F JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP5 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 PUSH2 0x20E6 DUP3 DUP6 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210C DUP4 DUP4 PUSH2 0x1729 JUMP JUMPDEST ISZERO PUSH2 0x2041 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x2175 DUP3 DUP3 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x21A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x25F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x21B8 DUP7 DUP7 PUSH2 0x21D2 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x21C8 DUP3 DUP3 PUSH2 0x221F JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x220C JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x21FE DUP9 DUP3 DUP6 DUP6 PUSH2 0x22D8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2218 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2233 JUMPI PUSH2 0x2233 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x223C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2250 JUMPI PUSH2 0x2250 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x226E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2282 JUMPI PUSH2 0x2282 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x22A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22B7 JUMPI PUSH2 0x22B7 PUSH2 0x273F JUMP JUMPDEST SUB PUSH2 0x21A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x2313 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2393 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x239D JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x23D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1FB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x242B DUP2 PUSH2 0x23F1 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2478 JUMPI PUSH2 0x2478 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x24A0 JUMPI PUSH2 0x24A0 PUSH2 0x2436 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x24B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251F DUP7 DUP3 DUP8 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x253F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x256B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2577 DUP8 DUP3 DUP9 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23D1 DUP2 PUSH2 0x23F1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x25B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x25C3 DUP2 PUSH2 0x23F1 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2600 DUP9 DUP3 DUP10 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x34 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x94 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x260D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x811 JUMPI PUSH2 0x811 PUSH2 0x260D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x273A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220333315E24F99645F177E1437 0xC7 0xEE 0xE2 MSTORE8 ISZERO SMOD 0xA7 SWAP10 0xD2 SUB LOG1 0xD5 GASPRICE PUSH23 0xB87AB2E88A9864736F6C63430008140033000000000000 ","sourceMap":"371:6270:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15868:5:13;;15860:41;;15845:9;;-1:-1:-1;;;;;15868:5:13;;15887:9;;15845;15860:41;15845:9;15860:41;15887:9;15868:5;15860:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15844:57;;;15919:4;15911:47;;;;-1:-1:-1;;;15911:47:13;;426:2:18;15911:47:13;;;408:21:18;465:2;445:18;;;438:30;504:32;484:18;;;477:60;554:18;;15911:47:13;;;;;;;;;15785:180;371:6270:15;;;;2565:202:0;;;;;;;;;;-1:-1:-1;2565:202:0;;;;;:::i;:::-;;:::i;:::-;;;1039:14:18;;1032:22;1014:41;;1002:2;987:18;2565:202:0;;;;;;;;4349:326:13;;;;;;;;;;-1:-1:-1;4349:326:13;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;;;;;-1:-1:-1;3810:120:0;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;1582:25:18;;;1570:2;1555:18;3810:120:0;1436:177:18;4226:136:0;;;;;;;;;;-1:-1:-1;4226:136:0;;;;;:::i;:::-;;:::i;5581:1058:15:-;;;;;;;;;;-1:-1:-1;5581:1058:15;;;;;:::i;:::-;;:::i;947:41:13:-;;;;;;;;;;;;;;;;5328:245:0;;;;;;;;;;-1:-1:-1;5328:245:0;;;;;:::i;:::-;;:::i;2114:1002:15:-;;;;;;;;;;-1:-1:-1;2114:1002:15;;;;;:::i;:::-;;:::i;4046:1483::-;;;;;;:::i;:::-;;:::i;9192:1268:13:-;;;;;;;;;;-1:-1:-1;9192:1268:13;;;;;:::i;:::-;;:::i;15435:247::-;;;;;;;;;;-1:-1:-1;15435:247:13;;;;;:::i;:::-;;:::i;3557:293::-;;;;;;;;;;-1:-1:-1;3557:293:13;;;;;:::i;:::-;;:::i;3947:287::-;;;;;;;;;;-1:-1:-1;3947:287:13;;;;;:::i;:::-;;:::i;674:60::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;674:60:13;;3568:412:15;;;;;;;;;;-1:-1:-1;3568:412:15;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;;;;;-1:-1:-1;2854:136:0;;;;;:::i;:::-;;:::i;5060:256:13:-;;;;;;;;;;-1:-1:-1;5060:256:13;;;;;:::i;:::-;;:::i;2187:49:0:-;;;;;;;;;;-1:-1:-1;2187:49:0;2232:4;2187:49;;12908:125:13;;;;;;;;;;-1:-1:-1;12908:125:13;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13008:18:13;;;;:8;:18;;;;;;;;;13001:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13001:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12908:125;;;;;;;4827:13:18;;4809:32;;4901:4;4889:17;;;4883:24;-1:-1:-1;;;;;4879:50:18;4857:20;;;4850:80;4986:4;4974:17;;;4968:24;4946:20;;;4939:54;5049:4;5037:17;;;5031:24;5009:20;;;5002:54;5112:4;5100:17;;;5094:24;5072:20;;;5065:54;4917:3;5177:17;;;5171:24;5164:32;5157:40;5135:20;;;5128:70;5268:4;5256:17;;;5250:24;5243:32;5236:40;5214:20;;;5207:70;5333:4;5321:17;;;5315:24;5293:20;;;5286:54;;;;4796:3;4781:19;;4614:732;1489:547:15;;;;;;:::i;:::-;;:::i;13338:348:13:-;;;;;;;;;;-1:-1:-1;13338:348:13;;;;;:::i;:::-;;:::i;6677:2082::-;;;;;;:::i;:::-;;:::i;4747:240::-;;;;;;;;;;-1:-1:-1;4747:240:13;;;;;:::i;:::-;;:::i;13118:128::-;;;;;;;;;;-1:-1:-1;13118:128:13;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13223:16:13;;;;:6;:16;;;;;;;;;13216:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:128;;;;;;;6169:4:18;6211:3;6200:9;6196:19;6188:27;;6248:6;6242:13;6231:9;6224:32;6312:4;6304:6;6300:17;6294:24;6287:4;6276:9;6272:20;6265:54;6389:4;6381:6;6377:17;6371:24;6364:32;6357:40;6350:4;6339:9;6335:20;6328:70;6454:4;6446:6;6442:17;6436:24;6429:4;6418:9;6414:20;6407:54;6517:4;6509:6;6505:17;6499:24;6492:4;6481:9;6477:20;6470:54;6017:513;;;;;3178:322:15;;;;;;;;;;-1:-1:-1;3178:322:15;;;;;:::i;:::-;;:::i;4642:138:0:-;;;;;;;;;;-1:-1:-1;4642:138:0;;;;;:::i;:::-;;:::i;775:28:13:-;;;;;;;;;;-1:-1:-1;775:28:13;;;;-1:-1:-1;;;;;775:28:13;;;;;;-1:-1:-1;;;;;6699:32:18;;;6681:51;;6669:2;6654:18;775:28:13;6535:203:18;854:27:13;;;;;;;;;;-1:-1:-1;854:27:13;;;;-1:-1:-1;;;;;854:27:13;;;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:8;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;4349:326:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;4472:1:13::1;4457:12;:16;4449:52;;;::::0;-1:-1:-1;;;4449:52:13;;7184:2:18;4449:52:13::1;::::0;::::1;7166:21:18::0;7223:2;7203:18;;;7196:30;7262:25;7242:18;;;7235:53;7305:18;;4449:52:13::1;6982:347:18::0;4449:52:13::1;4531:17;::::0;4578:21:::1;:12:::0;4593:6:::1;4578:21;:::i;:::-;4558:17;:41:::0;;;4614:54:::1;::::0;;7813:25:18;;;7869:2;7854:18;;7847:34;;;;4614:54:13::1;::::0;7786:18:18;4614:54:13::1;;;;;;;4439:236;4349:326:::0;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5581:1058:15:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;5746:8:15;;5432:27:13::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;5766:21:15::2;5790:18:::0;;;:8:::2;:18;::::0;;;;;;;5826:15;;::::2;::::0;::::2;;5818:45;;;;-1:-1:-1::0;;;5818:45:15::2;;;;;;;:::i;:::-;5882:16;::::0;::::2;::::0;::::2;::::0;::::2;;;5881:17;5873:52;;;::::0;-1:-1:-1;;;5873:52:15;;8440:2:18;5873:52:15::2;::::0;::::2;8422:21:18::0;8479:2;8459:18;;;8452:30;-1:-1:-1;;;8498:18:18;;;8491:52;8560:18;;5873:52:15::2;8238:346:18::0;5873:52:15::2;6073:12;::::0;::::2;::::0;6046:81:::2;::::0;6001:19:::2;::::0;6046:81:::2;::::0;6063:8;;-1:-1:-1;;;;;6073:12:15::2;::::0;6087;;6001:19;;6113:13:::2;::::0;6046:81:::2;;;:::i;:::-;;;;;;;;;;;;;6023:114;;;;;;6001:136;;6164:39;6180:11;6193:9;6164:15;:39::i;:::-;6156:69;;;;-1:-1:-1::0;;;6156:69:15::2;;;;;;;:::i;:::-;6250:20:::0;;::::2;::::0;;::::2;::::0;;;;6235:36:::2;::::0;;;:14:::2;:36:::0;;;;;;;;:43;;6274:4:::2;-1:-1:-1::0;;6235:43:15;;::::2;::::0;::::2;::::0;;;6297:15:::2;::::0;::::2;:23:::0;;;;::::2;::::0;;6435:5:::2;::::0;6460:12;;::::2;::::0;6435:53;;-1:-1:-1;;;6435:53:15;;-1:-1:-1;;;;;6460:12:15;;::::2;6435:53;::::0;::::2;9621:51:18::0;9688:18;;;9681:34;;;6435:5:15;::::2;::::0;:16:::2;::::0;9594:18:18;;6435:53:15::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;6538:12:15::2;::::0;::::2;::::0;6512:53:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;6538:12:15;;::::2;::::0;6528:8;;6512:53:::2;::::0;1570:2:18;1555:18;6512:53:15::2;;;;;;;6605:12;::::0;::::2;::::0;6580:52:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;6605:12:15;;::::2;::::0;6595:8;;6580:52:::2;::::0;1570:2:18;1555:18;6580:52:15::2;;;;;;;;5756:883;;2490:1:0::1;5581:1058:15::0;;;;:::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:3;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2114:1002:15:-;2265:7;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;2238:8:15;;5432:27:13::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;2289:26:15::2;2318:16:::0;;;:6:::2;:16;::::0;;;;;;;2368:8:::2;:18:::0;;;;;;2404:15:::2;::::0;::::2;::::0;::::2;;2396:44;;;::::0;-1:-1:-1;;;2396:44:15;;9928:2:18;2396:44:15::2;::::0;::::2;9910:21:18::0;9967:2;9947:18;;;9940:30;-1:-1:-1;;;9986:18:18;;;9979:46;10042:18;;2396:44:15::2;9726:340:18::0;2396:44:15::2;2477:5;:21;;;2458:15;:40;;2450:74;;;::::0;-1:-1:-1;;;2450:74:15;;10273:2:18;2450:74:15::2;::::0;::::2;10255:21:18::0;10312:2;10292:18;;;10285:30;-1:-1:-1;;;10331:18:18;;;10324:51;10392:18;;2450:74:15::2;10071:345:18::0;2450:74:15::2;2543:15;::::0;::::2;:23:::0;;-1:-1:-1;;2543:23:15::2;::::0;;;2602:12;::::2;::::0;2561:5:::2;2576:22:::0;;;:12:::2;:22;::::0;;;;:38;;:22;;2561:5;2576:38:::2;::::0;2602:12;;2576:38:::2;:::i;:::-;::::0;;;-1:-1:-1;;2663:17:15::2;::::0;::::2;::::0;2637:22:::2;::::0;;;:12:::2;:22;::::0;;;;;:43:::2;2633:134;;2696:15;::::0;::::2;:23:::0;;-1:-1:-1;;2733:23:15;2696::::2;2733;::::0;;2633:134:::2;2881:5;::::0;;2908:12;;::::2;::::0;2923;;::::2;::::0;2881:55:::2;::::0;-1:-1:-1;;;2881:55:15;;-1:-1:-1;;;;;2908:12:15;;::::2;2881:55;::::0;::::2;9621:51:18::0;9688:18;;;9681:34;;;;2881:5:15;::::2;::::0;:18:::2;::::0;9594::18;;2881:55:15::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;2984:12:15::2;::::0;;::::2;::::0;2998;;::::2;::::0;2960:51:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;2984:12:15;;::::2;::::0;2974:8;;2960:51:::2;::::0;1570:2:18;1555:18;2960:51:15::2;;;;;;;3053:12;::::0;;::::2;::::0;3067;;::::2;::::0;3026:54:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;3053:12:15;;::::2;::::0;3043:8;;3026:54:::2;::::0;1570:2:18;1555:18;3026:54:15::2;;;;;;;-1:-1:-1::0;3097:12:15::2;;::::0;;2114:1002;-1:-1:-1;;;;2114:1002:15:o;4046:1483::-;4224:21;4248:18;;;:8;:18;;;;;4284:12;;;;-1:-1:-1;;;;;4284:12:15;4300:10;4284:26;4276:59;;;;-1:-1:-1;;;4276:59:15;;10753:2:18;4276:59:15;;;10735:21:18;10792:2;10772:18;;;10765:30;-1:-1:-1;;;10811:18:18;;;10804:50;10871:18;;4276:59:15;10551:344:18;4276:59:15;4353:15;;;;;;4345:45;;;;-1:-1:-1;;;4345:45:15;;;;;;;:::i;:::-;4409:16;;;;;;;;;4408:17;4400:50;;;;-1:-1:-1;;;4400:50:15;;11102:2:18;4400:50:15;;;11084:21:18;11141:2;11121:18;;;11114:30;-1:-1:-1;;;11160:18:18;;;11153:50;11220:18;;4400:50:15;10900:344:18;4400:50:15;4481:7;4468:9;:20;4460:57;;;;-1:-1:-1;;;4460:57:15;;11451:2:18;4460:57:15;;;11433:21:18;11490:2;11470:18;;;11463:30;-1:-1:-1;;;11509:18:18;;;11502:54;11573:18;;4460:57:15;11249:348:18;4460:57:15;4567:6;:13;;;4548:15;:32;;:78;;;;4619:7;4600:15;4584:6;:13;;;:31;;;;:::i;:::-;:42;;4548:78;4527:143;;;;-1:-1:-1;;;4527:143:15;;11937:2:18;4527:143:15;;;11919:21:18;11976:2;11956:18;;;11949:30;-1:-1:-1;;;11995:18:18;;;11988:48;12053:18;;4527:143:15;11735:342:18;4527:143:15;4870:12;;;;4843:80;;492:8;;4689:22;;4843:80;;4860:8;;-1:-1:-1;;;;;4870:12:15;;;;4884:7;;492:8;;4909:13;;4843:80;;;:::i;:::-;;;;;;;;;;;;;4820:113;;;;;;4798:135;;4960:39;4976:11;4989:9;4960:15;:39::i;:::-;4952:69;;;;-1:-1:-1;;;4952:69:15;;;;;;;:::i;:::-;5046:20;;;;;;;;;;5031:36;;;;:14;:36;;;;;;;:43;;-1:-1:-1;;5031:43:15;5070:4;5031:43;;;5212:5;;5204:41;;-1:-1:-1;;;;;5212:5:15;;;;5231:9;;5031:36;5204:41;5031:36;5204:41;5231:9;5212:5;5204:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5189:56;;;5263:4;5255:38;;;;-1:-1:-1;;;5255:38:15;;12284:2:18;5255:38:15;;;12266:21:18;12323:2;12303:18;;;12296:30;-1:-1:-1;;;12342:18:18;;;12335:51;12403:18;;5255:38:15;12082:345:18;5255:38:15;5312:14;;;:24;;;5371:1;5346:22;;;:12;:22;;;;;:26;5398:32;5416:14;5398:15;:32;:::i;:::-;5382:13;;;:48;;;5478:12;;;;5492:14;;;;5454:68;;-1:-1:-1;;;;;5478:12:15;;;;5468:8;;5454:68;;;;5492:14;7813:25:18;;7869:2;7854:18;;7847:34;7801:2;7786:18;;7639:248;5454:68:15;;;;;;;;4214:1315;;;;4046:1483;;;;:::o;9192:1268:13:-;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;5432::::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;9339:8;;5432:27:::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;9359:21:::2;9383:18:::0;;;:8:::2;:18;::::0;;;;9419:12:::2;::::0;::::2;::::0;-1:-1:-1;;;;;9419:12:13::2;9435:10;9419:26;9411:59;;;::::0;-1:-1:-1;;;9411:59:13;;10753:2:18;9411:59:13::2;::::0;::::2;10735:21:18::0;10792:2;10772:18;;;10765:30;-1:-1:-1;;;10811:18:18;;;10804:50;10871:18;;9411:59:13::2;10551:344:18::0;9411:59:13::2;9498:6;:17;;;9488:6;:27;;9480:65;;;::::0;-1:-1:-1;;;9480:65:13;;12994:2:18;9480:65:13::2;::::0;::::2;12976:21:18::0;13033:2;13013:18;;;13006:30;13072:27;13052:18;;;13045:55;13117:18;;9480:65:13::2;12792:349:18::0;9480:65:13::2;9564:16;::::0;::::2;::::0;::::2;::::0;::::2;;;9563:17;9555:52;;;::::0;-1:-1:-1;;;9555:52:13;;8440:2:18;9555:52:13::2;::::0;::::2;8422:21:18::0;8479:2;8459:18;;;8452:30;-1:-1:-1;;;8498:18:18;;;8491:52;8560:18;;9555:52:13::2;8238:346:18::0;9555:52:13::2;9643:6;:13;;;9625:15;:31;9617:58;;;::::0;-1:-1:-1;;;9617:58:13;;13348:2:18;9617:58:13::2;::::0;::::2;13330:21:18::0;13387:2;13367:18;;;13360:30;-1:-1:-1;;;13406:18:18;;;13399:44;13460:18;;9617:58:13::2;13146:338:18::0;9617:58:13::2;9813:111;::::0;;::::2;::::0;::::2;13674:19:18::0;;;13709:12;;;13702:28;;;9897:13:13::2;13746:12:18::0;;;13739:28;9768:19:13::2;::::0;13783:12:18;;9813:111:13::2;;;;;;;;;;;;9790:144;;;;;;9768:166;;9989:39;10005:11;10018:9;9989:15;:39::i;:::-;9981:69;;;;-1:-1:-1::0;;;9981:69:13::2;;;;;;;:::i;:::-;10118:20:::0;;::::2;::::0;;::::2;::::0;;;;10103:36:::2;::::0;;;:14:::2;:36:::0;;;;;;;:43;;-1:-1:-1;;10103:43:13::2;10142:4;10103:43:::0;;::::2;::::0;;;10176:219;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;10303:15:::2;10176:219:::0;;;;;;10367:17:::2;::::0;10176:219;;;;10349:35:::2;::::0;10367:17;10349:35:::2;:::i;:::-;10176:219:::0;;10157:16:::2;::::0;;;:6:::2;:16;::::0;;;;;;;;:238;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;10157:238:13::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;10432:12;;::::2;::::0;10411:42;;1582:25:18;;;-1:-1:-1;;;;;10432:12:13;;::::2;::::0;10157:16;;10411:42:::2;::::0;1555:18:18;10411:42:13::2;;;;;;;-1:-1:-1::0;;574:1:13;3386:22;;-1:-1:-1;;;;9192:1268:13:o;15435:247::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;617:1:13::1;3282:7;;:19:::0;3274:63:::1;;;;-1:-1:-1::0;;;3274:63:13::1;;;;;;;:::i;:::-;617:1;3347:7;:18:::0;15627:5:::2;::::0;:48:::2;::::0;-1:-1:-1;;;15627:48:13;;15655:10:::2;15627:48;::::0;::::2;9621:51:18::0;9688:18;;;9681:34;;;-1:-1:-1;;;;;15627:5:13;;::::2;::::0;:19:::2;::::0;9594:18:18;;15627:48:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;574:1:13::1;3386:22:::0;;-1:-1:-1;;;;15435:247:13:o;3557:293::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3658:23:13;::::1;3650:58;;;::::0;-1:-1:-1;;;3650:58:13;;14008:2:18;3650:58:13::1;::::0;::::1;13990:21:18::0;14047:2;14027:18;;;14020:30;-1:-1:-1;;;14066:18:18;;;14059:52;14128:18;;3650:58:13::1;13806:346:18::0;3650:58:13::1;3738:13;::::0;;-1:-1:-1;;;;;3761:25:13;;::::1;-1:-1:-1::0;;;;;;3761:25:13;::::1;::::0;::::1;::::0;;;3801:42:::1;::::0;3738:13;::::1;::::0;3761:25;3738:13;;3801:42:::1;::::0;3718:17:::1;::::0;3801:42:::1;3640:210;3557:293:::0;;:::o;3947:287::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4047:22:13;::::1;4039:56;;;::::0;-1:-1:-1;;;4039:56:13;;14359:2:18;4039:56:13::1;::::0;::::1;14341:21:18::0;14398:2;14378:18;;;14371:30;-1:-1:-1;;;14417:18:18;;;14410:51;14478:18;;4039:56:13::1;14157:345:18::0;4039:56:13::1;4132:5;::::0;;-1:-1:-1;;;;;4148:32:13;;::::1;-1:-1:-1::0;;;;;;4148:32:13;::::1;::::0;::::1;::::0;;;4195::::1;::::0;4132:5;::::1;::::0;4148:32;4132:5;;4195:32:::1;::::0;4105:16:::1;::::0;4195:32:::1;4029:205;3947:287:::0;;:::o;3568:412:15:-;3632:7;3669:18;;;:8;:18;;;;;;;;3651:36;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3651:36:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701:42;;;3735:1;:8;;;3716:15;:27;;3701:42;3697:56;;;-1:-1:-1;3752:1:15;;3568:412;-1:-1:-1;;3568:412:15:o;3697:56::-;3763:22;3799:15;3788:1;:8;;;:26;;;;:::i;:::-;3763:51;;3824:21;3859:1;:11;;;3848:1;:8;;;:22;;;;:::i;:::-;3824:46;;3884:13;3901:1;3884:18;3880:32;;-1:-1:-1;3911:1:15;;3568:412;-1:-1:-1;;;;3568:412:15:o;3880:32::-;3960:13;3942:14;3930:1;:9;;;:26;;;;:::i;:::-;3929:44;;;;:::i;:::-;3922:51;3568:412;-1:-1:-1;;;;;3568:412:15:o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;5060:256:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;5164:19:13;::::1;5156:53;;;::::0;-1:-1:-1;;;5156:53:13;;14931:2:18;5156:53:13::1;::::0;::::1;14913:21:18::0;14970:2;14950:18;;;14943:30;-1:-1:-1;;;14989:18:18;;;14982:51;15050:18;;5156:53:13::1;14729:345:18::0;5156:53:13::1;5236:10;-1:-1:-1::0;;;;;5227:19:13;::::1;::::0;5219:50:::1;;;::::0;-1:-1:-1;;;5219:50:13;;15281:2:18;5219:50:13::1;::::0;::::1;15263:21:18::0;15320:2;15300:18;;;15293:30;-1:-1:-1;;;15339:18:18;;;15332:48;15397:18;;5219:50:13::1;15079:342:18::0;5219:50:13::1;5279:30;-1:-1:-1::0;;;;;;;;;;;5303:5:13::1;5279:11;:30::i;1489:547:15:-:0;492:8;1692:22;1754:75;1775:5;1782:7;1791:10;492:8;1819:9;1754:20;:75::i;:::-;1735:94;;2014:5;-1:-1:-1;;;;;1986:43:15;2004:8;1986:43;2021:7;1986:43;;;;1582:25:18;;1570:2;1555:18;;1436:177;13338:348:13;13402:21;13426:18;;;:8;:18;;;;;;;;13462:15;;;;;;13454:45;;;;-1:-1:-1;;;13454:45:13;;;;;;;:::i;:::-;13536:6;:13;;;13517:15;:32;;13509:67;;;;-1:-1:-1;;;13509:67:13;;15628:2:18;13509:67:13;;;15610:21:18;15667:2;15647:18;;;15640:30;-1:-1:-1;;;15686:18:18;;;15679:52;15748:18;;13509:67:13;15426:346:18;13509:67:13;13595:15;;;:23;;-1:-1:-1;;13595:23:13;;;;13666:12;;;13642:37;;-1:-1:-1;;;;;13666:12:13;;;;13656:8;;13642:37;;13613:5;;13642:37;13392:294;13338:348;:::o;6677:2082::-;6886:7;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;-1:-1:-1;;;;;6915:19:13;::::1;6907:53;;;::::0;-1:-1:-1;;;6907:53:13;;15979:2:18;6907:53:13::1;::::0;::::1;15961:21:18::0;16018:2;15998:18;;;15991:30;-1:-1:-1;;;16037:18:18;;;16030:51;16098:18;;6907:53:13::1;15777:345:18::0;6907:53:13::1;6988:1;6978:7;:11;6970:48;;;::::0;-1:-1:-1;;;6970:48:13;;16329:2:18;6970:48:13::1;::::0;::::1;16311:21:18::0;16368:2;16348:18;;;16341:30;16407:26;16387:18;;;16380:54;16451:18;;6970:48:13::1;16127:348:18::0;6970:48:13::1;7049:1;7036:10;:14;7028:55;;;::::0;-1:-1:-1;;;7028:55:13;;16682:2:18;7028:55:13::1;::::0;::::1;16664:21:18::0;16721:2;16701:18;;;16694:30;16760;16740:18;;;16733:58;16808:18;;7028:55:13::1;16480:352:18::0;7028:55:13::1;7112:1;7101:8;:12;7093:50;;;::::0;-1:-1:-1;;;7093:50:13;;17039:2:18;7093:50:13::1;::::0;::::1;17021:21:18::0;17078:2;17058:18;;;17051:30;17117:27;17097:18;;;17090:55;17162:18;;7093:50:13::1;16837:349:18::0;7093:50:13::1;7174:7;7161:9;:20;7153:57;;;::::0;-1:-1:-1;;;7153:57:13;;11451:2:18;7153:57:13::1;::::0;::::1;11433:21:18::0;11490:2;11470:18;;;11463:30;-1:-1:-1;;;11509:18:18;;;11502:54;11573:18;;7153:57:13::1;11249:348:18::0;7153:57:13::1;7402:163;::::0;-1:-1:-1;;;;;;17452:2:18;17448:15;;;17444:53;7402:163:13::1;::::0;::::1;17432:66:18::0;17514:12;;;17507:28;;;17551:12;;;17544:28;;;17588:12;;;17581:28;;;7538:13:13::1;17625::18::0;;;17618:29;7357:19:13::1;::::0;17663:13:18;;7402:163:13::1;;;;;;;;;;;;7379:196;;;;;;7357:218;;7630:39;7646:11;7659:9;7630:15;:39::i;:::-;7622:69;;;;-1:-1:-1::0;;;7622:69:13::1;;;;;;;:::i;:::-;7759:20:::0;;::::1;::::0;;::::1;::::0;;;;7744:36:::1;::::0;;;:14:::1;:36:::0;;;;;;:43;;-1:-1:-1;;7744:43:13::1;7783:4;7744:43;::::0;;7864:40:::1;7881:5:::0;7888:15:::1;5674:33:::0;;-1:-1:-1;;;;;;19250:2:18;19246:15;;;19242:53;5674:33:13;;;19230:66:18;19312:12;;;19305:28;;;5638:7:13;;19349:12:18;;5674:33:13;;;;;;;;;;;;5664:44;;;;;;5657:51;;5556:159;;;;;7864:40:::1;7923:18;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;7845:59;;-1:-1:-1;7923:27:13::1;;7922:28;7914:62;;;::::0;-1:-1:-1;;;7914:62:13;;17889:2:18;7914:62:13::1;::::0;::::1;17871:21:18::0;17928:2;17908:18;;;17901:30;-1:-1:-1;;;17947:18:18;;;17940:51;18008:18;;7914:62:13::1;17687:345:18::0;7914:62:13::1;8050:288;;;;;;;;8081:8;8050:288;;;;8110:5;-1:-1:-1::0;;;;;8050:288:13::1;;;;;8138:7;8050:288;;;;8171:10;8050:288;;;;8221:8;8203:15;:26;;;;:::i;:::-;8050:288:::0;;8253:4:::1;8050:288;::::0;;::::1;::::0;;;-1:-1:-1;8050:288:13;;;;;;;8312:15:::1;8050:288:::0;;;;;8029:18;;;:8:::1;:18:::0;;;;;;:309;;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;8029:309:13;;::::1;-1:-1:-1::0;;;;;;8029:309:13;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;;;;-1:-1:-1::0;;8029:309:13;::::1;;::::0;;;;-1:-1:-1;;8029:309:13;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;1362:12:15;:22;;;;:26;8506:5:13::1;::::0;8498:39:::1;::::0;8483:9:::1;::::0;-1:-1:-1;;;;;8506:5:13::1;::::0;8525:7;;8483:9;8498:39;8483:9;8498:39;8525:7;8506:5;8498:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8482:55;;;8555:4;8547:49;;;::::0;-1:-1:-1;;;8547:49:13;;18239:2:18;8547:49:13::1;::::0;::::1;18221:21:18::0;;;18258:18;;;18251:30;18317:34;18297:18;;;18290:62;18369:18;;8547:49:13::1;18037:356:18::0;8547:49:13::1;-1:-1:-1::0;;;;;8612:81:13;::::1;8628:8:::0;8612:81:::1;8645:7:::0;8654:10;8666:26:::1;8684:8:::0;8666:15:::1;:26;:::i;:::-;8612:81;::::0;;18600:25:18;;;18656:2;18641:18;;18634:34;;;;18684:18;;;18677:34;18588:2;18573:18;8612:81:13::1;;;;;;;-1:-1:-1::0;574:1:13;3386:22;;8719:8;6677:2082;-1:-1:-1;;;;;;;6677:2082:13:o;4747:240::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4853:22:13;::::1;4845:56;;;::::0;-1:-1:-1;;;4845:56:13;;14931:2:18;4845:56:13::1;::::0;::::1;14913:21:18::0;14970:2;14950:18;;;14943:30;-1:-1:-1;;;14989:18:18;;;14982:51;15050:18;;4845:56:13::1;14729:345:18::0;4845:56:13::1;4911:32;-1:-1:-1::0;;;;;;;;;;;4934:8:13::1;4911:10;:32::i;:::-;-1:-1:-1::0;4958:22:13::1;::::0;-1:-1:-1;;;;;4958:22:13;::::1;::::0;::::1;::::0;;;::::1;4747:240:::0;;:::o;3178:322:15:-;3247:7;3289:18;;;:8;:18;;;;;;;;3266:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3266:41:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3317:30;;-1:-1:-1;3346:1:15;;3178:322;-1:-1:-1;;3178:322:15:o;3317:30::-;3357:15;3375:22;;;:12;:22;;;;;;3422:17;;;;3411:28;;3407:42;;-1:-1:-1;3448:1:15;;3178:322;-1:-1:-1;;;3178:322:15:o;3407:42::-;3486:7;3466:6;:17;;;:27;;;;:::i;:::-;3459:34;3178:322;-1:-1:-1;;;;3178:322:15:o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3199:103::-:0;3265:30;3276:4;735:10:3;3265::0;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;5925:396:13;6058:20;;;;;;;;;;6018:4;6043:36;;;:14;:36;;;;;;;;;6042:37;6034:72;;;;-1:-1:-1;;;6034:72:13;;18924:2:18;6034:72:13;;;18906:21:18;18963:2;18943:18;;;18936:30;-1:-1:-1;;;18982:18:18;;;18975:52;19044:18;;6034:72:13;18722:346:18;6034:72:13;1401:34:7;6116:28:13;1388:48:7;;;1497:4;1490:25;;;1595:4;1579:21;;;6219:46:13;1579:21:7;6255:9:13;6219:13;:46::i;:::-;6301:13;;-1:-1:-1;;;;;6301:13:13;;;6282:32;;;;5925:396;-1:-1:-1;;;;;5925:396:13:o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:3;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;3432:197;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;9639:32:18;;3565:47:0;;;9621:51:18;9688:18;;;9681:34;;;9594:18;;3565:47:0;9431:290:18;3515:108:0;3432:197;;:::o;3714:255:6:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:6;;3714:255;-1:-1:-1;;;;3714:255:6:o;2129:778::-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:6;;2823:1;;-1:-1:-1;2827:35:6;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:6;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:6;;;;;1582:25:18;;;1555:18;;7634:46:6;1436:177:18;7563:243:6;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:6;;;;;1582:25:18;;;1555:18;;7763:32:6;1436:177:18;5203:1551:6;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:6;;-1:-1:-1;6385:30:6;;-1:-1:-1;6417:1:6;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;20010:25:18;;;20083:4;20071:17;;20051:18;;;20044:45;;;;20105:18;;;20098:34;;;20148:18;;;20141:34;;;6541:24:6;;19982:19:18;;6541:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:6;;-1:-1:-1;;6541:24:6;;;-1:-1:-1;;;;;;;6579:20:6;;6575:113;;-1:-1:-1;6631:1:6;;-1:-1:-1;6635:29:6;;-1:-1:-1;6631:1:6;;-1:-1:-1;6615:62:6;;6575:113;6706:6;-1:-1:-1;6714:20:6;;-1:-1:-1;6714:20:6;;-1:-1:-1;5203:1551:6;;;;;;;;;:::o;583:286:18:-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;736:23;;-1:-1:-1;;;;;;788:32:18;;778:43;;768:71;;835:1;832;825:12;768:71;858:5;583:286;-1:-1:-1;;;583:286:18:o;1066:180::-;1125:6;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;-1:-1:-1;1217:23:18;;1066:180;-1:-1:-1;1066:180:18:o;1618:131::-;-1:-1:-1;;;;;1693:31:18;;1683:42;;1673:70;;1739:1;1736;1729:12;1754:315;1822:6;1830;1883:2;1871:9;1862:7;1858:23;1854:32;1851:52;;;1899:1;1896;1889:12;1851:52;1935:9;1922:23;1912:33;;1995:2;1984:9;1980:18;1967:32;2008:31;2033:5;2008:31;:::i;:::-;2058:5;2048:15;;;1754:315;;;;;:::o;2074:127::-;2135:10;2130:3;2126:20;2123:1;2116:31;2166:4;2163:1;2156:15;2190:4;2187:1;2180:15;2206:718;2248:5;2301:3;2294:4;2286:6;2282:17;2278:27;2268:55;;2319:1;2316;2309:12;2268:55;2355:6;2342:20;2381:18;2418:2;2414;2411:10;2408:36;;;2424:18;;:::i;:::-;2499:2;2493:9;2467:2;2553:13;;-1:-1:-1;;2549:22:18;;;2573:2;2545:31;2541:40;2529:53;;;2597:18;;;2617:22;;;2594:46;2591:72;;;2643:18;;:::i;:::-;2683:10;2679:2;2672:22;2718:2;2710:6;2703:18;2764:3;2757:4;2752:2;2744:6;2740:15;2736:26;2733:35;2730:55;;;2781:1;2778;2771:12;2730:55;2845:2;2838:4;2830:6;2826:17;2819:4;2811:6;2807:17;2794:54;2892:1;2885:4;2880:2;2872:6;2868:15;2864:26;2857:37;2912:6;2903:15;;;;;;2206:718;;;;:::o;2929:456::-;3015:6;3023;3031;3084:2;3072:9;3063:7;3059:23;3055:32;3052:52;;;3100:1;3097;3090:12;3052:52;3136:9;3123:23;3113:33;;3193:2;3182:9;3178:18;3165:32;3155:42;;3248:2;3237:9;3233:18;3220:32;3275:18;3267:6;3264:30;3261:50;;;3307:1;3304;3297:12;3261:50;3330:49;3371:7;3362:6;3351:9;3347:22;3330:49;:::i;:::-;3320:59;;;2929:456;;;;;:::o;3572:525::-;3667:6;3675;3683;3691;3744:3;3732:9;3723:7;3719:23;3715:33;3712:53;;;3761:1;3758;3751:12;3712:53;3797:9;3784:23;3774:33;;3854:2;3843:9;3839:18;3826:32;3816:42;;3905:2;3894:9;3890:18;3877:32;3867:42;;3960:2;3949:9;3945:18;3932:32;3987:18;3979:6;3976:30;3973:50;;;4019:1;4016;4009:12;3973:50;4042:49;4083:7;4074:6;4063:9;4059:22;4042:49;:::i;:::-;4032:59;;;3572:525;;;;;;;:::o;4102:247::-;4161:6;4214:2;4202:9;4193:7;4189:23;4185:32;4182:52;;;4230:1;4227;4220:12;4182:52;4269:9;4256:23;4288:31;4313:5;4288:31;:::i;5351:661::-;5455:6;5463;5471;5479;5487;5540:3;5528:9;5519:7;5515:23;5511:33;5508:53;;;5557:1;5554;5547:12;5508:53;5596:9;5583:23;5615:31;5640:5;5615:31;:::i;:::-;5665:5;-1:-1:-1;5717:2:18;5702:18;;5689:32;;-1:-1:-1;5768:2:18;5753:18;;5740:32;;-1:-1:-1;5819:2:18;5804:18;;5791:32;;-1:-1:-1;5874:3:18;5859:19;;5846:33;5902:18;5891:30;;5888:50;;;5934:1;5931;5924:12;5888:50;5957:49;5998:7;5989:6;5978:9;5974:22;5957:49;:::i;:::-;5947:59;;;5351:661;;;;;;;;:::o;7334:127::-;7395:10;7390:3;7386:20;7383:1;7376:31;7426:4;7423:1;7416:15;7450:4;7447:1;7440:15;7466:168;7539:9;;;7570;;7587:15;;;7581:22;;7567:37;7557:71;;7608:18;;:::i;7892:341::-;8094:2;8076:21;;;8133:2;8113:18;;;8106:30;-1:-1:-1;;;8167:2:18;8152:18;;8145:47;8224:2;8209:18;;7892:341::o;8589:491::-;8830:19;;;8887:2;8883:15;;;;-1:-1:-1;;;;;;8879:53:18;8874:2;8865:12;;8858:75;8958:2;8949:12;;8942:28;;;;8995:2;8986:12;;8979:28;9032:3;9023:13;;9016:29;9070:3;9061:13;;8589:491::o;9085:341::-;9287:2;9269:21;;;9326:2;9306:18;;;9299:30;-1:-1:-1;;;9360:2:18;9345:18;;9338:47;9417:2;9402:18;;9085:341::o;10421:125::-;10486:9;;;10507:10;;;10504:36;;;10520:18;;:::i;11602:128::-;11669:9;;;11690:11;;;11687:37;;;11704:18;;:::i;12432:355::-;12634:2;12616:21;;;12673:2;12653:18;;;12646:30;12712:33;12707:2;12692:18;;12685:61;12778:2;12763:18;;12432:355::o;14507:217::-;14547:1;14573;14563:132;;14617:10;14612:3;14608:20;14605:1;14598:31;14652:4;14649:1;14642:15;14680:4;14677:1;14670:15;14563:132;-1:-1:-1;14709:9:18;;14507:217::o;19651:127::-;19712:10;19707:3;19703:20;19700:1;19693:31;19743:4;19740:1;19733:15;19767:4;19764:1;19757:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","approveClaim(bytes32)":"3719f096","calculateRefund(bytes32)":"8c51f60f","cancelPolicy(bytes32,uint256,bytes)":"2fe1814c","claimExpiryPeriod()":"30d95b53","emergencyWithdraw(uint256)":"5312ea8e","fileClaim(bytes32,uint256,bytes)":"5052cb49","getClaim(bytes32)":"c9100bcb","getPolicy(bytes32)":"a3f685f9","getRemainingCoverage(bytes32)":"cb804860","getRoleAdmin(bytes32)":"248a9ca3","grantAdminRole(address)":"c634b78e","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","markExpiredPolicy(bytes32)":"b0529da2","purchaseHealthPolicy(address,uint256,uint256,uint256,bytes)":"aa04cd14","purchasePolicy(address,uint256,uint256,uint256,bytes)":"b87fb65c","renewPolicy(bytes32,uint256,uint256,bytes)":"4e494b7c","renounceRole(bytes32,address)":"36568abe","revokeAdminRole(address)":"9a19c7b0","revokeRole(bytes32,address)":"d547741f","setClaimExpiryPeriod(uint256)":"19c0d1fa","setTrustedSigner(address)":"56a1c701","setVault(address)":"6817031b","supportsInterface(bytes4)":"01ffc9a7","trustedSigner()":"f74d5480","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedSigner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"ClaimExpiryPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimFiled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PolicyExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"PolicyPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiry\",\"type\":\"uint256\"}],\"name\":\"PolicyRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"name\":\"PremiumCalculated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"TrustedSignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"VaultUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"approveClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"calculateRefund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"cancelPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimExpiryPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fileClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.ClaimRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getPolicy\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.Policy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getRemainingCoverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"markExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"purchaseHealthPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"purchasePolicy\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"renewPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"periodInDays\",\"type\":\"uint256\"}],\"name\":\"setClaimExpiryPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract InsuranceVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extends PolicyBase for core functionality with signature verification and vault integration\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor passes parameters to PolicyBase\"},\"emergencyWithdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}},\"fileClaim(bytes32,uint256,bytes)\":{\"params\":{\"amount\":\"Claim amount\",\"policyId\":\"The ID of the policy\",\"signature\":\"Signature from the backend verifying the claim\"}},\"getClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"markExpiredPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"params\":{\"duration\":\"Policy duration in seconds\",\"owner\":\"Address of the policy owner\",\"premium\":\"Premium amount calculated by backend\",\"signature\":\"Signature from the backend verifying the parameters\",\"sumAssured\":\"Sum assured amount\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimExpiryPeriod(uint256)\":{\"params\":{\"periodInDays\":\"Number of days a claim remains valid\"}},\"setTrustedSigner(address)\":{\"params\":{\"newSigner\":\"Address of the backend that will sign premium and claim amounts\"}},\"setVault(address)\":{\"params\":{\"newVault\":\"Address of the new vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"HealthCareLite\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveClaim(bytes32)\":{\"notice\":\"Admin approves claim and transfers funds from vault\"},\"calculateRefund(bytes32)\":{\"notice\":\"Calculate refund based on unused duration\"},\"cancelPolicy(bytes32,uint256,bytes)\":{\"notice\":\"Cancel policy with refund\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Emergency withdraw function (only for admin)\"},\"fileClaim(bytes32,uint256,bytes)\":{\"notice\":\"File a claim for the insurance with signature verification\"},\"getClaim(bytes32)\":{\"notice\":\"Get claim details\"},\"getPolicy(bytes32)\":{\"notice\":\"Get policy details\"},\"getRemainingCoverage(bytes32)\":{\"notice\":\"Get remaining coverage for a policy\"},\"grantAdminRole(address)\":{\"notice\":\"Grant admin role (only default admin can do this)\"},\"markExpiredPolicy(bytes32)\":{\"notice\":\"Mark a policy as expired\"},\"purchaseHealthPolicy(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Purchase policy with ETH payment and backend signature verification\"},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Purchase a new policy with backend-verified premium\"},\"renewPolicy(bytes32,uint256,uint256,bytes)\":{\"notice\":\"HealthCareLite supports yearly renewals\"},\"revokeAdminRole(address)\":{\"notice\":\"Revoke admin role (only default admin can do this)\"},\"setClaimExpiryPeriod(uint256)\":{\"notice\":\"Set the claim expiry period\"},\"setTrustedSigner(address)\":{\"notice\":\"Set the trusted signer address\"},\"setVault(address)\":{\"notice\":\"Set the vault address\"}},\"notice\":\"Entry-level health insurance contract with annual maximum coverage and basic hospitalization benefits\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/plans/HealthCareLite.sol\":\"HealthCareLite\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/base/PolicyBase.sol\":{\"keccak256\":\"0x555ae3aeceaa8b801b618d4c81768e8fc4faa13ce4531e4a6fd9eb924efd7926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18224c2ebd1c0fb75462a1791303086d1907609e60777f1db2385b4655686b7a\",\"dweb:/ipfs/QmVPqATESLLM2VpC67qC1PEW36jBY9MS57Ym497x4iZJqk\"]},\"contracts/plans/HealthCareLite.sol\":{\"keccak256\":\"0x7851c1d0cf54c6d8c5cd7065fee60382d57e1ecbf1b0427ea8ed15b66d73a2e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f8e81cf8b6f41458d85554d3480bbe30018d97d8d79dc2f4424b45c5b639fdd\",\"dweb:/ipfs/QmXVNipTZqBRPS6WL8cVrpy6d6abyGY6n3xqdu56SGJeNZ\"]},\"contracts/utils/InsuranceVault.sol\":{\"keccak256\":\"0xd6ba55d73f4d10601c8a80c9de92154a2b0be98cc6c93a6146a9aea6e8ffb5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a99626984a220c68a6e19592536581477b445caae18158c0e733f75ccb862c97\",\"dweb:/ipfs/QmXLqCxfrLYvLd6hzUxCtnU2FmeP3ge52KskSJP9gH9oUG\"]}},\"version\":1}"}},"contracts/plans/LifeCareLite.sol":{"LifeCareLite":{"abi":[{"inputs":[{"internalType":"address","name":"_trustedSigner","type":"address"},{"internalType":"address payable","name":"_vaultAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"AdminGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"ClaimExpiryPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimFiled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"PolicyCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"PolicyExpired","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sumAssured","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"PolicyPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"refundAmount","type":"uint256"}],"name":"PolicyRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newExpiry","type":"uint256"}],"name":"PolicyRenewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"}],"name":"PremiumCalculated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundIssued","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"policyId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"RenewalAttemptRejected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldSigner","type":"address"},{"indexed":true,"internalType":"address","name":"newSigner","type":"address"}],"name":"TrustedSignerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldVault","type":"address"},{"indexed":true,"internalType":"address","name":"newVault","type":"address"}],"name":"VaultUpdated","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"approveClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"calculateRefund","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"refundAmount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"cancelPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimExpiryPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fileClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getClaim","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"isPending","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiryTimestamp","type":"uint256"}],"internalType":"struct PolicyBase.ClaimRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"getPolicy","outputs":[{"components":[{"internalType":"bytes32","name":"policyId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isClaimed","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct PolicyBase.Policy","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"grantAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"policyId","type":"bytes32"}],"name":"markExpiredPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"sumAssured","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"purchasePolicy","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"renewPolicy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"revokeAdminRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"periodInDays","type":"uint256"}],"name":"setClaimExpiryPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newSigner","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"newVault","type":"address"}],"name":"setVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract InsuranceVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_6221":{"entryPoint":null,"id":6221,"parameterSlots":2,"returnSlots":0},"@_8741":{"entryPoint":null,"id":8741,"parameterSlots":2,"returnSlots":0},"@_grantRole_256":{"entryPoint":356,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_payable_fromMemory":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":531,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1246:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:18"},"nodeType":"YulFunctionCall","src":"125:12:18"},"nodeType":"YulExpressionStatement","src":"125:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:18"},"nodeType":"YulFunctionCall","src":"104:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:18"},"nodeType":"YulFunctionCall","src":"100:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:18"},"nodeType":"YulFunctionCall","src":"89:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:18"},"nodeType":"YulFunctionCall","src":"79:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:18"},"nodeType":"YulFunctionCall","src":"72:50:18"},"nodeType":"YulIf","src":"69:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:18","type":""}],"src":"14:131:18"},{"body":{"nodeType":"YulBlock","src":"256:287:18","statements":[{"body":{"nodeType":"YulBlock","src":"302:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"311:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"314:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"304:6:18"},"nodeType":"YulFunctionCall","src":"304:12:18"},"nodeType":"YulExpressionStatement","src":"304:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"277:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"286:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"273:3:18"},"nodeType":"YulFunctionCall","src":"273:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"298:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"269:3:18"},"nodeType":"YulFunctionCall","src":"269:32:18"},"nodeType":"YulIf","src":"266:52:18"},{"nodeType":"YulVariableDeclaration","src":"327:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"346:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"340:5:18"},"nodeType":"YulFunctionCall","src":"340:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"331:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"390:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"365:24:18"},"nodeType":"YulFunctionCall","src":"365:31:18"},"nodeType":"YulExpressionStatement","src":"365:31:18"},{"nodeType":"YulAssignment","src":"405:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"415:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"405:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"429:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"454:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:18"},"nodeType":"YulFunctionCall","src":"450:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"444:5:18"},"nodeType":"YulFunctionCall","src":"444:25:18"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"433:7:18","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"503:7:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"478:24:18"},"nodeType":"YulFunctionCall","src":"478:33:18"},"nodeType":"YulExpressionStatement","src":"478:33:18"},{"nodeType":"YulAssignment","src":"520:17:18","value":{"name":"value_1","nodeType":"YulIdentifier","src":"530:7:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"520:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"214:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"225:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"237:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"245:6:18","type":""}],"src":"150:393:18"},{"body":{"nodeType":"YulBlock","src":"722:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"739:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"750:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"732:6:18"},"nodeType":"YulFunctionCall","src":"732:21:18"},"nodeType":"YulExpressionStatement","src":"732:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"773:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"784:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"769:3:18"},"nodeType":"YulFunctionCall","src":"769:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"789:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:18"},"nodeType":"YulFunctionCall","src":"762:30:18"},"nodeType":"YulExpressionStatement","src":"762:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"812:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"823:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:18"},"nodeType":"YulFunctionCall","src":"808:18:18"},{"hexValue":"496e76616c6964207369676e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"828:24:18","type":"","value":"Invalid signer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"801:6:18"},"nodeType":"YulFunctionCall","src":"801:52:18"},"nodeType":"YulExpressionStatement","src":"801:52:18"},{"nodeType":"YulAssignment","src":"862:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"874:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"885:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:18"},"nodeType":"YulFunctionCall","src":"870:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"862:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"699:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"713:4:18","type":""}],"src":"548:346:18"},{"body":{"nodeType":"YulBlock","src":"1073:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1090:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1101:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1083:6:18"},"nodeType":"YulFunctionCall","src":"1083:21:18"},"nodeType":"YulExpressionStatement","src":"1083:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1124:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1135:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:18"},"nodeType":"YulFunctionCall","src":"1120:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"1140:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1113:6:18"},"nodeType":"YulFunctionCall","src":"1113:30:18"},"nodeType":"YulExpressionStatement","src":"1113:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1163:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:18"},"nodeType":"YulFunctionCall","src":"1159:18:18"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nodeType":"YulLiteral","src":"1179:23:18","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:18"},"nodeType":"YulFunctionCall","src":"1152:51:18"},"nodeType":"YulExpressionStatement","src":"1152:51:18"},{"nodeType":"YulAssignment","src":"1212:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1224:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1235:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:18"},"nodeType":"YulFunctionCall","src":"1220:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1212:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1050:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1064:4:18","type":""}],"src":"899:345:18"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid signer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x93A80 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2653 CODESIZE SUB DUP1 PUSH3 0x2653 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3B SWAP2 PUSH3 0x22C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E6572206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207661756C7420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x90 JUMP JUMPDEST PUSH3 0xFE PUSH1 0x0 CALLER PUSH3 0x164 JUMP JUMPDEST POP PUSH3 0x12B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x164 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 SSTORE PUSH3 0x26B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x209 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1C0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x20D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x24D DUP2 PUSH3 0x213 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x260 DUP2 PUSH3 0x213 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D8 DUP1 PUSH3 0x27B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB0529DA2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9100BCB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0529DA2 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xB87FB65C EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x8C51F60F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xA3F685F9 EQ PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5052CB49 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5052CB49 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x3719F096 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x4E494B7C EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x19C0D1FA EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x2FE1814C EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x30D95B53 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x234 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820666F7277617264696E6720746F207661756C74206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x232 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0xDFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x12ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1412 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x565 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 SWAP1 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x159D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB PUSH2 0x63C CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x71A CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x16FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x73F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x73F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7A8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F64206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x819 DUP4 PUSH3 0x15180 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB792057619E1A3B0E2768725EF4CB4FC3CBF647C992D306E6876522E3FC0CDBC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x878 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 PUSH2 0x172E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8A0 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP1 DUP3 ADD MSTORE PUSH1 0x54 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x74 DUP3 ADD DUP2 SWAP1 MSTORE CHAINID PUSH1 0x94 DUP4 ADD MSTORE SWAP1 PUSH1 0xB4 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x9BB DUP2 DUP7 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F9CAB47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7E72AD1C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xEFFDA959FAD3422EF4E602F1642198E56536DBBF192DA630DCBC451B5B5C203D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 DUP3 DUP3 PUSH2 0x1877 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB34 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481C995C5D595CDD08195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x957A909A771D0C1C8B37C8F5C6C9DF37D8D7C521D3D99445839EDE9153D06358 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP4 ADD MSTORE SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 PUSH32 0x86C1ECC07C250E70EBD20978BE8A2C3C89364DF0BDF82AF94B5A3D09AAF3AA74 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696665436172654C69746520646F6573206E6F7420737570706F7274207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E6577616C73 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20657863656564732073756D206173737572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xFE3 DUP2 DUP6 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP4 ADD SWAP2 PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP5 ADD SLOAD SWAP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1101 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC1075329 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC1075329 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119F DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964207369676E65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x4A297CF5D32586F80D2B0708A39D2DA1F46E6AE7722171E1C51DFD685B5B8AA8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124C DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x483BDEDAAF23706A9800AC1AF0D852B34927780D79F9D6BA60A80C7CAD75EA39 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO DUP1 ISZERO PUSH1 0xA0 DUP6 ADD MSTORE SWAP4 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE DUP1 PUSH2 0x1378 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x1386 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1398 SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x13C5 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x13E0 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141D DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x14B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA103932BB37B5B29039B2B633 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0xB15 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE481B9BDD08195E1C1A5C9959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x96601800 DUP4 GT ISZERO PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D206475726174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1602 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xB1EFB5A54D173A08F1D7AE00E21150DA481AC80D259826760104A5BA97BE6FA8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1640 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165D DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x16C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x172E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1C4E23DE8D72C94B22992BD4D7B6786B215BA876AF214FF63E6A0CA38FC97AF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1717 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x172B DUP2 CALLER PUSH2 0x1DC8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173A DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1770 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7A8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP5 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 PUSH2 0x185D DUP3 DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1883 DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1906 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x1959 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x19A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D75737420626520706F7369746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x19F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D2061737375726564206D75737420626520706F73697469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x1A98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207072656D69756D20616D6F756E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x74 DUP2 ADD DUP5 SWAP1 MSTORE CHAINID PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xB4 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1AF2 DUP2 DUP5 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1B79 DUP9 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1BD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 TIMESTAMP PUSH2 0x1C10 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D0C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D207472616E7366657220746F207661756C74206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP11 DUP11 PUSH2 0x1D9A DUP12 TIMESTAMP PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DD2 DUP3 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x229 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1E15 DUP7 DUP7 PUSH2 0x1E2F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1E25 DUP3 DUP3 PUSH2 0x1E7C JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x1E69 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1E5B DUP9 DUP3 DUP6 DUP6 PUSH2 0x1F35 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1E75 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E90 JUMPI PUSH2 0x1E90 PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1E99 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAD PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1ECB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDF PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1F00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F14 JUMPI PUSH2 0x1F14 PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1F70 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FF0 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1FFA JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x172B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2088 DUP2 PUSH2 0x204E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20D5 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x20FD JUMPI PUSH2 0x20FD PUSH2 0x2093 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217C DUP7 DUP3 DUP8 ADD PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x219C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D4 DUP8 DUP3 DUP9 ADD PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x202E DUP2 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2220 DUP2 PUSH2 0x204E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225D DUP9 DUP3 DUP10 ADD PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x226A JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2367 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220037CD1C230787085518F4A3E 0xAC SWAP14 PUSH17 0x93248EC9B339376916FE56A75C986B6A59 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:5979:16:-:0;;;982:6:13;947:41;;884:214:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;971:14;987:13;-1:-1:-1;;;;;2612:28:13;;2604:63;;;;-1:-1:-1;;;2604:63:13;;750:2:18;2604:63:13;;;732:21:18;789:2;769:18;;;762:30;828:24;808:18;;;801:52;870:18;;2604:63:13;;;;;;;;;-1:-1:-1;;;;;2685:27:13;;2677:61;;;;-1:-1:-1;;;2677:61:13;;1101:2:18;2677:61:13;;;1083:21:18;1140:2;1120:18;;;1113:30;1179:23;1159:18;;;1152:51;1220:18;;2677:61:13;899:345:18;2677:61:13;2834:42;2232:4:0;2865:10:13;2834;:42::i;:::-;-1:-1:-1;2886:34:13;711:23;2909:10;2886;:34::i;:::-;-1:-1:-1;2977:13:13;:30;;-1:-1:-1;;;;;2977:30:13;;;-1:-1:-1;;;;;;2977:30:13;;;;;;;3055:5;:37;;;;;;;;;;;-1:-1:-1;;2977:30:13;3150:22;;344:5979:16;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:131:18:-;-1:-1:-1;;;;;89:31:18;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:393::-;237:6;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;346:9;340:16;365:31;390:5;365:31;:::i;:::-;465:2;450:18;;444:25;415:5;;-1:-1:-1;478:33:18;444:25;478:33;:::i;:::-;530:7;520:17;;;150:393;;;;;:::o;899:345::-;344:5979:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_6035":{"entryPoint":null,"id":6035,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@_7171":{"entryPoint":null,"id":7171,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":7624,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":5921,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":5934,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@_processPolicyData_8749":{"entryPoint":null,"id":8749,"parameterSlots":1,"returnSlots":0},"@_revokeRole_294":{"entryPoint":6263,"id":294,"parameterSlots":2,"returnSlots":1},"@_throwError_2357":{"entryPoint":7804,"id":2357,"parameterSlots":2,"returnSlots":0},"@approveClaim_8887":{"entryPoint":2842,"id":8887,"parameterSlots":1,"returnSlots":1},"@calculateRefund_8945":{"entryPoint":4845,"id":8945,"parameterSlots":1,"returnSlots":1},"@cancelPolicy_9072":{"entryPoint":2184,"id":9072,"parameterSlots":3,"returnSlots":0},"@claimExpiryPeriod_6043":{"entryPoint":null,"id":6043,"parameterSlots":0,"returnSlots":0},"@emergencyWithdraw_7149":{"entryPoint":4342,"id":7149,"parameterSlots":1,"returnSlots":0},"@fileClaim_6750":{"entryPoint":3581,"id":6750,"parameterSlots":3,"returnSlots":0},"@generatePolicyId_6440":{"entryPoint":null,"id":6440,"parameterSlots":2,"returnSlots":1},"@getClaim_6966":{"entryPoint":null,"id":6966,"parameterSlots":1,"returnSlots":1},"@getPolicy_6952":{"entryPoint":null,"id":6952,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@grantAdminRole_6373":{"entryPoint":5714,"id":6373,"parameterSlots":1,"returnSlots":0},"@grantRole_147":{"entryPoint":2141,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":5097,"id":80,"parameterSlots":2,"returnSlots":1},"@markExpiredPolicy_7007":{"entryPoint":5328,"id":7007,"parameterSlots":1,"returnSlots":0},"@purchasePolicy_6637":{"entryPoint":6370,"id":6637,"parameterSlots":5,"returnSlots":1},"@purchasePolicy_8793":{"entryPoint":5533,"id":8793,"parameterSlots":5,"returnSlots":1},"@recover_2114":{"entryPoint":7685,"id":2114,"parameterSlots":2,"returnSlots":1},"@renewPolicy_8977":{"entryPoint":3396,"id":8977,"parameterSlots":4,"returnSlots":0},"@renounceRole_189":{"entryPoint":2786,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeAdminRole_6406":{"entryPoint":5138,"id":6406,"parameterSlots":1,"returnSlots":0},"@revokeRole_166":{"entryPoint":5884,"id":166,"parameterSlots":2,"returnSlots":0},"@setClaimExpiryPeriod_6344":{"entryPoint":1966,"id":6344,"parameterSlots":1,"returnSlots":0},"@setTrustedSigner_6274":{"entryPoint":4500,"id":6274,"parameterSlots":1,"returnSlots":0},"@setVault_6312":{"entryPoint":4673,"id":6312,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2467":{"entryPoint":null,"id":2467,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1911,"id":62,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_2373":{"entryPoint":null,"id":2373,"parameterSlots":1,"returnSlots":1},"@trustedSigner_6037":{"entryPoint":null,"id":6037,"parameterSlots":0,"returnSlots":0},"@tryRecover_2084":{"entryPoint":7727,"id":2084,"parameterSlots":2,"returnSlots":3},"@tryRecover_2272":{"entryPoint":7989,"id":2272,"parameterSlots":4,"returnSlots":3},"@vault_6040":{"entryPoint":null,"id":6040,"parameterSlots":0,"returnSlots":0},"@verifySignature_6479":{"entryPoint":6080,"id":6479,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":8361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8672,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":8701,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8291,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr":{"entryPoint":8502,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":8582,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes4":{"entryPoint":8196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8855,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_78ae99b82253fbc913b86f4e962ed0778c6c00327d9a53a67997f06083b051bf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b490cf61f7fe5378a94bf56dea6cc28a840b8ac643af2528c5ed87be45ffc410__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8996,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":9034,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8832,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9015,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8810,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9068,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8339,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":8270,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19897:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"205:14:18","statements":[{"nodeType":"YulAssignment","src":"207:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"214:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"207:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"189:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"197:3:18","type":""}],"src":"14:205:18"},{"body":{"nodeType":"YulBlock","src":"398:180:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"426:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"408:6:18"},"nodeType":"YulFunctionCall","src":"408:21:18"},"nodeType":"YulExpressionStatement","src":"408:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"449:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"445:3:18"},"nodeType":"YulFunctionCall","src":"445:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"465:2:18","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"438:6:18"},"nodeType":"YulFunctionCall","src":"438:30:18"},"nodeType":"YulExpressionStatement","src":"438:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"488:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"499:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"484:3:18"},"nodeType":"YulFunctionCall","src":"484:18:18"},{"hexValue":"45544820666f7277617264696e6720746f207661756c74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"504:32:18","type":"","value":"ETH forwarding to vault failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"477:6:18"},"nodeType":"YulFunctionCall","src":"477:60:18"},"nodeType":"YulExpressionStatement","src":"477:60:18"},{"nodeType":"YulAssignment","src":"546:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"558:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"569:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"554:3:18"},"nodeType":"YulFunctionCall","src":"554:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"546:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"375:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"389:4:18","type":""}],"src":"224:354:18"},{"body":{"nodeType":"YulBlock","src":"652:217:18","statements":[{"body":{"nodeType":"YulBlock","src":"698:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"707:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"710:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"700:6:18"},"nodeType":"YulFunctionCall","src":"700:12:18"},"nodeType":"YulExpressionStatement","src":"700:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"673:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"682:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"669:3:18"},"nodeType":"YulFunctionCall","src":"669:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"694:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"665:3:18"},"nodeType":"YulFunctionCall","src":"665:32:18"},"nodeType":"YulIf","src":"662:52:18"},{"nodeType":"YulVariableDeclaration","src":"723:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"749:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"736:12:18"},"nodeType":"YulFunctionCall","src":"736:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"727:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"823:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:18"},"nodeType":"YulFunctionCall","src":"825:12:18"},"nodeType":"YulExpressionStatement","src":"825:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"781:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"792:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"808:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"799:3:18"},"nodeType":"YulFunctionCall","src":"799:20:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"788:3:18"},"nodeType":"YulFunctionCall","src":"788:32:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"778:2:18"},"nodeType":"YulFunctionCall","src":"778:43:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"771:6:18"},"nodeType":"YulFunctionCall","src":"771:51:18"},"nodeType":"YulIf","src":"768:71:18"},{"nodeType":"YulAssignment","src":"848:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"858:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"848:6:18"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"618:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"629:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"641:6:18","type":""}],"src":"583:286:18"},{"body":{"nodeType":"YulBlock","src":"969:92:18","statements":[{"nodeType":"YulAssignment","src":"979:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1002:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"987:3:18"},"nodeType":"YulFunctionCall","src":"987:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"979:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1046:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1039:6:18"},"nodeType":"YulFunctionCall","src":"1039:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1032:6:18"},"nodeType":"YulFunctionCall","src":"1032:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1014:6:18"},"nodeType":"YulFunctionCall","src":"1014:41:18"},"nodeType":"YulExpressionStatement","src":"1014:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"938:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"949:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"960:4:18","type":""}],"src":"874:187:18"},{"body":{"nodeType":"YulBlock","src":"1136:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1182:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1191:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1184:6:18"},"nodeType":"YulFunctionCall","src":"1184:12:18"},"nodeType":"YulExpressionStatement","src":"1184:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1157:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1153:3:18"},"nodeType":"YulFunctionCall","src":"1153:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1178:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1149:3:18"},"nodeType":"YulFunctionCall","src":"1149:32:18"},"nodeType":"YulIf","src":"1146:52:18"},{"nodeType":"YulAssignment","src":"1207:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1217:12:18"},"nodeType":"YulFunctionCall","src":"1217:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1207:6:18"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1102:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1113:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1125:6:18","type":""}],"src":"1066:180:18"},{"body":{"nodeType":"YulBlock","src":"1321:110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1367:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1376:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1379:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1369:6:18"},"nodeType":"YulFunctionCall","src":"1369:12:18"},"nodeType":"YulExpressionStatement","src":"1369:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1342:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1351:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1338:3:18"},"nodeType":"YulFunctionCall","src":"1338:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1363:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1334:3:18"},"nodeType":"YulFunctionCall","src":"1334:32:18"},"nodeType":"YulIf","src":"1331:52:18"},{"nodeType":"YulAssignment","src":"1392:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1415:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1402:12:18"},"nodeType":"YulFunctionCall","src":"1402:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1392:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1287:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1298:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1310:6:18","type":""}],"src":"1251:180:18"},{"body":{"nodeType":"YulBlock","src":"1537:76:18","statements":[{"nodeType":"YulAssignment","src":"1547:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1559:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1570:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1555:3:18"},"nodeType":"YulFunctionCall","src":"1555:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1547:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1589:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1600:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1582:6:18"},"nodeType":"YulFunctionCall","src":"1582:25:18"},"nodeType":"YulExpressionStatement","src":"1582:25:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1506:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1517:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1528:4:18","type":""}],"src":"1436:177:18"},{"body":{"nodeType":"YulBlock","src":"1663:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"1727:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1736:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1739:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1729:6:18"},"nodeType":"YulFunctionCall","src":"1729:12:18"},"nodeType":"YulExpressionStatement","src":"1729:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1686:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1697:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1712:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1708:3:18"},"nodeType":"YulFunctionCall","src":"1708:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1721:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1704:3:18"},"nodeType":"YulFunctionCall","src":"1704:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1693:3:18"},"nodeType":"YulFunctionCall","src":"1693:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1683:2:18"},"nodeType":"YulFunctionCall","src":"1683:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1676:6:18"},"nodeType":"YulFunctionCall","src":"1676:50:18"},"nodeType":"YulIf","src":"1673:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1652:5:18","type":""}],"src":"1618:131:18"},{"body":{"nodeType":"YulBlock","src":"1841:228:18","statements":[{"body":{"nodeType":"YulBlock","src":"1887:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1896:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1889:6:18"},"nodeType":"YulFunctionCall","src":"1889:12:18"},"nodeType":"YulExpressionStatement","src":"1889:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1862:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1871:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1883:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1854:3:18"},"nodeType":"YulFunctionCall","src":"1854:32:18"},"nodeType":"YulIf","src":"1851:52:18"},{"nodeType":"YulAssignment","src":"1912:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1935:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1922:12:18"},"nodeType":"YulFunctionCall","src":"1922:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1912:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1954:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1984:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1995:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1980:3:18"},"nodeType":"YulFunctionCall","src":"1980:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1967:12:18"},"nodeType":"YulFunctionCall","src":"1967:32:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1958:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2033:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2008:24:18"},"nodeType":"YulFunctionCall","src":"2008:31:18"},"nodeType":"YulExpressionStatement","src":"2008:31:18"},{"nodeType":"YulAssignment","src":"2048:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2058:5:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2048:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1799:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1810:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1822:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1830:6:18","type":""}],"src":"1754:315:18"},{"body":{"nodeType":"YulBlock","src":"2106:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2123:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2130:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2135:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2126:3:18"},"nodeType":"YulFunctionCall","src":"2126:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2116:6:18"},"nodeType":"YulFunctionCall","src":"2116:31:18"},"nodeType":"YulExpressionStatement","src":"2116:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2163:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2166:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2156:6:18"},"nodeType":"YulFunctionCall","src":"2156:15:18"},"nodeType":"YulExpressionStatement","src":"2156:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2187:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2190:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2180:6:18"},"nodeType":"YulFunctionCall","src":"2180:15:18"},"nodeType":"YulExpressionStatement","src":"2180:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2074:127:18"},{"body":{"nodeType":"YulBlock","src":"2258:666:18","statements":[{"body":{"nodeType":"YulBlock","src":"2307:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2316:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2319:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2309:6:18"},"nodeType":"YulFunctionCall","src":"2309:12:18"},"nodeType":"YulExpressionStatement","src":"2309:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2286:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2294:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:18"},"nodeType":"YulFunctionCall","src":"2282:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2301:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2278:3:18"},"nodeType":"YulFunctionCall","src":"2278:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2271:6:18"},"nodeType":"YulFunctionCall","src":"2271:35:18"},"nodeType":"YulIf","src":"2268:55:18"},{"nodeType":"YulVariableDeclaration","src":"2332:30:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2355:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2342:12:18"},"nodeType":"YulFunctionCall","src":"2342:20:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2336:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2371:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2381:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2375:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2422:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2424:16:18"},"nodeType":"YulFunctionCall","src":"2424:18:18"},"nodeType":"YulExpressionStatement","src":"2424:18:18"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2414:2:18"},{"name":"_2","nodeType":"YulIdentifier","src":"2418:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2411:2:18"},"nodeType":"YulFunctionCall","src":"2411:10:18"},"nodeType":"YulIf","src":"2408:36:18"},{"nodeType":"YulVariableDeclaration","src":"2453:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2467:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2463:3:18"},"nodeType":"YulFunctionCall","src":"2463:7:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2457:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2499:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2493:5:18"},"nodeType":"YulFunctionCall","src":"2493:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2483:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2511:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2533:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2557:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"2561:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2553:3:18"},"nodeType":"YulFunctionCall","src":"2553:13:18"},{"name":"_3","nodeType":"YulIdentifier","src":"2568:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2549:3:18"},"nodeType":"YulFunctionCall","src":"2549:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"2573:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2545:3:18"},"nodeType":"YulFunctionCall","src":"2545:31:18"},{"name":"_3","nodeType":"YulIdentifier","src":"2578:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:18"},"nodeType":"YulFunctionCall","src":"2541:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2529:3:18"},"nodeType":"YulFunctionCall","src":"2529:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2515:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2641:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2643:16:18"},"nodeType":"YulFunctionCall","src":"2643:18:18"},"nodeType":"YulExpressionStatement","src":"2643:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2600:10:18"},{"name":"_2","nodeType":"YulIdentifier","src":"2612:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2597:2:18"},"nodeType":"YulFunctionCall","src":"2597:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2620:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2632:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2617:2:18"},"nodeType":"YulFunctionCall","src":"2617:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2594:2:18"},"nodeType":"YulFunctionCall","src":"2594:46:18"},"nodeType":"YulIf","src":"2591:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2679:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2683:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2672:6:18"},"nodeType":"YulFunctionCall","src":"2672:22:18"},"nodeType":"YulExpressionStatement","src":"2672:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2710:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2718:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2703:6:18"},"nodeType":"YulFunctionCall","src":"2703:18:18"},"nodeType":"YulExpressionStatement","src":"2703:18:18"},{"body":{"nodeType":"YulBlock","src":"2769:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2778:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2781:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2771:6:18"},"nodeType":"YulFunctionCall","src":"2771:12:18"},"nodeType":"YulExpressionStatement","src":"2771:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2752:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2740:3:18"},"nodeType":"YulFunctionCall","src":"2740:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"2757:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2736:3:18"},"nodeType":"YulFunctionCall","src":"2736:26:18"},{"name":"end","nodeType":"YulIdentifier","src":"2764:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2733:2:18"},"nodeType":"YulFunctionCall","src":"2733:35:18"},"nodeType":"YulIf","src":"2730:55:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2811:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2819:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2807:3:18"},"nodeType":"YulFunctionCall","src":"2807:17:18"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2838:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:18"},"nodeType":"YulFunctionCall","src":"2826:17:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2845:2:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2794:12:18"},"nodeType":"YulFunctionCall","src":"2794:54:18"},"nodeType":"YulExpressionStatement","src":"2794:54:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2872:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2880:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2868:3:18"},"nodeType":"YulFunctionCall","src":"2868:15:18"},{"kind":"number","nodeType":"YulLiteral","src":"2885:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2864:3:18"},"nodeType":"YulFunctionCall","src":"2864:26:18"},{"kind":"number","nodeType":"YulLiteral","src":"2892:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2857:6:18"},"nodeType":"YulFunctionCall","src":"2857:37:18"},"nodeType":"YulExpressionStatement","src":"2857:37:18"},{"nodeType":"YulAssignment","src":"2903:15:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2903:5:18"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2232:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2240:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2248:5:18","type":""}],"src":"2206:718:18"},{"body":{"nodeType":"YulBlock","src":"3042:343:18","statements":[{"body":{"nodeType":"YulBlock","src":"3088:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3100:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3090:6:18"},"nodeType":"YulFunctionCall","src":"3090:12:18"},"nodeType":"YulExpressionStatement","src":"3090:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3063:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3072:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3059:3:18"},"nodeType":"YulFunctionCall","src":"3059:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3084:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3055:3:18"},"nodeType":"YulFunctionCall","src":"3055:32:18"},"nodeType":"YulIf","src":"3052:52:18"},{"nodeType":"YulAssignment","src":"3113:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3136:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3123:12:18"},"nodeType":"YulFunctionCall","src":"3123:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3113:6:18"}]},{"nodeType":"YulAssignment","src":"3155:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3182:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3193:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3178:3:18"},"nodeType":"YulFunctionCall","src":"3178:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3165:12:18"},"nodeType":"YulFunctionCall","src":"3165:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3155:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3206:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3237:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3248:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:18"},"nodeType":"YulFunctionCall","src":"3233:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3220:12:18"},"nodeType":"YulFunctionCall","src":"3220:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3210:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3295:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3304:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3307:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3297:6:18"},"nodeType":"YulFunctionCall","src":"3297:12:18"},"nodeType":"YulExpressionStatement","src":"3297:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3267:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3275:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3264:2:18"},"nodeType":"YulFunctionCall","src":"3264:30:18"},"nodeType":"YulIf","src":"3261:50:18"},{"nodeType":"YulAssignment","src":"3320:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3351:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3362:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3347:3:18"},"nodeType":"YulFunctionCall","src":"3347:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3371:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3330:16:18"},"nodeType":"YulFunctionCall","src":"3330:49:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3320:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2992:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3003:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3015:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3023:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3031:6:18","type":""}],"src":"2929:456:18"},{"body":{"nodeType":"YulBlock","src":"3491:76:18","statements":[{"nodeType":"YulAssignment","src":"3501:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3513:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3509:3:18"},"nodeType":"YulFunctionCall","src":"3509:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3543:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3554:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3536:6:18"},"nodeType":"YulFunctionCall","src":"3536:25:18"},"nodeType":"YulExpressionStatement","src":"3536:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3460:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3471:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3482:4:18","type":""}],"src":"3390:177:18"},{"body":{"nodeType":"YulBlock","src":"3702:395:18","statements":[{"body":{"nodeType":"YulBlock","src":"3749:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3758:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3761:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3751:6:18"},"nodeType":"YulFunctionCall","src":"3751:12:18"},"nodeType":"YulExpressionStatement","src":"3751:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3723:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3732:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3719:3:18"},"nodeType":"YulFunctionCall","src":"3719:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3744:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3715:3:18"},"nodeType":"YulFunctionCall","src":"3715:33:18"},"nodeType":"YulIf","src":"3712:53:18"},{"nodeType":"YulAssignment","src":"3774:33:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3784:12:18"},"nodeType":"YulFunctionCall","src":"3784:23:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3774:6:18"}]},{"nodeType":"YulAssignment","src":"3816:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3854:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:18"},"nodeType":"YulFunctionCall","src":"3839:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3826:12:18"},"nodeType":"YulFunctionCall","src":"3826:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3816:6:18"}]},{"nodeType":"YulAssignment","src":"3867:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3894:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3905:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3890:3:18"},"nodeType":"YulFunctionCall","src":"3890:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3877:12:18"},"nodeType":"YulFunctionCall","src":"3877:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3867:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3918:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3949:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3960:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3945:3:18"},"nodeType":"YulFunctionCall","src":"3945:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3932:12:18"},"nodeType":"YulFunctionCall","src":"3932:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3922:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4007:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4016:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4019:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4009:6:18"},"nodeType":"YulFunctionCall","src":"4009:12:18"},"nodeType":"YulExpressionStatement","src":"4009:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3979:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3987:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3976:2:18"},"nodeType":"YulFunctionCall","src":"3976:30:18"},"nodeType":"YulIf","src":"3973:50:18"},{"nodeType":"YulAssignment","src":"4032:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4063:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4074:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4059:3:18"},"nodeType":"YulFunctionCall","src":"4059:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4083:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4042:16:18"},"nodeType":"YulFunctionCall","src":"4042:49:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4032:6:18"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3644:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3655:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3667:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3675:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3683:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3691:6:18","type":""}],"src":"3572:525:18"},{"body":{"nodeType":"YulBlock","src":"4172:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"4218:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4227:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4230:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4220:6:18"},"nodeType":"YulFunctionCall","src":"4220:12:18"},"nodeType":"YulExpressionStatement","src":"4220:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4193:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4202:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4189:3:18"},"nodeType":"YulFunctionCall","src":"4189:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4185:3:18"},"nodeType":"YulFunctionCall","src":"4185:32:18"},"nodeType":"YulIf","src":"4182:52:18"},{"nodeType":"YulVariableDeclaration","src":"4243:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4269:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4256:12:18"},"nodeType":"YulFunctionCall","src":"4256:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4247:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4313:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4288:24:18"},"nodeType":"YulFunctionCall","src":"4288:31:18"},"nodeType":"YulExpressionStatement","src":"4288:31:18"},{"nodeType":"YulAssignment","src":"4328:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4338:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4328:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4138:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4149:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4161:6:18","type":""}],"src":"4102:247:18"},{"body":{"nodeType":"YulBlock","src":"4432:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"4478:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4487:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4490:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4480:6:18"},"nodeType":"YulFunctionCall","src":"4480:12:18"},"nodeType":"YulExpressionStatement","src":"4480:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4453:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4449:3:18"},"nodeType":"YulFunctionCall","src":"4449:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4474:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4445:3:18"},"nodeType":"YulFunctionCall","src":"4445:32:18"},"nodeType":"YulIf","src":"4442:52:18"},{"nodeType":"YulVariableDeclaration","src":"4503:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4529:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4516:12:18"},"nodeType":"YulFunctionCall","src":"4516:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4507:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4573:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4548:24:18"},"nodeType":"YulFunctionCall","src":"4548:31:18"},"nodeType":"YulExpressionStatement","src":"4548:31:18"},{"nodeType":"YulAssignment","src":"4588:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4598:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4588:6:18"}]}]},"name":"abi_decode_tuple_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4398:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4409:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4421:6:18","type":""}],"src":"4354:255:18"},{"body":{"nodeType":"YulBlock","src":"4763:583:18","statements":[{"nodeType":"YulAssignment","src":"4773:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4785:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4796:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:18"},"nodeType":"YulFunctionCall","src":"4781:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4773:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4816:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4833:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4827:5:18"},"nodeType":"YulFunctionCall","src":"4827:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4809:6:18"},"nodeType":"YulFunctionCall","src":"4809:32:18"},"nodeType":"YulExpressionStatement","src":"4809:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4861:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4872:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4857:3:18"},"nodeType":"YulFunctionCall","src":"4857:20:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4893:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4901:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4889:3:18"},"nodeType":"YulFunctionCall","src":"4889:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4883:5:18"},"nodeType":"YulFunctionCall","src":"4883:24:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4917:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4922:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4913:3:18"},"nodeType":"YulFunctionCall","src":"4913:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4926:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4909:3:18"},"nodeType":"YulFunctionCall","src":"4909:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:18"},"nodeType":"YulFunctionCall","src":"4879:50:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:18"},"nodeType":"YulFunctionCall","src":"4850:80:18"},"nodeType":"YulExpressionStatement","src":"4850:80:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4950:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4961:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4946:3:18"},"nodeType":"YulFunctionCall","src":"4946:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4978:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4986:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4974:3:18"},"nodeType":"YulFunctionCall","src":"4974:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4968:5:18"},"nodeType":"YulFunctionCall","src":"4968:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4939:6:18"},"nodeType":"YulFunctionCall","src":"4939:54:18"},"nodeType":"YulExpressionStatement","src":"4939:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5013:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5024:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5009:3:18"},"nodeType":"YulFunctionCall","src":"5009:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5041:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5049:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5037:3:18"},"nodeType":"YulFunctionCall","src":"5037:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5031:5:18"},"nodeType":"YulFunctionCall","src":"5031:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5002:6:18"},"nodeType":"YulFunctionCall","src":"5002:54:18"},"nodeType":"YulExpressionStatement","src":"5002:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5076:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5087:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5072:3:18"},"nodeType":"YulFunctionCall","src":"5072:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5104:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5112:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:18"},"nodeType":"YulFunctionCall","src":"5100:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5094:5:18"},"nodeType":"YulFunctionCall","src":"5094:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5065:6:18"},"nodeType":"YulFunctionCall","src":"5065:54:18"},"nodeType":"YulExpressionStatement","src":"5065:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5139:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5150:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5135:3:18"},"nodeType":"YulFunctionCall","src":"5135:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5181:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5189:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5177:3:18"},"nodeType":"YulFunctionCall","src":"5177:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5171:5:18"},"nodeType":"YulFunctionCall","src":"5171:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5164:6:18"},"nodeType":"YulFunctionCall","src":"5164:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5157:6:18"},"nodeType":"YulFunctionCall","src":"5157:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5128:6:18"},"nodeType":"YulFunctionCall","src":"5128:70:18"},"nodeType":"YulExpressionStatement","src":"5128:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5218:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5229:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5214:3:18"},"nodeType":"YulFunctionCall","src":"5214:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5260:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5268:4:18","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5256:3:18"},"nodeType":"YulFunctionCall","src":"5256:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5250:5:18"},"nodeType":"YulFunctionCall","src":"5250:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5243:6:18"},"nodeType":"YulFunctionCall","src":"5243:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5236:6:18"},"nodeType":"YulFunctionCall","src":"5236:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5207:6:18"},"nodeType":"YulFunctionCall","src":"5207:70:18"},"nodeType":"YulExpressionStatement","src":"5207:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5297:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5308:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5293:3:18"},"nodeType":"YulFunctionCall","src":"5293:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5325:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5333:4:18","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5321:3:18"},"nodeType":"YulFunctionCall","src":"5321:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5315:5:18"},"nodeType":"YulFunctionCall","src":"5315:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:18"},"nodeType":"YulFunctionCall","src":"5286:54:18"},"nodeType":"YulExpressionStatement","src":"5286:54:18"}]},"name":"abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4732:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4743:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4754:4:18","type":""}],"src":"4614:732:18"},{"body":{"nodeType":"YulBlock","src":"5498:514:18","statements":[{"body":{"nodeType":"YulBlock","src":"5545:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5554:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5557:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5547:6:18"},"nodeType":"YulFunctionCall","src":"5547:12:18"},"nodeType":"YulExpressionStatement","src":"5547:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5519:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5528:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5515:3:18"},"nodeType":"YulFunctionCall","src":"5515:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5540:3:18","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5511:3:18"},"nodeType":"YulFunctionCall","src":"5511:33:18"},"nodeType":"YulIf","src":"5508:53:18"},{"nodeType":"YulVariableDeclaration","src":"5570:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5596:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5583:12:18"},"nodeType":"YulFunctionCall","src":"5583:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5574:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5640:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5615:24:18"},"nodeType":"YulFunctionCall","src":"5615:31:18"},"nodeType":"YulExpressionStatement","src":"5615:31:18"},{"nodeType":"YulAssignment","src":"5655:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5665:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5655:6:18"}]},{"nodeType":"YulAssignment","src":"5679:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5706:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5717:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5702:3:18"},"nodeType":"YulFunctionCall","src":"5702:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5689:12:18"},"nodeType":"YulFunctionCall","src":"5689:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5679:6:18"}]},{"nodeType":"YulAssignment","src":"5730:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5757:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5768:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5753:3:18"},"nodeType":"YulFunctionCall","src":"5753:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5740:12:18"},"nodeType":"YulFunctionCall","src":"5740:32:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5730:6:18"}]},{"nodeType":"YulAssignment","src":"5781:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5808:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5819:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5804:3:18"},"nodeType":"YulFunctionCall","src":"5804:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5791:12:18"},"nodeType":"YulFunctionCall","src":"5791:32:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5781:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5832:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5863:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5874:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5859:3:18"},"nodeType":"YulFunctionCall","src":"5859:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5846:12:18"},"nodeType":"YulFunctionCall","src":"5846:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5836:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5922:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5931:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5934:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5924:6:18"},"nodeType":"YulFunctionCall","src":"5924:12:18"},"nodeType":"YulExpressionStatement","src":"5924:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5894:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5902:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5891:2:18"},"nodeType":"YulFunctionCall","src":"5891:30:18"},"nodeType":"YulIf","src":"5888:50:18"},{"nodeType":"YulAssignment","src":"5947:59:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5978:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5989:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5974:3:18"},"nodeType":"YulFunctionCall","src":"5974:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5998:7:18"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5957:16:18"},"nodeType":"YulFunctionCall","src":"5957:49:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5947:6:18"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5432:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5443:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5455:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5463:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5471:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5479:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5487:6:18","type":""}],"src":"5351:661:18"},{"body":{"nodeType":"YulBlock","src":"6178:352:18","statements":[{"nodeType":"YulAssignment","src":"6188:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6200:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6211:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6196:3:18"},"nodeType":"YulFunctionCall","src":"6196:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6188:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6231:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6248:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6242:5:18"},"nodeType":"YulFunctionCall","src":"6242:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6224:6:18"},"nodeType":"YulFunctionCall","src":"6224:32:18"},"nodeType":"YulExpressionStatement","src":"6224:32:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6276:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6287:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6272:3:18"},"nodeType":"YulFunctionCall","src":"6272:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6304:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6312:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6300:3:18"},"nodeType":"YulFunctionCall","src":"6300:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6294:5:18"},"nodeType":"YulFunctionCall","src":"6294:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6265:6:18"},"nodeType":"YulFunctionCall","src":"6265:54:18"},"nodeType":"YulExpressionStatement","src":"6265:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6339:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6350:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6335:3:18"},"nodeType":"YulFunctionCall","src":"6335:20:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6381:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6389:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6377:3:18"},"nodeType":"YulFunctionCall","src":"6377:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6371:5:18"},"nodeType":"YulFunctionCall","src":"6371:24:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6364:6:18"},"nodeType":"YulFunctionCall","src":"6364:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6357:6:18"},"nodeType":"YulFunctionCall","src":"6357:40:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:18"},"nodeType":"YulFunctionCall","src":"6328:70:18"},"nodeType":"YulExpressionStatement","src":"6328:70:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6418:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6429:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6414:3:18"},"nodeType":"YulFunctionCall","src":"6414:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6446:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6454:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6442:3:18"},"nodeType":"YulFunctionCall","src":"6442:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6436:5:18"},"nodeType":"YulFunctionCall","src":"6436:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6407:6:18"},"nodeType":"YulFunctionCall","src":"6407:54:18"},"nodeType":"YulExpressionStatement","src":"6407:54:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6481:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6492:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6477:3:18"},"nodeType":"YulFunctionCall","src":"6477:20:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6509:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6517:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:18"},"nodeType":"YulFunctionCall","src":"6505:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6499:5:18"},"nodeType":"YulFunctionCall","src":"6499:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6470:6:18"},"nodeType":"YulFunctionCall","src":"6470:54:18"},"nodeType":"YulExpressionStatement","src":"6470:54:18"}]},"name":"abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6147:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6158:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6169:4:18","type":""}],"src":"6017:513:18"},{"body":{"nodeType":"YulBlock","src":"6636:102:18","statements":[{"nodeType":"YulAssignment","src":"6646:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6658:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6669:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6654:3:18"},"nodeType":"YulFunctionCall","src":"6654:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6646:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6688:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6703:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6719:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6724:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6715:3:18"},"nodeType":"YulFunctionCall","src":"6715:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"6728:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6711:3:18"},"nodeType":"YulFunctionCall","src":"6711:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6699:3:18"},"nodeType":"YulFunctionCall","src":"6699:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6681:6:18"},"nodeType":"YulFunctionCall","src":"6681:51:18"},"nodeType":"YulExpressionStatement","src":"6681:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6605:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6616:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6627:4:18","type":""}],"src":"6535:203:18"},{"body":{"nodeType":"YulBlock","src":"6875:102:18","statements":[{"nodeType":"YulAssignment","src":"6885:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6897:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6908:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6893:3:18"},"nodeType":"YulFunctionCall","src":"6893:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6885:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6927:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6942:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6958:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6963:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6954:3:18"},"nodeType":"YulFunctionCall","src":"6954:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"6967:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6950:3:18"},"nodeType":"YulFunctionCall","src":"6950:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6938:3:18"},"nodeType":"YulFunctionCall","src":"6938:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6920:6:18"},"nodeType":"YulFunctionCall","src":"6920:51:18"},"nodeType":"YulExpressionStatement","src":"6920:51:18"}]},"name":"abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6844:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6855:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6866:4:18","type":""}],"src":"6743:234:18"},{"body":{"nodeType":"YulBlock","src":"7156:173:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7173:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7184:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7166:6:18"},"nodeType":"YulFunctionCall","src":"7166:21:18"},"nodeType":"YulExpressionStatement","src":"7166:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7207:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7218:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7203:3:18"},"nodeType":"YulFunctionCall","src":"7203:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"7223:2:18","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7196:6:18"},"nodeType":"YulFunctionCall","src":"7196:30:18"},"nodeType":"YulExpressionStatement","src":"7196:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7246:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7257:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:18"},"nodeType":"YulFunctionCall","src":"7242:18:18"},{"hexValue":"506572696f64206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"7262:25:18","type":"","value":"Period must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7235:6:18"},"nodeType":"YulFunctionCall","src":"7235:53:18"},"nodeType":"YulExpressionStatement","src":"7235:53:18"},{"nodeType":"YulAssignment","src":"7297:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7320:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7305:3:18"},"nodeType":"YulFunctionCall","src":"7305:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7297:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7133:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7147:4:18","type":""}],"src":"6982:347:18"},{"body":{"nodeType":"YulBlock","src":"7366:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7390:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7395:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7386:3:18"},"nodeType":"YulFunctionCall","src":"7386:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:18"},"nodeType":"YulFunctionCall","src":"7376:31:18"},"nodeType":"YulExpressionStatement","src":"7376:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7423:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7426:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7416:6:18"},"nodeType":"YulFunctionCall","src":"7416:15:18"},"nodeType":"YulExpressionStatement","src":"7416:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7447:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7450:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7440:6:18"},"nodeType":"YulFunctionCall","src":"7440:15:18"},"nodeType":"YulExpressionStatement","src":"7440:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7334:127:18"},{"body":{"nodeType":"YulBlock","src":"7518:116:18","statements":[{"nodeType":"YulAssignment","src":"7528:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7543:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"7546:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7539:3:18"},"nodeType":"YulFunctionCall","src":"7539:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7528:7:18"}]},{"body":{"nodeType":"YulBlock","src":"7606:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7608:16:18"},"nodeType":"YulFunctionCall","src":"7608:18:18"},"nodeType":"YulExpressionStatement","src":"7608:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7577:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7570:6:18"},"nodeType":"YulFunctionCall","src":"7570:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7584:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7591:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"7600:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7587:3:18"},"nodeType":"YulFunctionCall","src":"7587:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7581:2:18"},"nodeType":"YulFunctionCall","src":"7581:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7567:2:18"},"nodeType":"YulFunctionCall","src":"7567:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7560:6:18"},"nodeType":"YulFunctionCall","src":"7560:45:18"},"nodeType":"YulIf","src":"7557:71:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7497:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"7500:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7506:7:18","type":""}],"src":"7466:168:18"},{"body":{"nodeType":"YulBlock","src":"7768:119:18","statements":[{"nodeType":"YulAssignment","src":"7778:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7790:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7801:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:18"},"nodeType":"YulFunctionCall","src":"7786:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7778:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7820:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7831:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7813:6:18"},"nodeType":"YulFunctionCall","src":"7813:25:18"},"nodeType":"YulExpressionStatement","src":"7813:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7858:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7869:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7854:3:18"},"nodeType":"YulFunctionCall","src":"7854:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7874:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7847:6:18"},"nodeType":"YulFunctionCall","src":"7847:34:18"},"nodeType":"YulExpressionStatement","src":"7847:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7729:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7740:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7748:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7759:4:18","type":""}],"src":"7639:248:18"},{"body":{"nodeType":"YulBlock","src":"8066:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8083:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8094:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8076:6:18"},"nodeType":"YulFunctionCall","src":"8076:21:18"},"nodeType":"YulExpressionStatement","src":"8076:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8117:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8128:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8113:3:18"},"nodeType":"YulFunctionCall","src":"8113:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"8133:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8106:6:18"},"nodeType":"YulFunctionCall","src":"8106:30:18"},"nodeType":"YulExpressionStatement","src":"8106:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8156:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8167:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:18"},"nodeType":"YulFunctionCall","src":"8152:18:18"},{"hexValue":"506f6c696379206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"8172:19:18","type":"","value":"Policy not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8145:6:18"},"nodeType":"YulFunctionCall","src":"8145:47:18"},"nodeType":"YulExpressionStatement","src":"8145:47:18"},{"nodeType":"YulAssignment","src":"8201:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8213:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8224:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8209:3:18"},"nodeType":"YulFunctionCall","src":"8209:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8201:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8043:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8057:4:18","type":""}],"src":"7892:341:18"},{"body":{"nodeType":"YulBlock","src":"8412:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8429:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8440:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8422:6:18"},"nodeType":"YulFunctionCall","src":"8422:21:18"},"nodeType":"YulExpressionStatement","src":"8422:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8463:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8474:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8459:3:18"},"nodeType":"YulFunctionCall","src":"8459:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"8479:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8452:6:18"},"nodeType":"YulFunctionCall","src":"8452:30:18"},"nodeType":"YulExpressionStatement","src":"8452:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8502:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8513:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8498:3:18"},"nodeType":"YulFunctionCall","src":"8498:18:18"},{"hexValue":"506f6c69637920616c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"8518:24:18","type":"","value":"Policy already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8491:6:18"},"nodeType":"YulFunctionCall","src":"8491:52:18"},"nodeType":"YulExpressionStatement","src":"8491:52:18"},{"nodeType":"YulAssignment","src":"8552:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8564:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8575:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:18"},"nodeType":"YulFunctionCall","src":"8560:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8552:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8389:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8403:4:18","type":""}],"src":"8238:346:18"},{"body":{"nodeType":"YulBlock","src":"8820:260:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8837:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"8842:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8830:6:18"},"nodeType":"YulFunctionCall","src":"8830:19:18"},"nodeType":"YulExpressionStatement","src":"8830:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8869:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8874:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8865:3:18"},"nodeType":"YulFunctionCall","src":"8865:12:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8887:2:18","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"8891:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8883:3:18"},"nodeType":"YulFunctionCall","src":"8883:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8904:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8900:3:18"},"nodeType":"YulFunctionCall","src":"8900:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8879:3:18"},"nodeType":"YulFunctionCall","src":"8879:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8858:6:18"},"nodeType":"YulFunctionCall","src":"8858:75:18"},"nodeType":"YulExpressionStatement","src":"8858:75:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8953:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8958:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8949:3:18"},"nodeType":"YulFunctionCall","src":"8949:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"8963:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8942:6:18"},"nodeType":"YulFunctionCall","src":"8942:28:18"},"nodeType":"YulExpressionStatement","src":"8942:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8990:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8995:2:18","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8986:3:18"},"nodeType":"YulFunctionCall","src":"8986:12:18"},{"name":"value3","nodeType":"YulIdentifier","src":"9000:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8979:6:18"},"nodeType":"YulFunctionCall","src":"8979:28:18"},"nodeType":"YulExpressionStatement","src":"8979:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9027:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9032:3:18","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9023:3:18"},"nodeType":"YulFunctionCall","src":"9023:13:18"},{"name":"value4","nodeType":"YulIdentifier","src":"9038:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9016:6:18"},"nodeType":"YulFunctionCall","src":"9016:29:18"},"nodeType":"YulExpressionStatement","src":"9016:29:18"},{"nodeType":"YulAssignment","src":"9054:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9070:3:18","type":"","value":"148"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9061:3:18"},"nodeType":"YulFunctionCall","src":"9061:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9054:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8764:3:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8769:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8777:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8785:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8793:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8801:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8812:3:18","type":""}],"src":"8589:491:18"},{"body":{"nodeType":"YulBlock","src":"9259:167:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9276:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9287:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9269:6:18"},"nodeType":"YulFunctionCall","src":"9269:21:18"},"nodeType":"YulExpressionStatement","src":"9269:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9310:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9321:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9306:3:18"},"nodeType":"YulFunctionCall","src":"9306:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"9326:2:18","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9299:6:18"},"nodeType":"YulFunctionCall","src":"9299:30:18"},"nodeType":"YulExpressionStatement","src":"9299:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9349:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9360:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9345:3:18"},"nodeType":"YulFunctionCall","src":"9345:18:18"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"9365:19:18","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9338:6:18"},"nodeType":"YulFunctionCall","src":"9338:47:18"},"nodeType":"YulExpressionStatement","src":"9338:47:18"},{"nodeType":"YulAssignment","src":"9394:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9406:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9417:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9402:3:18"},"nodeType":"YulFunctionCall","src":"9402:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9394:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9236:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9250:4:18","type":""}],"src":"9085:341:18"},{"body":{"nodeType":"YulBlock","src":"9576:145:18","statements":[{"nodeType":"YulAssignment","src":"9586:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9598:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9609:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9594:3:18"},"nodeType":"YulFunctionCall","src":"9594:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9586:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9628:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9643:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9659:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9664:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9655:3:18"},"nodeType":"YulFunctionCall","src":"9655:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"9668:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9651:3:18"},"nodeType":"YulFunctionCall","src":"9651:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9639:3:18"},"nodeType":"YulFunctionCall","src":"9639:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9621:6:18"},"nodeType":"YulFunctionCall","src":"9621:51:18"},"nodeType":"YulExpressionStatement","src":"9621:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9692:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9703:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9688:3:18"},"nodeType":"YulFunctionCall","src":"9688:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"9708:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9681:6:18"},"nodeType":"YulFunctionCall","src":"9681:34:18"},"nodeType":"YulExpressionStatement","src":"9681:34:18"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9537:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9548:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9556:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9567:4:18","type":""}],"src":"9431:290:18"},{"body":{"nodeType":"YulBlock","src":"9900:166:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9917:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9928:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9910:6:18"},"nodeType":"YulFunctionCall","src":"9910:21:18"},"nodeType":"YulExpressionStatement","src":"9910:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9951:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9962:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9947:3:18"},"nodeType":"YulFunctionCall","src":"9947:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"9967:2:18","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9940:6:18"},"nodeType":"YulFunctionCall","src":"9940:30:18"},"nodeType":"YulExpressionStatement","src":"9940:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9990:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10001:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9986:3:18"},"nodeType":"YulFunctionCall","src":"9986:18:18"},{"hexValue":"4e6f2070656e64696e6720636c61696d","kind":"string","nodeType":"YulLiteral","src":"10006:18:18","type":"","value":"No pending claim"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9979:6:18"},"nodeType":"YulFunctionCall","src":"9979:46:18"},"nodeType":"YulExpressionStatement","src":"9979:46:18"},{"nodeType":"YulAssignment","src":"10034:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10046:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10057:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10042:3:18"},"nodeType":"YulFunctionCall","src":"10042:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10034:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9877:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9891:4:18","type":""}],"src":"9726:340:18"},{"body":{"nodeType":"YulBlock","src":"10245:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10262:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10255:6:18"},"nodeType":"YulFunctionCall","src":"10255:21:18"},"nodeType":"YulExpressionStatement","src":"10255:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10296:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10307:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10292:3:18"},"nodeType":"YulFunctionCall","src":"10292:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"10312:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10285:6:18"},"nodeType":"YulFunctionCall","src":"10285:30:18"},"nodeType":"YulExpressionStatement","src":"10285:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10346:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:18"},"nodeType":"YulFunctionCall","src":"10331:18:18"},{"hexValue":"436c61696d20726571756573742065787069726564","kind":"string","nodeType":"YulLiteral","src":"10351:23:18","type":"","value":"Claim request expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10324:6:18"},"nodeType":"YulFunctionCall","src":"10324:51:18"},"nodeType":"YulExpressionStatement","src":"10324:51:18"},{"nodeType":"YulAssignment","src":"10384:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10396:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10407:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10392:3:18"},"nodeType":"YulFunctionCall","src":"10392:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10384:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10222:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10236:4:18","type":""}],"src":"10071:345:18"},{"body":{"nodeType":"YulBlock","src":"10568:147:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10585:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10598:2:18","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"10602:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10594:3:18"},"nodeType":"YulFunctionCall","src":"10594:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10615:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10611:3:18"},"nodeType":"YulFunctionCall","src":"10611:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10590:3:18"},"nodeType":"YulFunctionCall","src":"10590:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10578:6:18"},"nodeType":"YulFunctionCall","src":"10578:66:18"},"nodeType":"YulExpressionStatement","src":"10578:66:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10664:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10669:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10660:3:18"},"nodeType":"YulFunctionCall","src":"10660:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"10674:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10653:6:18"},"nodeType":"YulFunctionCall","src":"10653:28:18"},"nodeType":"YulExpressionStatement","src":"10653:28:18"},{"nodeType":"YulAssignment","src":"10690:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10701:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10706:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10697:3:18"},"nodeType":"YulFunctionCall","src":"10697:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10690:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10536:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10541:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10549:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10560:3:18","type":""}],"src":"10421:294:18"},{"body":{"nodeType":"YulBlock","src":"10894:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10911:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10922:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10904:6:18"},"nodeType":"YulFunctionCall","src":"10904:21:18"},"nodeType":"YulExpressionStatement","src":"10904:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10945:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10956:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10941:3:18"},"nodeType":"YulFunctionCall","src":"10941:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"10961:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10934:6:18"},"nodeType":"YulFunctionCall","src":"10934:30:18"},"nodeType":"YulExpressionStatement","src":"10934:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10984:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10995:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10980:3:18"},"nodeType":"YulFunctionCall","src":"10980:18:18"},{"hexValue":"4c696665436172654c69746520646f6573206e6f7420737570706f7274207265","kind":"string","nodeType":"YulLiteral","src":"11000:34:18","type":"","value":"LifeCareLite does not support re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:18"},"nodeType":"YulFunctionCall","src":"10973:62:18"},"nodeType":"YulExpressionStatement","src":"10973:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11055:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11066:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11051:3:18"},"nodeType":"YulFunctionCall","src":"11051:18:18"},{"hexValue":"6e6577616c73","kind":"string","nodeType":"YulLiteral","src":"11071:8:18","type":"","value":"newals"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11044:6:18"},"nodeType":"YulFunctionCall","src":"11044:36:18"},"nodeType":"YulExpressionStatement","src":"11044:36:18"},{"nodeType":"YulAssignment","src":"11089:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11101:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11112:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11097:3:18"},"nodeType":"YulFunctionCall","src":"11097:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11089:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_78ae99b82253fbc913b86f4e962ed0778c6c00327d9a53a67997f06083b051bf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10871:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10885:4:18","type":""}],"src":"10720:402:18"},{"body":{"nodeType":"YulBlock","src":"11301:181:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11318:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11329:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11311:6:18"},"nodeType":"YulFunctionCall","src":"11311:21:18"},"nodeType":"YulExpressionStatement","src":"11311:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11352:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11363:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11348:3:18"},"nodeType":"YulFunctionCall","src":"11348:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11368:2:18","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11341:6:18"},"nodeType":"YulFunctionCall","src":"11341:30:18"},"nodeType":"YulExpressionStatement","src":"11341:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11391:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11402:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11387:3:18"},"nodeType":"YulFunctionCall","src":"11387:18:18"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"11407:33:18","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11380:6:18"},"nodeType":"YulFunctionCall","src":"11380:61:18"},"nodeType":"YulExpressionStatement","src":"11380:61:18"},{"nodeType":"YulAssignment","src":"11450:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11462:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11473:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11458:3:18"},"nodeType":"YulFunctionCall","src":"11458:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11450:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11278:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11292:4:18","type":""}],"src":"11127:355:18"},{"body":{"nodeType":"YulBlock","src":"11661:170:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11678:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11689:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11671:6:18"},"nodeType":"YulFunctionCall","src":"11671:21:18"},"nodeType":"YulExpressionStatement","src":"11671:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11712:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11723:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11708:3:18"},"nodeType":"YulFunctionCall","src":"11708:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"11728:2:18","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11701:6:18"},"nodeType":"YulFunctionCall","src":"11701:30:18"},"nodeType":"YulExpressionStatement","src":"11701:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11751:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11762:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11747:3:18"},"nodeType":"YulFunctionCall","src":"11747:18:18"},{"hexValue":"4e6f742074686520706f6c696379206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11767:22:18","type":"","value":"Not the policy owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11740:6:18"},"nodeType":"YulFunctionCall","src":"11740:50:18"},"nodeType":"YulExpressionStatement","src":"11740:50:18"},{"nodeType":"YulAssignment","src":"11799:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11811:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11822:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11807:3:18"},"nodeType":"YulFunctionCall","src":"11807:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11799:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11638:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11652:4:18","type":""}],"src":"11487:344:18"},{"body":{"nodeType":"YulBlock","src":"12010:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12027:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12038:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12020:6:18"},"nodeType":"YulFunctionCall","src":"12020:21:18"},"nodeType":"YulExpressionStatement","src":"12020:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12061:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12072:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12057:3:18"},"nodeType":"YulFunctionCall","src":"12057:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"12077:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12050:6:18"},"nodeType":"YulFunctionCall","src":"12050:30:18"},"nodeType":"YulExpressionStatement","src":"12050:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12100:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12111:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12096:3:18"},"nodeType":"YulFunctionCall","src":"12096:18:18"},{"hexValue":"436c61696d20657863656564732073756d2061737375726564","kind":"string","nodeType":"YulLiteral","src":"12116:27:18","type":"","value":"Claim exceeds sum assured"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12089:6:18"},"nodeType":"YulFunctionCall","src":"12089:55:18"},"nodeType":"YulExpressionStatement","src":"12089:55:18"},{"nodeType":"YulAssignment","src":"12153:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12165:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12176:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12161:3:18"},"nodeType":"YulFunctionCall","src":"12161:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12153:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11987:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12001:4:18","type":""}],"src":"11836:349:18"},{"body":{"nodeType":"YulBlock","src":"12364:164:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12381:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12392:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12374:6:18"},"nodeType":"YulFunctionCall","src":"12374:21:18"},"nodeType":"YulExpressionStatement","src":"12374:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12415:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12426:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12411:3:18"},"nodeType":"YulFunctionCall","src":"12411:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"12431:2:18","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12404:6:18"},"nodeType":"YulFunctionCall","src":"12404:30:18"},"nodeType":"YulExpressionStatement","src":"12404:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12454:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12465:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12450:3:18"},"nodeType":"YulFunctionCall","src":"12450:18:18"},{"hexValue":"506f6c6963792065787069726564","kind":"string","nodeType":"YulLiteral","src":"12470:16:18","type":"","value":"Policy expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12443:6:18"},"nodeType":"YulFunctionCall","src":"12443:44:18"},"nodeType":"YulExpressionStatement","src":"12443:44:18"},{"nodeType":"YulAssignment","src":"12496:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12508:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12519:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12504:3:18"},"nodeType":"YulFunctionCall","src":"12504:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12341:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12355:4:18","type":""}],"src":"12190:338:18"},{"body":{"nodeType":"YulBlock","src":"12708:137:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12725:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"12730:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12718:6:18"},"nodeType":"YulFunctionCall","src":"12718:19:18"},"nodeType":"YulExpressionStatement","src":"12718:19:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12757:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12762:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12753:3:18"},"nodeType":"YulFunctionCall","src":"12753:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"12767:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12746:6:18"},"nodeType":"YulFunctionCall","src":"12746:28:18"},"nodeType":"YulExpressionStatement","src":"12746:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12794:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12799:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12790:3:18"},"nodeType":"YulFunctionCall","src":"12790:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"12804:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12783:6:18"},"nodeType":"YulFunctionCall","src":"12783:28:18"},"nodeType":"YulExpressionStatement","src":"12783:28:18"},{"nodeType":"YulAssignment","src":"12820:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12831:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12836:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12827:3:18"},"nodeType":"YulFunctionCall","src":"12827:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12820:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12668:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12673:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12681:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12689:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12700:3:18","type":""}],"src":"12533:312:18"},{"body":{"nodeType":"YulBlock","src":"12898:77:18","statements":[{"nodeType":"YulAssignment","src":"12908:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12919:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"12922:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12915:3:18"},"nodeType":"YulFunctionCall","src":"12915:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12908:3:18"}]},{"body":{"nodeType":"YulBlock","src":"12947:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12949:16:18"},"nodeType":"YulFunctionCall","src":"12949:18:18"},"nodeType":"YulExpressionStatement","src":"12949:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12939:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"12942:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12936:2:18"},"nodeType":"YulFunctionCall","src":"12936:10:18"},"nodeType":"YulIf","src":"12933:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12881:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"12884:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12890:3:18","type":""}],"src":"12850:125:18"},{"body":{"nodeType":"YulBlock","src":"13154:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13171:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13182:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13164:6:18"},"nodeType":"YulFunctionCall","src":"13164:21:18"},"nodeType":"YulExpressionStatement","src":"13164:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13205:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13216:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13201:3:18"},"nodeType":"YulFunctionCall","src":"13201:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13221:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13194:6:18"},"nodeType":"YulFunctionCall","src":"13194:30:18"},"nodeType":"YulExpressionStatement","src":"13194:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13244:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13255:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13240:3:18"},"nodeType":"YulFunctionCall","src":"13240:18:18"},{"hexValue":"496e76616c6964207369676e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"13260:24:18","type":"","value":"Invalid signer address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13233:6:18"},"nodeType":"YulFunctionCall","src":"13233:52:18"},"nodeType":"YulExpressionStatement","src":"13233:52:18"},{"nodeType":"YulAssignment","src":"13294:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13306:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13317:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13302:3:18"},"nodeType":"YulFunctionCall","src":"13302:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13294:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13131:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13145:4:18","type":""}],"src":"12980:346:18"},{"body":{"nodeType":"YulBlock","src":"13505:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13522:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13533:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13515:6:18"},"nodeType":"YulFunctionCall","src":"13515:21:18"},"nodeType":"YulExpressionStatement","src":"13515:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13556:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13567:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13552:3:18"},"nodeType":"YulFunctionCall","src":"13552:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"13572:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13545:6:18"},"nodeType":"YulFunctionCall","src":"13545:30:18"},"nodeType":"YulExpressionStatement","src":"13545:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13595:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13606:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13591:3:18"},"nodeType":"YulFunctionCall","src":"13591:18:18"},{"hexValue":"496e76616c6964207661756c742061646472657373","kind":"string","nodeType":"YulLiteral","src":"13611:23:18","type":"","value":"Invalid vault address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13584:6:18"},"nodeType":"YulFunctionCall","src":"13584:51:18"},"nodeType":"YulExpressionStatement","src":"13584:51:18"},{"nodeType":"YulAssignment","src":"13644:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13656:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13667:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13652:3:18"},"nodeType":"YulFunctionCall","src":"13652:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13644:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13482:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13496:4:18","type":""}],"src":"13331:345:18"},{"body":{"nodeType":"YulBlock","src":"13730:79:18","statements":[{"nodeType":"YulAssignment","src":"13740:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13752:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"13755:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13748:3:18"},"nodeType":"YulFunctionCall","src":"13748:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13740:4:18"}]},{"body":{"nodeType":"YulBlock","src":"13781:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13783:16:18"},"nodeType":"YulFunctionCall","src":"13783:18:18"},"nodeType":"YulExpressionStatement","src":"13783:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13772:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"13778:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13769:2:18"},"nodeType":"YulFunctionCall","src":"13769:11:18"},"nodeType":"YulIf","src":"13766:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13712:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"13715:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13721:4:18","type":""}],"src":"13681:128:18"},{"body":{"nodeType":"YulBlock","src":"13860:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"13891:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13912:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13919:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13924:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13915:3:18"},"nodeType":"YulFunctionCall","src":"13915:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13905:6:18"},"nodeType":"YulFunctionCall","src":"13905:31:18"},"nodeType":"YulExpressionStatement","src":"13905:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13956:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13959:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13949:6:18"},"nodeType":"YulFunctionCall","src":"13949:15:18"},"nodeType":"YulExpressionStatement","src":"13949:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13984:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13987:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13977:6:18"},"nodeType":"YulFunctionCall","src":"13977:15:18"},"nodeType":"YulExpressionStatement","src":"13977:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13880:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13873:6:18"},"nodeType":"YulFunctionCall","src":"13873:9:18"},"nodeType":"YulIf","src":"13870:132:18"},{"nodeType":"YulAssignment","src":"14011:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14020:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"14023:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14016:3:18"},"nodeType":"YulFunctionCall","src":"14016:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"14011:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13845:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"13848:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13854:1:18","type":""}],"src":"13814:217:18"},{"body":{"nodeType":"YulBlock","src":"14210:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14227:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14238:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14220:6:18"},"nodeType":"YulFunctionCall","src":"14220:21:18"},"nodeType":"YulExpressionStatement","src":"14220:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14261:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14272:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14257:3:18"},"nodeType":"YulFunctionCall","src":"14257:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14277:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14250:6:18"},"nodeType":"YulFunctionCall","src":"14250:30:18"},"nodeType":"YulExpressionStatement","src":"14250:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14300:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14311:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14296:3:18"},"nodeType":"YulFunctionCall","src":"14296:18:18"},{"hexValue":"496e76616c69642061646d696e2061646472657373","kind":"string","nodeType":"YulLiteral","src":"14316:23:18","type":"","value":"Invalid admin address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14289:6:18"},"nodeType":"YulFunctionCall","src":"14289:51:18"},"nodeType":"YulExpressionStatement","src":"14289:51:18"},{"nodeType":"YulAssignment","src":"14349:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14361:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14372:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14357:3:18"},"nodeType":"YulFunctionCall","src":"14357:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14349:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14187:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14201:4:18","type":""}],"src":"14036:345:18"},{"body":{"nodeType":"YulBlock","src":"14560:168:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14577:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14588:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14570:6:18"},"nodeType":"YulFunctionCall","src":"14570:21:18"},"nodeType":"YulExpressionStatement","src":"14570:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14611:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14622:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14607:3:18"},"nodeType":"YulFunctionCall","src":"14607:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14627:2:18","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14600:6:18"},"nodeType":"YulFunctionCall","src":"14600:30:18"},"nodeType":"YulExpressionStatement","src":"14600:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14650:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14661:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14646:3:18"},"nodeType":"YulFunctionCall","src":"14646:18:18"},{"hexValue":"43616e6e6f74207265766f6b652073656c66","kind":"string","nodeType":"YulLiteral","src":"14666:20:18","type":"","value":"Cannot revoke self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14639:6:18"},"nodeType":"YulFunctionCall","src":"14639:48:18"},"nodeType":"YulExpressionStatement","src":"14639:48:18"},{"nodeType":"YulAssignment","src":"14696:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14708:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14719:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14704:3:18"},"nodeType":"YulFunctionCall","src":"14704:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14696:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14537:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14551:4:18","type":""}],"src":"14386:342:18"},{"body":{"nodeType":"YulBlock","src":"14907:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14924:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14935:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14917:6:18"},"nodeType":"YulFunctionCall","src":"14917:21:18"},"nodeType":"YulExpressionStatement","src":"14917:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14958:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14969:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14954:3:18"},"nodeType":"YulFunctionCall","src":"14954:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"14974:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14947:6:18"},"nodeType":"YulFunctionCall","src":"14947:30:18"},"nodeType":"YulExpressionStatement","src":"14947:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14997:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15008:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14993:3:18"},"nodeType":"YulFunctionCall","src":"14993:18:18"},{"hexValue":"506f6c696379206e6f74206578706972656420796574","kind":"string","nodeType":"YulLiteral","src":"15013:24:18","type":"","value":"Policy not expired yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14986:6:18"},"nodeType":"YulFunctionCall","src":"14986:52:18"},"nodeType":"YulExpressionStatement","src":"14986:52:18"},{"nodeType":"YulAssignment","src":"15047:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15059:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15070:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15055:3:18"},"nodeType":"YulFunctionCall","src":"15055:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15047:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14884:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14898:4:18","type":""}],"src":"14733:346:18"},{"body":{"nodeType":"YulBlock","src":"15258:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15275:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15286:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15268:6:18"},"nodeType":"YulFunctionCall","src":"15268:21:18"},"nodeType":"YulExpressionStatement","src":"15268:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15320:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15305:3:18"},"nodeType":"YulFunctionCall","src":"15305:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15325:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15298:6:18"},"nodeType":"YulFunctionCall","src":"15298:30:18"},"nodeType":"YulExpressionStatement","src":"15298:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15348:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15359:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15344:3:18"},"nodeType":"YulFunctionCall","src":"15344:18:18"},{"hexValue":"45786365656473206d6178696d756d206475726174696f6e","kind":"string","nodeType":"YulLiteral","src":"15364:26:18","type":"","value":"Exceeds maximum duration"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15337:6:18"},"nodeType":"YulFunctionCall","src":"15337:54:18"},"nodeType":"YulExpressionStatement","src":"15337:54:18"},{"nodeType":"YulAssignment","src":"15400:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15412:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15423:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15408:3:18"},"nodeType":"YulFunctionCall","src":"15408:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15400:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b490cf61f7fe5378a94bf56dea6cc28a840b8ac643af2528c5ed87be45ffc410__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15235:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15249:4:18","type":""}],"src":"15084:348:18"},{"body":{"nodeType":"YulBlock","src":"15611:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15628:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15639:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15621:6:18"},"nodeType":"YulFunctionCall","src":"15621:21:18"},"nodeType":"YulExpressionStatement","src":"15621:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15662:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15673:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15658:3:18"},"nodeType":"YulFunctionCall","src":"15658:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"15678:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15651:6:18"},"nodeType":"YulFunctionCall","src":"15651:30:18"},"nodeType":"YulExpressionStatement","src":"15651:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15701:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15712:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15697:3:18"},"nodeType":"YulFunctionCall","src":"15697:18:18"},{"hexValue":"5369676e617475726520616c72656164792075736564","kind":"string","nodeType":"YulLiteral","src":"15717:24:18","type":"","value":"Signature already used"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15690:6:18"},"nodeType":"YulFunctionCall","src":"15690:52:18"},"nodeType":"YulExpressionStatement","src":"15690:52:18"},{"nodeType":"YulAssignment","src":"15751:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15763:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15774:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15759:3:18"},"nodeType":"YulFunctionCall","src":"15759:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15751:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15588:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15602:4:18","type":""}],"src":"15437:346:18"},{"body":{"nodeType":"YulBlock","src":"15962:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15979:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15990:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15972:6:18"},"nodeType":"YulFunctionCall","src":"15972:21:18"},"nodeType":"YulExpressionStatement","src":"15972:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16013:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16024:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16009:3:18"},"nodeType":"YulFunctionCall","src":"16009:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16029:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16002:6:18"},"nodeType":"YulFunctionCall","src":"16002:30:18"},"nodeType":"YulExpressionStatement","src":"16002:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16052:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16063:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16048:3:18"},"nodeType":"YulFunctionCall","src":"16048:18:18"},{"hexValue":"496e76616c6964206f776e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"16068:23:18","type":"","value":"Invalid owner address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16041:6:18"},"nodeType":"YulFunctionCall","src":"16041:51:18"},"nodeType":"YulExpressionStatement","src":"16041:51:18"},{"nodeType":"YulAssignment","src":"16101:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16113:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16124:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16109:3:18"},"nodeType":"YulFunctionCall","src":"16109:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16101:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15939:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15953:4:18","type":""}],"src":"15788:345:18"},{"body":{"nodeType":"YulBlock","src":"16312:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16329:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16340:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16322:6:18"},"nodeType":"YulFunctionCall","src":"16322:21:18"},"nodeType":"YulExpressionStatement","src":"16322:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16363:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16374:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16359:3:18"},"nodeType":"YulFunctionCall","src":"16359:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16379:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16352:6:18"},"nodeType":"YulFunctionCall","src":"16352:30:18"},"nodeType":"YulExpressionStatement","src":"16352:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16402:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16413:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16398:3:18"},"nodeType":"YulFunctionCall","src":"16398:18:18"},{"hexValue":"5072656d69756d206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"16418:26:18","type":"","value":"Premium must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16391:6:18"},"nodeType":"YulFunctionCall","src":"16391:54:18"},"nodeType":"YulExpressionStatement","src":"16391:54:18"},{"nodeType":"YulAssignment","src":"16454:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16466:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16477:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16462:3:18"},"nodeType":"YulFunctionCall","src":"16462:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16454:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16289:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16303:4:18","type":""}],"src":"16138:348:18"},{"body":{"nodeType":"YulBlock","src":"16665:178:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16682:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16693:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16675:6:18"},"nodeType":"YulFunctionCall","src":"16675:21:18"},"nodeType":"YulExpressionStatement","src":"16675:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16716:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16727:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16712:3:18"},"nodeType":"YulFunctionCall","src":"16712:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"16732:2:18","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16705:6:18"},"nodeType":"YulFunctionCall","src":"16705:30:18"},"nodeType":"YulExpressionStatement","src":"16705:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16755:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16766:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16751:3:18"},"nodeType":"YulFunctionCall","src":"16751:18:18"},{"hexValue":"53756d2061737375726564206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"16771:30:18","type":"","value":"Sum assured must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16744:6:18"},"nodeType":"YulFunctionCall","src":"16744:58:18"},"nodeType":"YulExpressionStatement","src":"16744:58:18"},{"nodeType":"YulAssignment","src":"16811:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16823:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16834:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16819:3:18"},"nodeType":"YulFunctionCall","src":"16819:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16811:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16642:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16656:4:18","type":""}],"src":"16491:352:18"},{"body":{"nodeType":"YulBlock","src":"17022:175:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17039:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17050:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17032:6:18"},"nodeType":"YulFunctionCall","src":"17032:21:18"},"nodeType":"YulExpressionStatement","src":"17032:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17073:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17084:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17069:3:18"},"nodeType":"YulFunctionCall","src":"17069:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17089:2:18","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17062:6:18"},"nodeType":"YulFunctionCall","src":"17062:30:18"},"nodeType":"YulExpressionStatement","src":"17062:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17112:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17123:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17108:3:18"},"nodeType":"YulFunctionCall","src":"17108:18:18"},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"17128:27:18","type":"","value":"Duration must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17101:6:18"},"nodeType":"YulFunctionCall","src":"17101:55:18"},"nodeType":"YulExpressionStatement","src":"17101:55:18"},{"nodeType":"YulAssignment","src":"17165:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17177:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17188:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17173:3:18"},"nodeType":"YulFunctionCall","src":"17173:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17165:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16999:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17013:4:18","type":""}],"src":"16848:349:18"},{"body":{"nodeType":"YulBlock","src":"17376:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17393:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17404:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17386:6:18"},"nodeType":"YulFunctionCall","src":"17386:21:18"},"nodeType":"YulExpressionStatement","src":"17386:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17427:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17438:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17423:3:18"},"nodeType":"YulFunctionCall","src":"17423:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"17443:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17416:6:18"},"nodeType":"YulFunctionCall","src":"17416:30:18"},"nodeType":"YulExpressionStatement","src":"17416:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17466:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17477:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17462:3:18"},"nodeType":"YulFunctionCall","src":"17462:18:18"},{"hexValue":"496e636f7272656374207072656d69756d20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"17482:26:18","type":"","value":"Incorrect premium amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17455:6:18"},"nodeType":"YulFunctionCall","src":"17455:54:18"},"nodeType":"YulExpressionStatement","src":"17455:54:18"},{"nodeType":"YulAssignment","src":"17518:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17530:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17541:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17526:3:18"},"nodeType":"YulFunctionCall","src":"17526:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17518:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17353:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17367:4:18","type":""}],"src":"17202:348:18"},{"body":{"nodeType":"YulBlock","src":"17786:260:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17803:3:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17816:2:18","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"17820:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17812:3:18"},"nodeType":"YulFunctionCall","src":"17812:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17833:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17829:3:18"},"nodeType":"YulFunctionCall","src":"17829:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17808:3:18"},"nodeType":"YulFunctionCall","src":"17808:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17796:6:18"},"nodeType":"YulFunctionCall","src":"17796:66:18"},"nodeType":"YulExpressionStatement","src":"17796:66:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17882:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17887:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17878:3:18"},"nodeType":"YulFunctionCall","src":"17878:12:18"},{"name":"value1","nodeType":"YulIdentifier","src":"17892:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17871:6:18"},"nodeType":"YulFunctionCall","src":"17871:28:18"},"nodeType":"YulExpressionStatement","src":"17871:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17919:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17924:2:18","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17915:3:18"},"nodeType":"YulFunctionCall","src":"17915:12:18"},{"name":"value2","nodeType":"YulIdentifier","src":"17929:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17908:6:18"},"nodeType":"YulFunctionCall","src":"17908:28:18"},"nodeType":"YulExpressionStatement","src":"17908:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17956:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17961:2:18","type":"","value":"84"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17952:3:18"},"nodeType":"YulFunctionCall","src":"17952:12:18"},{"name":"value3","nodeType":"YulIdentifier","src":"17966:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17945:6:18"},"nodeType":"YulFunctionCall","src":"17945:28:18"},"nodeType":"YulExpressionStatement","src":"17945:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17993:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17998:3:18","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17989:3:18"},"nodeType":"YulFunctionCall","src":"17989:13:18"},{"name":"value4","nodeType":"YulIdentifier","src":"18004:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17982:6:18"},"nodeType":"YulFunctionCall","src":"17982:29:18"},"nodeType":"YulExpressionStatement","src":"17982:29:18"},{"nodeType":"YulAssignment","src":"18020:20:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18031:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18036:3:18","type":"","value":"148"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18027:3:18"},"nodeType":"YulFunctionCall","src":"18027:13:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18020:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17730:3:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17735:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17743:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17751:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17759:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17767:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17778:3:18","type":""}],"src":"17555:491:18"},{"body":{"nodeType":"YulBlock","src":"18225:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18242:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18253:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18235:6:18"},"nodeType":"YulFunctionCall","src":"18235:21:18"},"nodeType":"YulExpressionStatement","src":"18235:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18276:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18287:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:18"},"nodeType":"YulFunctionCall","src":"18272:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18292:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:18"},"nodeType":"YulFunctionCall","src":"18265:30:18"},"nodeType":"YulExpressionStatement","src":"18265:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18315:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18326:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18311:3:18"},"nodeType":"YulFunctionCall","src":"18311:18:18"},{"hexValue":"506f6c69637920616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"18331:23:18","type":"","value":"Policy already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18304:6:18"},"nodeType":"YulFunctionCall","src":"18304:51:18"},"nodeType":"YulExpressionStatement","src":"18304:51:18"},{"nodeType":"YulAssignment","src":"18364:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18376:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18387:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18372:3:18"},"nodeType":"YulFunctionCall","src":"18372:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18364:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18202:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18216:4:18","type":""}],"src":"18051:345:18"},{"body":{"nodeType":"YulBlock","src":"18575:182:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18592:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18603:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18585:6:18"},"nodeType":"YulFunctionCall","src":"18585:21:18"},"nodeType":"YulExpressionStatement","src":"18585:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18626:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18637:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18622:3:18"},"nodeType":"YulFunctionCall","src":"18622:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"18642:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18615:6:18"},"nodeType":"YulFunctionCall","src":"18615:30:18"},"nodeType":"YulExpressionStatement","src":"18615:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18676:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18661:3:18"},"nodeType":"YulFunctionCall","src":"18661:18:18"},{"hexValue":"5072656d69756d207472616e7366657220746f207661756c74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"18681:34:18","type":"","value":"Premium transfer to vault failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18654:6:18"},"nodeType":"YulFunctionCall","src":"18654:62:18"},"nodeType":"YulExpressionStatement","src":"18654:62:18"},{"nodeType":"YulAssignment","src":"18725:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18737:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18748:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18733:3:18"},"nodeType":"YulFunctionCall","src":"18733:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18725:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18552:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18566:4:18","type":""}],"src":"18401:356:18"},{"body":{"nodeType":"YulBlock","src":"18919:162:18","statements":[{"nodeType":"YulAssignment","src":"18929:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18941:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18952:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18937:3:18"},"nodeType":"YulFunctionCall","src":"18937:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18929:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18971:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"18982:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18964:6:18"},"nodeType":"YulFunctionCall","src":"18964:25:18"},"nodeType":"YulExpressionStatement","src":"18964:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19009:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19020:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19005:3:18"},"nodeType":"YulFunctionCall","src":"19005:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"19025:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18998:6:18"},"nodeType":"YulFunctionCall","src":"18998:34:18"},"nodeType":"YulExpressionStatement","src":"18998:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19052:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19063:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19048:3:18"},"nodeType":"YulFunctionCall","src":"19048:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"19068:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19041:6:18"},"nodeType":"YulFunctionCall","src":"19041:34:18"},"nodeType":"YulExpressionStatement","src":"19041:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18872:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18883:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18891:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18899:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18910:4:18","type":""}],"src":"18762:319:18"},{"body":{"nodeType":"YulBlock","src":"19215:145:18","statements":[{"nodeType":"YulAssignment","src":"19225:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19237:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19248:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19233:3:18"},"nodeType":"YulFunctionCall","src":"19233:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19225:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19267:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19282:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19298:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19303:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19294:3:18"},"nodeType":"YulFunctionCall","src":"19294:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"19307:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19290:3:18"},"nodeType":"YulFunctionCall","src":"19290:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19278:3:18"},"nodeType":"YulFunctionCall","src":"19278:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19260:6:18"},"nodeType":"YulFunctionCall","src":"19260:51:18"},"nodeType":"YulExpressionStatement","src":"19260:51:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19331:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19342:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19327:3:18"},"nodeType":"YulFunctionCall","src":"19327:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"19347:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19320:6:18"},"nodeType":"YulFunctionCall","src":"19320:34:18"},"nodeType":"YulExpressionStatement","src":"19320:34:18"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19176:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19187:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19195:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19206:4:18","type":""}],"src":"19086:274:18"},{"body":{"nodeType":"YulBlock","src":"19397:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19414:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19421:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19426:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19417:3:18"},"nodeType":"YulFunctionCall","src":"19417:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19407:6:18"},"nodeType":"YulFunctionCall","src":"19407:31:18"},"nodeType":"YulExpressionStatement","src":"19407:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19454:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19457:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19447:6:18"},"nodeType":"YulFunctionCall","src":"19447:15:18"},"nodeType":"YulExpressionStatement","src":"19447:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19478:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19481:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19471:6:18"},"nodeType":"YulFunctionCall","src":"19471:15:18"},"nodeType":"YulExpressionStatement","src":"19471:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"19365:127:18"},{"body":{"nodeType":"YulBlock","src":"19678:217:18","statements":[{"nodeType":"YulAssignment","src":"19688:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19700:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19711:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19696:3:18"},"nodeType":"YulFunctionCall","src":"19696:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19688:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19731:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"19742:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19724:6:18"},"nodeType":"YulFunctionCall","src":"19724:25:18"},"nodeType":"YulExpressionStatement","src":"19724:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19769:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19780:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19765:3:18"},"nodeType":"YulFunctionCall","src":"19765:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19789:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19797:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19785:3:18"},"nodeType":"YulFunctionCall","src":"19785:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19758:6:18"},"nodeType":"YulFunctionCall","src":"19758:45:18"},"nodeType":"YulExpressionStatement","src":"19758:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19823:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19834:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19819:3:18"},"nodeType":"YulFunctionCall","src":"19819:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"19839:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19812:6:18"},"nodeType":"YulFunctionCall","src":"19812:34:18"},"nodeType":"YulExpressionStatement","src":"19812:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19866:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19877:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19862:3:18"},"nodeType":"YulFunctionCall","src":"19862:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"19882:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19855:6:18"},"nodeType":"YulFunctionCall","src":"19855:34:18"},"nodeType":"YulExpressionStatement","src":"19855:34:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19623:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19634:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19642:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19650:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19658:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19669:4:18","type":""}],"src":"19497:398:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_400bbc197f1c1fb3e67d091cebc8cc69fe4b5c07aa827772d9fbd397a83b2480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ETH forwarding to vault failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_struct$_Policy_$6060_memory_ptr__to_t_struct$_Policy_$6060_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 0xc0)))))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_struct$_ClaimRequest_$6071_memory_ptr__to_t_struct$_ClaimRequest_$6071_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_InsuranceVault_$9290__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1e9e950a526a95cc7d95293f29f762db2aa4726dd3b9db2536fa2c12a39d60d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Period must be positive\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_4bc221f51c0c4bd6523cb893b47fce57185073464b1c6fa624cc7cfeaeaca718__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Policy not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_95f493702208a2a06b0f8ef057e2e15037d67fcb94d3ef27f611ea9570126c56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Policy already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), value3)\n        mstore(add(pos, 116), value4)\n        end := add(pos, 148)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_b4fb62f3b593534017b14648c301dc296e2a67d1a9a001c5d79bcf64b3257535__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No pending claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f44fb0f40bf352bc087a193352f28ccc5c69f24eacc7a64c3cf7194cad387b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Claim request expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_78ae99b82253fbc913b86f4e962ed0778c6c00327d9a53a67997f06083b051bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LifeCareLite does not support re\")\n        mstore(add(headStart, 96), \"newals\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8f38048d6f164f69bd8f75095159775b7b2ce33f67b1dec5fc84f3c3de3e6b1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not the policy owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c063c99236266bee340077b7b3d3568dcce87c92afc809892aea0d4d64ffb158__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Claim exceeds sum assured\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Policy expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        end := add(pos, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_66ab6772a54eb217ac16321a779d85e901cc2f461be4784dbcb024b781d0ed1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid signer address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid vault address\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_09d15eaf43d676e695ebe9b9d2f0db21c57e245deb2adce1e0ee5fceeb974653__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid admin address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1138fae7e16d19dab4cfc2223621363b1730b5b78cb8219ef4b1057280244c94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Cannot revoke self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9aafd5dcd30e979f8c3beee09b6304ef28299d42c2153a123cd764955010f881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Policy not expired yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b490cf61f7fe5378a94bf56dea6cc28a840b8ac643af2528c5ed87be45ffc410__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Exceeds maximum duration\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Signature already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid owner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b2573bc7700962c6d4dc36d806bd74461bb44a2fa896a094329f3be7c5fb8d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Premium must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f1ac96f82e2072e00a47c82e0b4baa3c74996d40debee7337e218b844a68192c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Sum assured must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Duration must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3601d4c904796b5bf40b42a6436f150ee38c30845bc33a27c026e4a820e8d8c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Incorrect premium amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), value3)\n        mstore(add(pos, 116), value4)\n        end := add(pos, 148)\n    }\n    function abi_encode_tuple_t_stringliteral_df9648054d8ca19cfbaa727dd26881c0c0ba1cb52a57f27d423acdca20e18d26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Policy already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_73a9a0026b5b52e8f2c9f76b8937b82f7c1e8c4767ee39b086d261f16cc3f4dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Premium transfer to vault failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101855760003560e01c806375b238fc116100d1578063b0529da21161008a578063c9100bcb11610064578063c9100bcb14610621578063d547741f146106ff578063f74d54801461071f578063fbfa77cf1461075757600080fd5b8063b0529da2146105ce578063b87fb65c146105ee578063c634b78e1461060157600080fd5b806375b238fc146103f55780638c51f60f1461041757806391d14854146104375780639a19c7b014610457578063a217fddf14610477578063a3f685f91461048c57600080fd5b806336568abe1161013e5780635052cb49116101185780635052cb49146103755780635312ea8e1461039557806356a1c701146103b55780636817031b146103d557600080fd5b806336568abe146103225780633719f096146103425780634e494b7c1461036257600080fd5b806301ffc9a71461023957806319c0d1fa1461026e578063248a9ca31461028e5780632f2ff15d146102cc5780632fe1814c146102ec57806330d95b531461030c57600080fd5b36610234576003546040516000916001600160a01b03169034908381818185875af1925050503d80600081146101d7576040519150601f19603f3d011682016040523d82523d6000602084013e6101dc565b606091505b50509050806102325760405162461bcd60e51b815260206004820152601e60248201527f45544820666f7277617264696e6720746f207661756c74206661696c6564000060448201526064015b60405180910390fd5b005b600080fd5b34801561024557600080fd5b50610259610254366004612004565b610777565b60405190151581526020015b60405180910390f35b34801561027a57600080fd5b50610232610289366004612035565b6107ae565b34801561029a57600080fd5b506102be6102a9366004612035565b60009081526020819052604090206001015490565b604051908152602001610265565b3480156102d857600080fd5b506102326102e7366004612063565b61085d565b3480156102f857600080fd5b50610232610307366004612136565b610888565b34801561031857600080fd5b506102be60045481565b34801561032e57600080fd5b5061023261033d366004612063565b610ae2565b34801561034e57600080fd5b506102be61035d366004612035565b610b1a565b610232610370366004612186565b610d44565b34801561038157600080fd5b50610232610390366004612136565b610dfd565b3480156103a157600080fd5b506102326103b0366004612035565b6110f6565b3480156103c157600080fd5b506102326103d03660046121e0565b611194565b3480156103e157600080fd5b506102326103f03660046121e0565b611241565b34801561040157600080fd5b506102be60008051602061238383398151915281565b34801561042357600080fd5b506102be610432366004612035565b6112ed565b34801561044357600080fd5b50610259610452366004612063565b6113e9565b34801561046357600080fd5b506102326104723660046121e0565b611412565b34801561048357600080fd5b506102be600081565b34801561049857600080fd5b506105656104a7366004612035565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250600090815260056020818152604092839020835161010080820186528254825260018301546001600160a01b03169382019390935260028201549481019490945260038101546060850152600481015460808501529182015460ff808216151560a086015291900416151560c08301526006015460e082015290565b6040516102659190815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a08083015115159082015260c08083015115159082015260e091820151918101919091526101000190565b3480156105da57600080fd5b506102326105e9366004612035565b6114d0565b6102be6105fc3660046121fd565b61159d565b34801561060d57600080fd5b5061023261061c3660046121e0565b611652565b34801561062d57600080fd5b506106bb61063c366004612035565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260066020908152604091829020825160a08101845281548152600182015492810192909252600281015460ff1615159282019290925260038201546060820152600490910154608082015290565b6040516102659190600060a0820190508251825260208301516020830152604083015115156040830152606083015160608301526080830151608083015292915050565b34801561070b57600080fd5b5061023261071a366004612063565b6116fc565b34801561072b57600080fd5b5060025461073f906001600160a01b031681565b6040516001600160a01b039091168152602001610265565b34801561076357600080fd5b5060035461073f906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b14806107a857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006107b981611721565b600082116108095760405162461bcd60e51b815260206004820152601760248201527f506572696f64206d75737420626520706f7369746976650000000000000000006044820152606401610229565b6004546108198362015180612280565b60048190556040805183815260208101929092527fb792057619e1a3b0e2768725ef4cb4fc3cbf647c992d306e6876522e3fc0cdbc910160405180910390a1505050565b60008281526020819052604090206001015461087881611721565b610882838361172e565b50505050565b6000805160206123838339815191526108a081611721565b60008481526005602081905260409091200154849060ff166108d45760405162461bcd60e51b815260040161022990612297565b60008581526005602081905260409091209081015460ff166109085760405162461bcd60e51b815260040161022990612297565b6005810154610100900460ff161561095b5760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b6044820152606401610229565b6001810154604080516020810189905260609290921b6001600160601b03191690820152605481018690526000607482018190524660948301529060b4016040516020818303038152906040528051906020012090506109bb81866117c0565b6109d75760405162461bcd60e51b8152600401610229906122c2565b60058201805460ff191690556003546001830154604051631f9cab4760e21b81526001600160a01b03918216600482015260248101899052911690637e72ad1c90604401600060405180830381600087803b158015610a3557600080fd5b505af1158015610a49573d6000803e3d6000fd5b5050505060018201546040518781526001600160a01b039091169088907fae2eb9a5ff7e26865940377aafb8a569997727d3bc48028ed88199eed260087f9060200160405180910390a360018201546040518781526001600160a01b039091169088907feffda959fad3422ef4e602f1642198e56536dbbf192da630dcbc451b5b5c203d9060200160405180910390a350505050505050565b6001600160a01b0381163314610b0b5760405163334bd91960e11b815260040160405180910390fd5b610b158282611877565b505050565b6000600080516020612383833981519152610b3481611721565b60008381526005602081905260409091200154839060ff16610b685760405162461bcd60e51b815260040161022990612297565b60008481526006602090815260408083206005909252909120600282015460ff16610bc85760405162461bcd60e51b815260206004820152601060248201526f4e6f2070656e64696e6720636c61696d60801b6044820152606401610229565b8160040154421115610c145760405162461bcd60e51b815260206004820152601560248201527410db185a5b481c995c5d595cdd08195e1c1a5c9959605a1b6044820152606401610229565b60028201805460ff1916905560058101805461ffff191661010017905560035460018281015490840154604051631e55af2160e31b81526001600160a01b039283166004820152602481019190915291169063f2ad790890604401600060405180830381600087803b158015610c8957600080fd5b505af1158015610c9d573d6000803e3d6000fd5b50505050600181810154908301546040519081526001600160a01b039091169087907f636494174e4a0f872de31b104ec14fb50edb1bdc4b1db9f006eaa68a61610f9c9060200160405180910390a3600181810154908301546040519081526001600160a01b039091169087907f957a909a771d0c1c8b37c8f5c6c9df37d8d7c521d3d99445839ede9153d063589060200160405180910390a35060010154949350505050565b60405133606081901b6001600160601b03191660208301524260348301529060540160408051601f19818403018152908290528051602090910120907f86c1ecc07c250e70ebd20978be8a2c3c89364df0bdf82af94b5a3d09aaf3aa7490600090a360405162461bcd60e51b815260206004820152602660248201527f4c696665436172654c69746520646f6573206e6f7420737570706f72742072656044820152656e6577616c7360d01b6064820152608401610229565b600260015403610e1f5760405162461bcd60e51b8152600401610229906122ed565b600260015560008381526005602081905260409091200154839060ff16610e585760405162461bcd60e51b815260040161022990612297565b600084815260056020526040902060018101546001600160a01b03163314610eb95760405162461bcd60e51b81526020600482015260146024820152732737ba103a3432903837b634b1bc9037bbb732b960611b6044820152606401610229565b8060030154841115610f0d5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20657863656564732073756d2061737375726564000000000000006044820152606401610229565b6005810154610100900460ff1615610f605760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de48185b1c9958591e4818db185a5b595960521b6044820152606401610229565b80600401544210610fa45760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606401610229565b6040805160208101879052908101859052466060820152600090608001604051602081830303815290604052805190602001209050610fe381856117c0565b610fff5760405162461bcd60e51b8152600401610229906122c2565b8351602080860191909120600090815260078252604090819020805460ff19166001908117909155815160a08101835289815292830188905290820152426060820181905260045460808301916110569190612324565b905260008781526006602090815260409182902083518155838201516001808301919091558484015160028301805460ff1916911515919091179055606085015160038301556080909401516004909101559184015490518781526001600160a01b039091169188917fcb458d27822c3290cdcdeeab9b43bcea4e60db6845d1e3932c5871443523e1f1910160405180910390a350506001805550505050565b600061110181611721565b6002600154036111235760405162461bcd60e51b8152600401610229906122ed565b600260015560035460405163c107532960e01b8152336004820152602481018490526001600160a01b039091169063c107532990604401600060405180830381600087803b15801561117457600080fd5b505af1158015611188573d6000803e3d6000fd5b50506001805550505050565b600061119f81611721565b6001600160a01b0382166111ee5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964207369676e6572206164647265737360501b6044820152606401610229565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f4a297cf5d32586f80d2b0708a39d2da1f46e6ae7722171e1c51dfd685b5b8aa890600090a3505050565b600061124c81611721565b6001600160a01b03821661129a5760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b6044820152606401610229565b600380546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3990600090a3505050565b6000818152600560208181526040808420815161010080820184528254825260018301546001600160a01b03169482019490945260028201549281019290925260038101546060830152600481015460808301529283015460ff80821615801560a08501529390910416151560c082015260069092015460e083015280611378575080608001514210155b156113865750600092915050565b60004282608001516113989190612337565b905060008260e0015183608001516113b09190612337565b9050806000036113c557506000949350505050565b808284604001516113d69190612280565b6113e0919061234a565b95945050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600061141d81611721565b6001600160a01b03821661146b5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606401610229565b336001600160a01b038316036114b85760405162461bcd60e51b815260206004820152601260248201527121b0b73737ba103932bb37b5b29039b2b63360711b6044820152606401610229565b610b1560008051602061238383398151915283611877565b60008181526005602081905260409091209081015460ff166115045760405162461bcd60e51b815260040161022990612297565b80600401544210156115515760405162461bcd60e51b8152602060048201526016602482015275141bdb1a58de481b9bdd08195e1c1a5c9959081e595d60521b6044820152606401610229565b60058101805460ff1916905560018101546040516001600160a01b039091169083907f8629ba1a018e1397c942e8dcf53afb2cfd0f250c02bc785e041010dfe6bbe00290600090a35050565b600063966018008311156115f35760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d6178696d756d206475726174696f6e00000000000000006044820152606401610229565b600061160287878787876118e2565b9050866001600160a01b0316817fb1efb5a54d173a08f1d7ae00e21150da481ac80d259826760104a5ba97be6fa88860405161164091815260200190565b60405180910390a39695505050505050565b600061165d81611721565b6001600160a01b0382166116ab5760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642061646d696e206164647265737360581b6044820152606401610229565b6116c36000805160206123838339815191528361172e565b506040516001600160a01b038316907f1c4e23de8d72c94b22992bd4d7b6786b215ba876af214ff63e6a0ca38fc97af490600090a25050565b60008281526020819052604090206001015461171781611721565b6108828383611877565b61172b8133611dc8565b50565b600061173a83836113e9565b6117b8576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556117703390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016107a8565b5060006107a8565b805160208083019190912060009081526007909152604081205460ff16156118235760405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c9948185b1c9958591e481d5cd95960521b6044820152606401610229565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c849052603c81209061185d8285611e05565b6002546001600160a01b0390811691161495945050505050565b600061188383836113e9565b156117b8576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016107a8565b60006002600154036119065760405162461bcd60e51b8152600401610229906122ed565b60026001556001600160a01b0386166119595760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152606401610229565b600085116119a95760405162461bcd60e51b815260206004820152601860248201527f5072656d69756d206d75737420626520706f73697469766500000000000000006044820152606401610229565b600084116119f95760405162461bcd60e51b815260206004820152601c60248201527f53756d2061737375726564206d75737420626520706f736974697665000000006044820152606401610229565b60008311611a495760405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f736974697665000000000000006044820152606401610229565b843414611a985760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207072656d69756d20616d6f756e7400000000000000006044820152606401610229565b6040516001600160601b0319606088901b16602082015260348101869052605481018590526074810184905246609482015260009060b401604051602081830303815290604052805190602001209050611af281846117c0565b611b0e5760405162461bcd60e51b8152600401610229906122c2565b82516020808501919091206000908152600790915260408120805460ff19166001179055611b7988426040516001600160601b0319606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b6000818152600560208190526040909120015490915060ff1615611bd75760405162461bcd60e51b8152602060048201526015602482015274506f6c69637920616c72656164792065786973747360581b6044820152606401610229565b604051806101000160405280828152602001896001600160a01b031681526020018881526020018781526020018642611c109190612324565b8152600160208083018290526000604080850182905242606095860152868252600580845291819020865181559286015193830180546001600160a01b039095166001600160a01b0319909516949094179093559184015160028201559183015160038301556080830151600483015560a0830151908201805460c085015115156101000261ff00199315159390931661ffff199091161791909117905560e0909101516006909101556003546040516000916001600160a01b031690899060006040518083038185875af1925050503d8060008114611d0c576040519150601f19603f3d011682016040523d82523d6000602084013e611d11565b606091505b5050905080611d625760405162461bcd60e51b815260206004820181905260248201527f5072656d69756d207472616e7366657220746f207661756c74206661696c65646044820152606401610229565b6001600160a01b038916827f105d821f4999dd4d79a889f0a0b1a1f6a5366615d06b4b7aef9e0a42a1de8cff8a8a611d9a8b42612324565b6040805193845260208401929092529082015260600160405180910390a35060018055979650505050505050565b611dd282826113e9565b611e015760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610229565b5050565b600080600080611e158686611e2f565b925092509250611e258282611e7c565b5090949350505050565b60008060008351604103611e695760208401516040850151606086015160001a611e5b88828585611f35565b955095509550505050611e75565b50508151600091506002905b9250925092565b6000826003811115611e9057611e9061236c565b03611e99575050565b6001826003811115611ead57611ead61236c565b03611ecb5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611edf57611edf61236c565b03611f005760405163fce698f760e01b815260048101829052602401610229565b6003826003811115611f1457611f1461236c565b03611e01576040516335e2f38360e21b815260048101829052602401610229565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611f705750600091506003905082611ffa565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611fc4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611ff057506000925060019150829050611ffa565b9250600091508190505b9450945094915050565b60006020828403121561201657600080fd5b81356001600160e01b03198116811461202e57600080fd5b9392505050565b60006020828403121561204757600080fd5b5035919050565b6001600160a01b038116811461172b57600080fd5b6000806040838503121561207657600080fd5b8235915060208301356120888161204e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126120ba57600080fd5b813567ffffffffffffffff808211156120d5576120d5612093565b604051601f8301601f19908116603f011681019082821181831017156120fd576120fd612093565b8160405283815286602085880101111561211657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561214b57600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561217057600080fd5b61217c868287016120a9565b9150509250925092565b6000806000806080858703121561219c57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff8111156121c857600080fd5b6121d4878288016120a9565b91505092959194509250565b6000602082840312156121f257600080fd5b813561202e8161204e565b600080600080600060a0868803121561221557600080fd5b85356122208161204e565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff81111561225157600080fd5b61225d888289016120a9565b9150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176107a8576107a861226a565b602080825260119082015270506f6c696379206e6f742061637469766560781b604082015260600190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b808201808211156107a8576107a861226a565b818103818111156107a8576107a861226a565b60008261236757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220037cd1c230787085518f4a3eac9d7093248ec9b339376916fe56a75c986b6a5964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB0529DA2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9100BCB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC9100BCB EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0529DA2 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xB87FB65C EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x8C51F60F EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xA3F685F9 EQ PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5052CB49 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x5052CB49 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x6817031B EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x3719F096 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x4E494B7C EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x19C0D1FA EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x2FE1814C EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x30D95B53 EQ PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x234 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLVALUE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45544820666F7277617264696E6720746F207661756C74206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x2004 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x2A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x232 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x2186 JUMP JUMPDEST PUSH2 0xD44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x2136 JUMP JUMPDEST PUSH2 0xDFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x10F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x3F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x12ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x452 CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x13E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1412 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x565 PUSH2 0x4A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 SWAP1 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x21FD JUMP JUMPDEST PUSH2 0x159D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x21E0 JUMP JUMPDEST PUSH2 0x1652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB PUSH2 0x63C CALLDATASIZE PUSH1 0x4 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x71A CALLDATASIZE PUSH1 0x4 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x16FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x73F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x73F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7A8 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506572696F64206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x819 DUP4 PUSH3 0x15180 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB792057619E1A3B0E2768725EF4CB4FC3CBF647C992D306E6876522E3FC0CDBC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x878 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 PUSH2 0x172E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8A0 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP1 DUP3 ADD MSTORE PUSH1 0x54 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x74 DUP3 ADD DUP2 SWAP1 MSTORE CHAINID PUSH1 0x94 DUP4 ADD MSTORE SWAP1 PUSH1 0xB4 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x9BB DUP2 DUP7 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1F9CAB47 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x7E72AD1C SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xAE2EB9A5FF7E26865940377AAFB8A569997727D3BC48028ED88199EED260087F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH32 0xEFFDA959FAD3422EF4E602F1642198E56536DBBF192DA630DCBC451B5B5C203D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 DUP3 DUP3 PUSH2 0x1877 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB34 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F2070656E64696E6720636C61696D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481C995C5D595CDD08195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1E55AF21 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xF2AD7908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x636494174E4A0F872DE31B104EC14FB50EDB1BDC4B1DB9F006EAA68A61610F9C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP2 DUP2 ADD SLOAD SWAP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH32 0x957A909A771D0C1C8B37C8F5C6C9DF37D8D7C521D3D99445839EDE9153D06358 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 ADD SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER PUSH1 0x60 DUP2 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x34 DUP4 ADD MSTORE SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 PUSH32 0x86C1ECC07C250E70EBD20978BE8A2C3C89364DF0BDF82AF94B5A3D09AAF3AA74 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696665436172654C69746520646F6573206E6F7420737570706F7274207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E6577616C73 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA103A3432903837B634B1BC9037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20657863656564732073756D206173737572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE48185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x141BDB1A58DE48195E1C1A5C9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE CHAINID PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xFE3 DUP2 DUP6 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SLOAD PUSH1 0x80 DUP4 ADD SWAP2 PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE DUP4 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SWAP2 DUP5 ADD SLOAD SWAP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP9 SWAP2 PUSH32 0xCB458D27822C3290CDCDEEAB9B43BCEA4E60DB6845D1E3932C5871443523E1F1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1101 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC1075329 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC1075329 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119F DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964207369676E65722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x4A297CF5D32586F80D2B0708A39D2DA1F46E6AE7722171E1C51DFD685B5B8AA8 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124C DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964207661756C742061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x483BDEDAAF23706A9800AC1AF0D852B34927780D79F9D6BA60A80C7CAD75EA39 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO DUP1 ISZERO PUSH1 0xA0 DUP6 ADD MSTORE SWAP4 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE DUP1 PUSH2 0x1378 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0x1386 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP DUP3 PUSH1 0x80 ADD MLOAD PUSH2 0x1398 SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xE0 ADD MLOAD DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x13C5 JUMPI POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2280 JUMP JUMPDEST PUSH2 0x13E0 SWAP2 SWAP1 PUSH2 0x234A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141D DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x14B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B73737BA103932BB37B5B29039B2B633 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0xB15 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1504 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x2297 JUMP JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x141BDB1A58DE481B9BDD08195E1C1A5C9959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 PUSH32 0x8629BA1A018E1397C942E8DCF53AFB2CFD0F250C02BC785E041010DFE6BBE002 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x96601800 DUP4 GT ISZERO PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178696D756D206475726174696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1602 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0xB1EFB5A54D173A08F1D7AE00E21150DA481AC80D259826760104A5BA97BE6FA8 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1640 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165D DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646D696E2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH2 0x16C3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2383 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x172E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1C4E23DE8D72C94B22992BD4D7B6786B215BA876AF214FF63E6A0CA38FC97AF4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1717 DUP2 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 PUSH2 0x1877 JUMP JUMPDEST PUSH2 0x172B DUP2 CALLER PUSH2 0x1DC8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173A DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1770 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7A8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP5 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 PUSH2 0x185D DUP3 DUP6 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1883 DUP4 DUP4 PUSH2 0x13E9 JUMP JUMPDEST ISZERO PUSH2 0x17B8 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1906 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x1959 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0x19A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D75737420626520706F7369746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x19F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D2061737375726564206D75737420626520706F73697469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1A49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x1A98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207072656D69756D20616D6F756E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP9 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x74 DUP2 ADD DUP5 SWAP1 MSTORE CHAINID PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xB4 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1AF2 DUP2 DUP5 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x229 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1B79 DUP9 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1BD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506F6C69637920616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 TIMESTAMP PUSH2 0x1C10 SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 SWAP6 DUP7 ADD MSTORE DUP7 DUP3 MSTORE PUSH1 0x5 DUP1 DUP5 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP3 DUP7 ADD MLOAD SWAP4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP10 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D0C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D207472616E7366657220746F207661756C74206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 PUSH32 0x105D821F4999DD4D79A889F0A0B1A1F6A5366615D06B4B7AEF9E0A42A1DE8CFF DUP11 DUP11 PUSH2 0x1D9A DUP12 TIMESTAMP PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DD2 DUP3 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x229 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1E15 DUP7 DUP7 PUSH2 0x1E2F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1E25 DUP3 DUP3 PUSH2 0x1E7C JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x1E69 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1E5B DUP9 DUP3 DUP6 DUP6 PUSH2 0x1F35 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1E75 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E90 JUMPI PUSH2 0x1E90 PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1E99 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAD PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1ECB JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDF PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1F00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F14 JUMPI PUSH2 0x1F14 PUSH2 0x236C JUMP JUMPDEST SUB PUSH2 0x1E01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x229 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1F70 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FF0 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1FFA JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x172B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2088 DUP2 PUSH2 0x204E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20D5 PUSH2 0x2093 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x20FD JUMPI PUSH2 0x20FD PUSH2 0x2093 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x214B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217C DUP7 DUP3 DUP8 ADD PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x219C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21D4 DUP8 DUP3 DUP9 ADD PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x202E DUP2 PUSH2 0x204E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2220 DUP2 PUSH2 0x204E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225D DUP9 DUP3 DUP10 ADD PUSH2 0x20A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x506F6C696379206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x226A JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH2 0x7A8 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2367 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 0x5C 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220037CD1C230787085518F4A3E 0xAC SWAP14 PUSH17 0x93248EC9B339376916FE56A75C986B6A59 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:5979:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15868:5:13;;15860:41;;15845:9;;-1:-1:-1;;;;;15868:5:13;;15887:9;;15845;15860:41;15845:9;15860:41;15887:9;15868:5;15860:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15844:57;;;15919:4;15911:47;;;;-1:-1:-1;;;15911:47:13;;426:2:18;15911:47:13;;;408:21:18;465:2;445:18;;;438:30;504:32;484:18;;;477:60;554:18;;15911:47:13;;;;;;;;;15785:180;344:5979:16;;;;2565:202:0;;;;;;;;;;-1:-1:-1;2565:202:0;;;;;:::i;:::-;;:::i;:::-;;;1039:14:18;;1032:22;1014:41;;1002:2;987:18;2565:202:0;;;;;;;;4349:326:13;;;;;;;;;;-1:-1:-1;4349:326:13;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;;;;;-1:-1:-1;3810:120:0;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;1582:25:18;;;1570:2;1555:18;3810:120:0;1436:177:18;4226:136:0;;;;;;;;;;-1:-1:-1;4226:136:0;;;;;:::i;:::-;;:::i;5185:1136:16:-;;;;;;;;;;-1:-1:-1;5185:1136:16;;;;;:::i;:::-;;:::i;947:41:13:-;;;;;;;;;;;;;;;;5328:245:0;;;;;;;;;;-1:-1:-1;5328:245:0;;;;;:::i;:::-;;:::i;2833:895:16:-;;;;;;;;;;-1:-1:-1;2833:895:16;;;;;:::i;:::-;;:::i;4593:350::-;;;;;;:::i;:::-;;:::i;9192:1268:13:-;;;;;;;;;;-1:-1:-1;9192:1268:13;;;;;:::i;:::-;;:::i;15435:247::-;;;;;;;;;;-1:-1:-1;15435:247:13;;;;;:::i;:::-;;:::i;3557:293::-;;;;;;;;;;-1:-1:-1;3557:293:13;;;;;:::i;:::-;;:::i;3947:287::-;;;;;;;;;;-1:-1:-1;3947:287:13;;;;;:::i;:::-;;:::i;674:60::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;674:60:13;;3886:612:16;;;;;;;;;;-1:-1:-1;3886:612:16;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;;;;;-1:-1:-1;2854:136:0;;;;;:::i;:::-;;:::i;5060:256:13:-;;;;;;;;;;-1:-1:-1;5060:256:13;;;;;:::i;:::-;;:::i;2187:49:0:-;;;;;;;;;;-1:-1:-1;2187:49:0;2232:4;2187:49;;12908:125:13;;;;;;;;;;-1:-1:-1;12908:125:13;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13008:18:13;;;;:8;:18;;;;;;;;;13001:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13001:25:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12908:125;;;;;;;4827:13:18;;4809:32;;4901:4;4889:17;;;4883:24;-1:-1:-1;;;;;4879:50:18;4857:20;;;4850:80;4986:4;4974:17;;;4968:24;4946:20;;;4939:54;5049:4;5037:17;;;5031:24;5009:20;;;5002:54;5112:4;5100:17;;;5094:24;5072:20;;;5065:54;4917:3;5177:17;;;5171:24;5164:32;5157:40;5135:20;;;5128:70;5268:4;5256:17;;;5250:24;5243:32;5236:40;5214:20;;;5207:70;5333:4;5321:17;;;5315:24;5293:20;;;5286:54;;;;4796:3;4781:19;;4614:732;13338:348:13;;;;;;;;;;-1:-1:-1;13338:348:13;;;;;:::i;:::-;;:::i;1802:908:16:-;;;;;;:::i;:::-;;:::i;4747:240:13:-;;;;;;;;;;-1:-1:-1;4747:240:13;;;;;:::i;:::-;;:::i;13118:128::-;;;;;;;;;;-1:-1:-1;13118:128:13;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13223:16:13;;;;:6;:16;;;;;;;;;13216:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:128;;;;;;;6169:4:18;6211:3;6200:9;6196:19;6188:27;;6248:6;6242:13;6231:9;6224:32;6312:4;6304:6;6300:17;6294:24;6287:4;6276:9;6272:20;6265:54;6389:4;6381:6;6377:17;6371:24;6364:32;6357:40;6350:4;6339:9;6335:20;6328:70;6454:4;6446:6;6442:17;6436:24;6429:4;6418:9;6414:20;6407:54;6517:4;6509:6;6505:17;6499:24;6492:4;6481:9;6477:20;6470:54;6017:513;;;;;4642:138:0;;;;;;;;;;-1:-1:-1;4642:138:0;;;;;:::i;:::-;;:::i;775:28:13:-;;;;;;;;;;-1:-1:-1;775:28:13;;;;-1:-1:-1;;;;;775:28:13;;;;;;-1:-1:-1;;;;;6699:32:18;;;6681:51;;6669:2;6654:18;775:28:13;6535:203:18;854:27:13;;;;;;;;;;-1:-1:-1;854:27:13;;;;-1:-1:-1;;;;;854:27:13;;;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:8;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;4349:326:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;4472:1:13::1;4457:12;:16;4449:52;;;::::0;-1:-1:-1;;;4449:52:13;;7184:2:18;4449:52:13::1;::::0;::::1;7166:21:18::0;7223:2;7203:18;;;7196:30;7262:25;7242:18;;;7235:53;7305:18;;4449:52:13::1;6982:347:18::0;4449:52:13::1;4531:17;::::0;4578:21:::1;:12:::0;4593:6:::1;4578:21;:::i;:::-;4558:17;:41:::0;;;4614:54:::1;::::0;;7813:25:18;;;7869:2;7854:18;;7847:34;;;;4614:54:13::1;::::0;7786:18:18;4614:54:13::1;;;;;;;4439:236;4349:326:::0;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5185:1136:16:-;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;5350:8:16;;5432:27:13::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;5415:21:16::2;5439:18:::0;;;:8:::2;:18;::::0;;;;;;;5484:15;;::::2;::::0;::::2;;5476:45;;;;-1:-1:-1::0;;;5476:45:16::2;;;;;;;:::i;:::-;5540:16;::::0;::::2;::::0;::::2;::::0;::::2;;;5539:17;5531:52;;;::::0;-1:-1:-1;;;5531:52:16;;8440:2:18;5531:52:16::2;::::0;::::2;8422:21:18::0;8479:2;8459:18;;;8452:30;-1:-1:-1;;;8498:18:18;;;8491:52;8560:18;;5531:52:16::2;8238:346:18::0;5531:52:16::2;5761:12;::::0;::::2;::::0;5734:81:::2;::::0;;::::2;::::0;::::2;8830:19:18::0;;;8887:2;8883:15;;;;-1:-1:-1;;;;;;8883:15:18;8865:12;;;8858:75;8949:12;;;8942:28;;;-1:-1:-1;8986:12:18;;;8979:28;;;5801:13:16::2;9023::18::0;;;9016:29;-1:-1:-1;9061:13:18;;5734:81:16::2;;;;;;;;;;;;5711:114;;;;;;5689:136;;5919:39;5935:11;5948:9;5919:15;:39::i;:::-;5911:69;;;;-1:-1:-1::0;;;5911:69:16::2;;;;;;;:::i;:::-;6034:15;::::0;::::2;:23:::0;;-1:-1:-1;;6034:23:16::2;::::0;;6117:5:::2;::::0;-1:-1:-1;6142:12:16;::::2;::::0;6117:53:::2;::::0;-1:-1:-1;;;6117:53:16;;-1:-1:-1;;;;;6142:12:16;;::::2;6117:53;::::0;::::2;9621:51:18::0;9688:18;;;9681:34;;;6117:5:16;::::2;::::0;:16:::2;::::0;9594:18:18;;6117:53:16::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;6220:12:16::2;::::0;::::2;::::0;6194:53:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;6220:12:16;;::::2;::::0;6210:8;;6194:53:::2;::::0;1570:2:18;1555:18;6194:53:16::2;;;;;;;6287:12;::::0;::::2;::::0;6262:52:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;6287:12:16;;::::2;::::0;6277:8;;6262:52:::2;::::0;1570:2:18;1555:18;6262:52:16::2;;;;;;;5360:961;;2490:1:0::1;5185:1136:16::0;;;;:::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:3;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2833:895:16:-;2984:7;-1:-1:-1;;;;;;;;;;;2464:16:0;2475:4;2464:10;:16::i;:::-;5432:18:13::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;2957:8:16;;5432:27:13::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;3041:26:16::2;3070:16:::0;;;:6:::2;:16;::::0;;;;;;;3120:8:::2;:18:::0;;;;;;3165:15:::2;::::0;::::2;::::0;::::2;;3157:44;;;::::0;-1:-1:-1;;;3157:44:16;;9928:2:18;3157:44:16::2;::::0;::::2;9910:21:18::0;9967:2;9947:18;;;9940:30;-1:-1:-1;;;9986:18:18;;;9979:46;10042:18;;3157:44:16::2;9726:340:18::0;3157:44:16::2;3238:5;:21;;;3219:15;:40;;3211:74;;;::::0;-1:-1:-1;;;3211:74:16;;10273:2:18;3211:74:16::2;::::0;::::2;10255:21:18::0;10312:2;10292:18;;;10285:30;-1:-1:-1;;;10331:18:18;;;10324:51;10392:18;;3211:74:16::2;10071:345:18::0;3211:74:16::2;3339:15;::::0;::::2;:23:::0;;-1:-1:-1;;3339:23:16::2;::::0;;3372:16:::2;::::0;::::2;:23:::0;;-1:-1:-1;;3405:23:16;3339::::2;3405::::0;;;3484:5:::2;::::0;-1:-1:-1;3511:12:16;;::::2;::::0;3526;;::::2;::::0;3484:55:::2;::::0;-1:-1:-1;;;3484:55:16;;-1:-1:-1;;;;;3511:12:16;;::::2;3484:55;::::0;::::2;9621:51:18::0;9688:18;;;9681:34;;;;3484:5:16;::::2;::::0;:18:::2;::::0;9594::18;;3484:55:16::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;3587:12:16::2;::::0;;::::2;::::0;3601;;::::2;::::0;3563:51:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;3587:12:16;;::::2;::::0;3577:8;;3563:51:::2;::::0;1570:2:18;1555:18;3563:51:16::2;;;;;;;3656:12;::::0;;::::2;::::0;3670;;::::2;::::0;3629:54:::2;::::0;1582:25:18;;;-1:-1:-1;;;;;3656:12:16;;::::2;::::0;3646:8;;3629:54:::2;::::0;1570:2:18;1555:18;3629:54:16::2;;;;;;;-1:-1:-1::0;3709:12:16::2;;::::0;;2833:895;-1:-1:-1;;;;2833:895:16:o;4593:350::-;4819:45;;4867:10;10598:2:18;10594:15;;;-1:-1:-1;;;;;;10590:53:18;4819:45:16;;;10578:66:18;4848:15:16;10660:12:18;;;10653:28;4867:10:16;10697:12:18;;4819:45:16;;;-1:-1:-1;;4819:45:16;;;;;;;;;;4809:56;;4819:45;4809:56;;;;;4786:92;;;;;4888:48;;-1:-1:-1;;;4888:48:16;;10922:2:18;4888:48:16;;;10904:21:18;10961:2;10941:18;;;10934:30;11000:34;10980:18;;;10973:62;-1:-1:-1;;;11051:18:18;;;11044:36;11097:19;;4888:48:16;10720:402:18;9192:1268:13;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;5432::::1;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;9339:8;;5432:27:::1;;5424:57;;;;-1:-1:-1::0;;;5424:57:13::1;;;;;;;:::i;:::-;9359:21:::2;9383:18:::0;;;:8:::2;:18;::::0;;;;9419:12:::2;::::0;::::2;::::0;-1:-1:-1;;;;;9419:12:13::2;9435:10;9419:26;9411:59;;;::::0;-1:-1:-1;;;9411:59:13;;11689:2:18;9411:59:13::2;::::0;::::2;11671:21:18::0;11728:2;11708:18;;;11701:30;-1:-1:-1;;;11747:18:18;;;11740:50;11807:18;;9411:59:13::2;11487:344:18::0;9411:59:13::2;9498:6;:17;;;9488:6;:27;;9480:65;;;::::0;-1:-1:-1;;;9480:65:13;;12038:2:18;9480:65:13::2;::::0;::::2;12020:21:18::0;12077:2;12057:18;;;12050:30;12116:27;12096:18;;;12089:55;12161:18;;9480:65:13::2;11836:349:18::0;9480:65:13::2;9564:16;::::0;::::2;::::0;::::2;::::0;::::2;;;9563:17;9555:52;;;::::0;-1:-1:-1;;;9555:52:13;;8440:2:18;9555:52:13::2;::::0;::::2;8422:21:18::0;8479:2;8459:18;;;8452:30;-1:-1:-1;;;8498:18:18;;;8491:52;8560:18;;9555:52:13::2;8238:346:18::0;9555:52:13::2;9643:6;:13;;;9625:15;:31;9617:58;;;::::0;-1:-1:-1;;;9617:58:13;;12392:2:18;9617:58:13::2;::::0;::::2;12374:21:18::0;12431:2;12411:18;;;12404:30;-1:-1:-1;;;12450:18:18;;;12443:44;12504:18;;9617:58:13::2;12190:338:18::0;9617:58:13::2;9813:111;::::0;;::::2;::::0;::::2;12718:19:18::0;;;12753:12;;;12746:28;;;9897:13:13::2;12790:12:18::0;;;12783:28;9768:19:13::2;::::0;12827:12:18;;9813:111:13::2;;;;;;;;;;;;9790:144;;;;;;9768:166;;9989:39;10005:11;10018:9;9989:15;:39::i;:::-;9981:69;;;;-1:-1:-1::0;;;9981:69:13::2;;;;;;;:::i;:::-;10118:20:::0;;::::2;::::0;;::::2;::::0;;;;10103:36:::2;::::0;;;:14:::2;:36:::0;;;;;;;:43;;-1:-1:-1;;10103:43:13::2;10142:4;10103:43:::0;;::::2;::::0;;;10176:219;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;;;;;;;10303:15:::2;10176:219:::0;;;;;;10367:17:::2;::::0;10176:219;;;;10349:35:::2;::::0;10367:17;10349:35:::2;:::i;:::-;10176:219:::0;;10157:16:::2;::::0;;;:6:::2;:16;::::0;;;;;;;;:238;;;;;;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;10157:238:13::2;::::0;::::2;;::::0;;;::::2;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;10432:12;;::::2;::::0;10411:42;;1582:25:18;;;-1:-1:-1;;;;;10432:12:13;;::::2;::::0;10157:16;;10411:42:::2;::::0;1555:18:18;10411:42:13::2;;;;;;;-1:-1:-1::0;;574:1:13;3386:22;;-1:-1:-1;;;;9192:1268:13:o;15435:247::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;617:1:13::1;3282:7;;:19:::0;3274:63:::1;;;;-1:-1:-1::0;;;3274:63:13::1;;;;;;;:::i;:::-;617:1;3347:7;:18:::0;15627:5:::2;::::0;:48:::2;::::0;-1:-1:-1;;;15627:48:13;;15655:10:::2;15627:48;::::0;::::2;9621:51:18::0;9688:18;;;9681:34;;;-1:-1:-1;;;;;15627:5:13;;::::2;::::0;:19:::2;::::0;9594:18:18;;15627:48:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;574:1:13::1;3386:22:::0;;-1:-1:-1;;;;15435:247:13:o;3557:293::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;3658:23:13;::::1;3650:58;;;::::0;-1:-1:-1;;;3650:58:13;;13182:2:18;3650:58:13::1;::::0;::::1;13164:21:18::0;13221:2;13201:18;;;13194:30;-1:-1:-1;;;13240:18:18;;;13233:52;13302:18;;3650:58:13::1;12980:346:18::0;3650:58:13::1;3738:13;::::0;;-1:-1:-1;;;;;3761:25:13;;::::1;-1:-1:-1::0;;;;;;3761:25:13;::::1;::::0;::::1;::::0;;;3801:42:::1;::::0;3738:13;::::1;::::0;3761:25;3738:13;;3801:42:::1;::::0;3718:17:::1;::::0;3801:42:::1;3640:210;3557:293:::0;;:::o;3947:287::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4047:22:13;::::1;4039:56;;;::::0;-1:-1:-1;;;4039:56:13;;13533:2:18;4039:56:13::1;::::0;::::1;13515:21:18::0;13572:2;13552:18;;;13545:30;-1:-1:-1;;;13591:18:18;;;13584:51;13652:18;;4039:56:13::1;13331:345:18::0;4039:56:13::1;4132:5;::::0;;-1:-1:-1;;;;;4148:32:13;;::::1;-1:-1:-1::0;;;;;;4148:32:13;::::1;::::0;::::1;::::0;;;4195::::1;::::0;4132:5;::::1;::::0;4148:32;4132:5;;4195:32:::1;::::0;4105:16:::1;::::0;4195:32:::1;4029:205;3947:287:::0;;:::o;3886:612:16:-;3950:7;3987:18;;;:8;:18;;;;;;;;3969:36;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3969:36:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4019:42;;;4053:1;:8;;;4034:15;:27;;4019:42;4015:56;;;-1:-1:-1;4070:1:16;;3886:612;-1:-1:-1;;3886:612:16:o;4015:56::-;4141:22;4177:15;4166:1;:8;;;:26;;;;:::i;:::-;4141:51;;4202:21;4237:1;:11;;;4226:1;:8;;;:22;;;;:::i;:::-;4202:46;;4271:13;4288:1;4271:18;4267:32;;-1:-1:-1;4298:1:16;;3886:612;-1:-1:-1;;;;3886:612:16:o;4267:32::-;4478:13;4460:14;4448:1;:9;;;:26;;;;:::i;:::-;4447:44;;;;:::i;:::-;4440:51;3886:612;-1:-1:-1;;;;;3886:612:16:o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;5060:256:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;5164:19:13;::::1;5156:53;;;::::0;-1:-1:-1;;;5156:53:13;;14238:2:18;5156:53:13::1;::::0;::::1;14220:21:18::0;14277:2;14257:18;;;14250:30;-1:-1:-1;;;14296:18:18;;;14289:51;14357:18;;5156:53:13::1;14036:345:18::0;5156:53:13::1;5236:10;-1:-1:-1::0;;;;;5227:19:13;::::1;::::0;5219:50:::1;;;::::0;-1:-1:-1;;;5219:50:13;;14588:2:18;5219:50:13::1;::::0;::::1;14570:21:18::0;14627:2;14607:18;;;14600:30;-1:-1:-1;;;14646:18:18;;;14639:48;14704:18;;5219:50:13::1;14386:342:18::0;5219:50:13::1;5279:30;-1:-1:-1::0;;;;;;;;;;;5303:5:13::1;5279:11;:30::i;13338:348::-:0;13402:21;13426:18;;;:8;:18;;;;;;;;13462:15;;;;;;13454:45;;;;-1:-1:-1;;;13454:45:13;;;;;;;:::i;:::-;13536:6;:13;;;13517:15;:32;;13509:67;;;;-1:-1:-1;;;13509:67:13;;14935:2:18;13509:67:13;;;14917:21:18;14974:2;14954:18;;;14947:30;-1:-1:-1;;;14993:18:18;;;14986:52;15055:18;;13509:67:13;14733:346:18;13509:67:13;13595:15;;;:23;;-1:-1:-1;;13595:23:13;;;;13666:12;;;13642:37;;-1:-1:-1;;;;;13666:12:13;;;;13656:8;;13642:37;;13613:5;;13642:37;13392:294;13338:348;:::o;1802:908:16:-;1999:7;468:13;2026:8;:24;;2018:61;;;;-1:-1:-1;;;2018:61:16;;15286:2:18;2018:61:16;;;15268:21:18;15325:2;15305:18;;;15298:30;15364:26;15344:18;;;15337:54;15408:18;;2018:61:16;15084:348:18;2018:61:16;2202:16;2221:139;2255:5;2274:7;2295:10;2319:8;2341:9;2221:20;:139::i;:::-;2202:158;;2607:5;-1:-1:-1;;;;;2553:91:16;2584:8;2553:91;2627:7;2553:91;;;;1582:25:18;;1570:2;1555:18;;1436:177;2553:91:16;;;;;;;;2670:8;1802:908;-1:-1:-1;;;;;;1802:908:16:o;4747:240:13:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;4853:22:13;::::1;4845:56;;;::::0;-1:-1:-1;;;4845:56:13;;14238:2:18;4845:56:13::1;::::0;::::1;14220:21:18::0;14277:2;14257:18;;;14250:30;-1:-1:-1;;;14296:18:18;;;14289:51;14357:18;;4845:56:13::1;14036:345:18::0;4845:56:13::1;4911:32;-1:-1:-1::0;;;;;;;;;;;4934:8:13::1;4911:10;:32::i;:::-;-1:-1:-1::0;4958:22:13::1;::::0;-1:-1:-1;;;;;4958:22:13;::::1;::::0;::::1;::::0;;;::::1;4747:240:::0;;:::o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3199:103::-:0;3265:30;3276:4;735:10:3;3265::0;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;5925:396:13;6058:20;;;;;;;;;;6018:4;6043:36;;;:14;:36;;;;;;;;;6042:37;6034:72;;;;-1:-1:-1;;;6034:72:13;;15639:2:18;6034:72:13;;;15621:21:18;15678:2;15658:18;;;15651:30;-1:-1:-1;;;15697:18:18;;;15690:52;15759:18;;6034:72:13;15437:346:18;6034:72:13;1401:34:7;6116:28:13;1388:48:7;;;1497:4;1490:25;;;1595:4;1579:21;;;6219:46:13;1579:21:7;6255:9:13;6219:13;:46::i;:::-;6301:13;;-1:-1:-1;;;;;6301:13:13;;;6282:32;;;;5925:396;-1:-1:-1;;;;;5925:396:13:o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:3;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;6677:2082:13;6886:7;617:1;3282:7;;:19;3274:63;;;;-1:-1:-1;;;3274:63:13;;;;;;;:::i;:::-;617:1;3347:7;:18;-1:-1:-1;;;;;6915:19:13;::::1;6907:53;;;::::0;-1:-1:-1;;;6907:53:13;;15990:2:18;6907:53:13::1;::::0;::::1;15972:21:18::0;16029:2;16009:18;;;16002:30;-1:-1:-1;;;16048:18:18;;;16041:51;16109:18;;6907:53:13::1;15788:345:18::0;6907:53:13::1;6988:1;6978:7;:11;6970:48;;;::::0;-1:-1:-1;;;6970:48:13;;16340:2:18;6970:48:13::1;::::0;::::1;16322:21:18::0;16379:2;16359:18;;;16352:30;16418:26;16398:18;;;16391:54;16462:18;;6970:48:13::1;16138:348:18::0;6970:48:13::1;7049:1;7036:10;:14;7028:55;;;::::0;-1:-1:-1;;;7028:55:13;;16693:2:18;7028:55:13::1;::::0;::::1;16675:21:18::0;16732:2;16712:18;;;16705:30;16771;16751:18;;;16744:58;16819:18;;7028:55:13::1;16491:352:18::0;7028:55:13::1;7112:1;7101:8;:12;7093:50;;;::::0;-1:-1:-1;;;7093:50:13;;17050:2:18;7093:50:13::1;::::0;::::1;17032:21:18::0;17089:2;17069:18;;;17062:30;17128:27;17108:18;;;17101:55;17173:18;;7093:50:13::1;16848:349:18::0;7093:50:13::1;7174:7;7161:9;:20;7153:57;;;::::0;-1:-1:-1;;;7153:57:13;;17404:2:18;7153:57:13::1;::::0;::::1;17386:21:18::0;17443:2;17423:18;;;17416:30;17482:26;17462:18;;;17455:54;17526:18;;7153:57:13::1;17202:348:18::0;7153:57:13::1;7402:163;::::0;-1:-1:-1;;;;;;17816:2:18;17812:15;;;17808:53;7402:163:13::1;::::0;::::1;17796:66:18::0;17878:12;;;17871:28;;;17915:12;;;17908:28;;;17952:12;;;17945:28;;;7538:13:13::1;17989::18::0;;;17982:29;7357:19:13::1;::::0;18027:13:18;;7402:163:13::1;;;;;;;;;;;;7379:196;;;;;;7357:218;;7630:39;7646:11;7659:9;7630:15;:39::i;:::-;7622:69;;;;-1:-1:-1::0;;;7622:69:13::1;;;;;;;:::i;:::-;7759:20:::0;;::::1;::::0;;::::1;::::0;;;;7744:36:::1;::::0;;;:14:::1;:36:::0;;;;;;:43;;-1:-1:-1;;7744:43:13::1;7783:4;7744:43;::::0;;7864:40:::1;7881:5:::0;7888:15:::1;5674:33:::0;;-1:-1:-1;;;;;;10598:2:18;10594:15;;;10590:53;5674:33:13;;;10578:66:18;10660:12;;;10653:28;;;5638:7:13;;10697:12:18;;5674:33:13;;;;;;;;;;;;5664:44;;;;;;5657:51;;5556:159;;;;;7864:40:::1;7923:18;::::0;;;:8:::1;:18;::::0;;;;;;;:27:::1;::::0;7845:59;;-1:-1:-1;7923:27:13::1;;7922:28;7914:62;;;::::0;-1:-1:-1;;;7914:62:13;;18253:2:18;7914:62:13::1;::::0;::::1;18235:21:18::0;18292:2;18272:18;;;18265:30;-1:-1:-1;;;18311:18:18;;;18304:51;18372:18;;7914:62:13::1;18051:345:18::0;7914:62:13::1;8050:288;;;;;;;;8081:8;8050:288;;;;8110:5;-1:-1:-1::0;;;;;8050:288:13::1;;;;;8138:7;8050:288;;;;8171:10;8050:288;;;;8221:8;8203:15;:26;;;;:::i;:::-;8050:288:::0;;8253:4:::1;8050:288;::::0;;::::1;::::0;;;;;;;;;;;8312:15:::1;8050:288:::0;;;;;8029:18;;;:8:::1;:18:::0;;;;;;;:309;;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;8029:309:13;;::::1;-1:-1:-1::0;;;;;;8029:309:13;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;;;;-1:-1:-1::0;;8029:309:13;::::1;;::::0;;;;-1:-1:-1;;8029:309:13;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;8506:5:::1;::::0;8498:39:::1;::::0;8483:9:::1;::::0;-1:-1:-1;;;;;8506:5:13::1;::::0;8525:7;;8498:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8482:55;;;8555:4;8547:49;;;::::0;-1:-1:-1;;;8547:49:13;;18603:2:18;8547:49:13::1;::::0;::::1;18585:21:18::0;;;18622:18;;;18615:30;18681:34;18661:18;;;18654:62;18733:18;;8547:49:13::1;18401:356:18::0;8547:49:13::1;-1:-1:-1::0;;;;;8612:81:13;::::1;8628:8:::0;8612:81:::1;8645:7:::0;8654:10;8666:26:::1;8684:8:::0;8666:15:::1;:26;:::i;:::-;8612:81;::::0;;18964:25:18;;;19020:2;19005:18;;18998:34;;;;19048:18;;;19041:34;18952:2;18937:18;8612:81:13::1;;;;;;;-1:-1:-1::0;574:1:13;3386:22;;8719:8;6677:2082;-1:-1:-1;;;;;;;6677:2082:13:o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;9639:32:18;;3565:47:0;;;9621:51:18;9688:18;;;9681:34;;;9594:18;;3565:47:0;9431:290:18;3515:108:0;3432:197;;:::o;3714:255:6:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:6;;3714:255;-1:-1:-1;;;;3714:255:6:o;2129:778::-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:6;;2823:1;;-1:-1:-1;2827:35:6;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:6;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:6;;;;;1582:25:18;;;1555:18;;7634:46:6;1436:177:18;7563:243:6;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:6;;;;;1582:25:18;;;1555:18;;7763:32:6;1436:177:18;5203:1551:6;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:6;;-1:-1:-1;6385:30:6;;-1:-1:-1;6417:1:6;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;19724:25:18;;;19797:4;19785:17;;19765:18;;;19758:45;;;;19819:18;;;19812:34;;;19862:18;;;19855:34;;;6541:24:6;;19696:19:18;;6541:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:6;;-1:-1:-1;;6541:24:6;;;-1:-1:-1;;;;;;;6579:20:6;;6575:113;;-1:-1:-1;6631:1:6;;-1:-1:-1;6635:29:6;;-1:-1:-1;6631:1:6;;-1:-1:-1;6615:62:6;;6575:113;6706:6;-1:-1:-1;6714:20:6;;-1:-1:-1;6714:20:6;;-1:-1:-1;5203:1551:6;;;;;;;;;:::o;583:286:18:-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;736:23;;-1:-1:-1;;;;;;788:32:18;;778:43;;768:71;;835:1;832;825:12;768:71;858:5;583:286;-1:-1:-1;;;583:286:18:o;1066:180::-;1125:6;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;-1:-1:-1;1217:23:18;;1066:180;-1:-1:-1;1066:180:18:o;1618:131::-;-1:-1:-1;;;;;1693:31:18;;1683:42;;1673:70;;1739:1;1736;1729:12;1754:315;1822:6;1830;1883:2;1871:9;1862:7;1858:23;1854:32;1851:52;;;1899:1;1896;1889:12;1851:52;1935:9;1922:23;1912:33;;1995:2;1984:9;1980:18;1967:32;2008:31;2033:5;2008:31;:::i;:::-;2058:5;2048:15;;;1754:315;;;;;:::o;2074:127::-;2135:10;2130:3;2126:20;2123:1;2116:31;2166:4;2163:1;2156:15;2190:4;2187:1;2180:15;2206:718;2248:5;2301:3;2294:4;2286:6;2282:17;2278:27;2268:55;;2319:1;2316;2309:12;2268:55;2355:6;2342:20;2381:18;2418:2;2414;2411:10;2408:36;;;2424:18;;:::i;:::-;2499:2;2493:9;2467:2;2553:13;;-1:-1:-1;;2549:22:18;;;2573:2;2545:31;2541:40;2529:53;;;2597:18;;;2617:22;;;2594:46;2591:72;;;2643:18;;:::i;:::-;2683:10;2679:2;2672:22;2718:2;2710:6;2703:18;2764:3;2757:4;2752:2;2744:6;2740:15;2736:26;2733:35;2730:55;;;2781:1;2778;2771:12;2730:55;2845:2;2838:4;2830:6;2826:17;2819:4;2811:6;2807:17;2794:54;2892:1;2885:4;2880:2;2872:6;2868:15;2864:26;2857:37;2912:6;2903:15;;;;;;2206:718;;;;:::o;2929:456::-;3015:6;3023;3031;3084:2;3072:9;3063:7;3059:23;3055:32;3052:52;;;3100:1;3097;3090:12;3052:52;3136:9;3123:23;3113:33;;3193:2;3182:9;3178:18;3165:32;3155:42;;3248:2;3237:9;3233:18;3220:32;3275:18;3267:6;3264:30;3261:50;;;3307:1;3304;3297:12;3261:50;3330:49;3371:7;3362:6;3351:9;3347:22;3330:49;:::i;:::-;3320:59;;;2929:456;;;;;:::o;3572:525::-;3667:6;3675;3683;3691;3744:3;3732:9;3723:7;3719:23;3715:33;3712:53;;;3761:1;3758;3751:12;3712:53;3797:9;3784:23;3774:33;;3854:2;3843:9;3839:18;3826:32;3816:42;;3905:2;3894:9;3890:18;3877:32;3867:42;;3960:2;3949:9;3945:18;3932:32;3987:18;3979:6;3976:30;3973:50;;;4019:1;4016;4009:12;3973:50;4042:49;4083:7;4074:6;4063:9;4059:22;4042:49;:::i;:::-;4032:59;;;3572:525;;;;;;;:::o;4102:247::-;4161:6;4214:2;4202:9;4193:7;4189:23;4185:32;4182:52;;;4230:1;4227;4220:12;4182:52;4269:9;4256:23;4288:31;4313:5;4288:31;:::i;5351:661::-;5455:6;5463;5471;5479;5487;5540:3;5528:9;5519:7;5515:23;5511:33;5508:53;;;5557:1;5554;5547:12;5508:53;5596:9;5583:23;5615:31;5640:5;5615:31;:::i;:::-;5665:5;-1:-1:-1;5717:2:18;5702:18;;5689:32;;-1:-1:-1;5768:2:18;5753:18;;5740:32;;-1:-1:-1;5819:2:18;5804:18;;5791:32;;-1:-1:-1;5874:3:18;5859:19;;5846:33;5902:18;5891:30;;5888:50;;;5934:1;5931;5924:12;5888:50;5957:49;5998:7;5989:6;5978:9;5974:22;5957:49;:::i;:::-;5947:59;;;5351:661;;;;;;;;:::o;7334:127::-;7395:10;7390:3;7386:20;7383:1;7376:31;7426:4;7423:1;7416:15;7450:4;7447:1;7440:15;7466:168;7539:9;;;7570;;7587:15;;;7581:22;;7567:37;7557:71;;7608:18;;:::i;7892:341::-;8094:2;8076:21;;;8133:2;8113:18;;;8106:30;-1:-1:-1;;;8167:2:18;8152:18;;8145:47;8224:2;8209:18;;7892:341::o;9085:::-;9287:2;9269:21;;;9326:2;9306:18;;;9299:30;-1:-1:-1;;;9360:2:18;9345:18;;9338:47;9417:2;9402:18;;9085:341::o;11127:355::-;11329:2;11311:21;;;11368:2;11348:18;;;11341:30;11407:33;11402:2;11387:18;;11380:61;11473:2;11458:18;;11127:355::o;12850:125::-;12915:9;;;12936:10;;;12933:36;;;12949:18;;:::i;13681:128::-;13748:9;;;13769:11;;;13766:37;;;13783:18;;:::i;13814:217::-;13854:1;13880;13870:132;;13924:10;13919:3;13915:20;13912:1;13905:31;13959:4;13956:1;13949:15;13987:4;13984:1;13977:15;13870:132;-1:-1:-1;14016:9:18;;13814:217::o;19365:127::-;19426:10;19421:3;19417:20;19414:1;19407:31;19457:4;19454:1;19447:15;19481:4;19478:1;19471:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","approveClaim(bytes32)":"3719f096","calculateRefund(bytes32)":"8c51f60f","cancelPolicy(bytes32,uint256,bytes)":"2fe1814c","claimExpiryPeriod()":"30d95b53","emergencyWithdraw(uint256)":"5312ea8e","fileClaim(bytes32,uint256,bytes)":"5052cb49","getClaim(bytes32)":"c9100bcb","getPolicy(bytes32)":"a3f685f9","getRoleAdmin(bytes32)":"248a9ca3","grantAdminRole(address)":"c634b78e","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","markExpiredPolicy(bytes32)":"b0529da2","purchasePolicy(address,uint256,uint256,uint256,bytes)":"b87fb65c","renewPolicy(bytes32,uint256,uint256,bytes)":"4e494b7c","renounceRole(bytes32,address)":"36568abe","revokeAdminRole(address)":"9a19c7b0","revokeRole(bytes32,address)":"d547741f","setClaimExpiryPeriod(uint256)":"19c0d1fa","setTrustedSigner(address)":"56a1c701","setVault(address)":"6817031b","supportsInterface(bytes4)":"01ffc9a7","trustedSigner()":"f74d5480","vault()":"fbfa77cf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedSigner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"ClaimExpiryPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimFiled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PolicyExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"PolicyPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExpiry\",\"type\":\"uint256\"}],\"name\":\"PolicyRenewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"}],\"name\":\"PremiumCalculated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"RenewalAttemptRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSigner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"TrustedSignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"VaultUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"approveClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"calculateRefund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"cancelPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimExpiryPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fileClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPending\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.ClaimRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"getPolicy\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isClaimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyBase.Policy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"policyId\",\"type\":\"bytes32\"}],\"name\":\"markExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sumAssured\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"purchasePolicy\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"renewPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"periodInDays\",\"type\":\"uint256\"}],\"name\":\"setClaimExpiryPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newVault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract InsuranceVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extends PolicyBase for core functionality with signature verification and vault integration\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"approveClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"calculateRefund(bytes32)\":{\"params\":{\"policyId\":\"ID of the policy\"},\"returns\":{\"_0\":\"Refund amount\"}},\"cancelPolicy(bytes32,uint256,bytes)\":{\"params\":{\"policyId\":\"ID of the policy \",\"refundAmount\":\"Amount to refund \",\"signature\":\"Signature from trusted signer approving the refund\"}},\"emergencyWithdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}},\"fileClaim(bytes32,uint256,bytes)\":{\"params\":{\"amount\":\"Claim amount\",\"policyId\":\"The ID of the policy\",\"signature\":\"Signature from the backend verifying the claim\"}},\"getClaim(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"markExpiredPolicy(bytes32)\":{\"params\":{\"policyId\":\"The ID of the policy\"}},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"params\":{\"duration\":\"Policy duration in seconds\",\"owner\":\"Address of the policy owner\",\"premium\":\"Premium amount calculated by backend\",\"signature\":\"Signature from the backend verifying the parameters\",\"sumAssured\":\"Sum assured amount\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setClaimExpiryPeriod(uint256)\":{\"params\":{\"periodInDays\":\"Number of days a claim remains valid\"}},\"setTrustedSigner(address)\":{\"params\":{\"newSigner\":\"Address of the backend that will sign premium and claim amounts\"}},\"setVault(address)\":{\"params\":{\"newVault\":\"Address of the new vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"LifeCareLite\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveClaim(bytes32)\":{\"notice\":\"Admin approves claim and transfers funds from vault\"},\"calculateRefund(bytes32)\":{\"notice\":\"Calculate refund based on unused duration (pure calculation)\"},\"cancelPolicy(bytes32,uint256,bytes)\":{\"notice\":\"Override cancelPolicy to use the vault for refunds \"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Emergency withdraw function (only for admin)\"},\"fileClaim(bytes32,uint256,bytes)\":{\"notice\":\"File a claim for the insurance with signature verification\"},\"getClaim(bytes32)\":{\"notice\":\"Get claim details\"},\"getPolicy(bytes32)\":{\"notice\":\"Get policy details\"},\"grantAdminRole(address)\":{\"notice\":\"Grant admin role (only default admin can do this)\"},\"markExpiredPolicy(bytes32)\":{\"notice\":\"Mark a policy as expired\"},\"purchasePolicy(address,uint256,uint256,uint256,bytes)\":{\"notice\":\"Purchase policy with ETH payment and backend signature verification\"},\"renewPolicy(bytes32,uint256,uint256,bytes)\":{\"notice\":\"This plan does not support renewal (parameters intentionally unused)\"},\"revokeAdminRole(address)\":{\"notice\":\"Revoke admin role (only default admin can do this)\"},\"setClaimExpiryPeriod(uint256)\":{\"notice\":\"Set the claim expiry period\"},\"setTrustedSigner(address)\":{\"notice\":\"Set the trusted signer address\"},\"setVault(address)\":{\"notice\":\"Set the vault address\"}},\"notice\":\"Life insurance plan with fixed maturity and admin-verified premium structure\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/plans/LifeCareLite.sol\":\"LifeCareLite\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/base/PolicyBase.sol\":{\"keccak256\":\"0x555ae3aeceaa8b801b618d4c81768e8fc4faa13ce4531e4a6fd9eb924efd7926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18224c2ebd1c0fb75462a1791303086d1907609e60777f1db2385b4655686b7a\",\"dweb:/ipfs/QmVPqATESLLM2VpC67qC1PEW36jBY9MS57Ym497x4iZJqk\"]},\"contracts/plans/LifeCareLite.sol\":{\"keccak256\":\"0x618d61030b575cc97d90abea75b0f66928b6f2f0e85d7f4474df8ad50255e92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0cea579a2cb56e531fefe7f6dada9eb002020ef807f8ad7a5ff0b7834868c1e\",\"dweb:/ipfs/QmUtB5eyNM3putZvhjbKbz6vhtAngsAVfjZ6PL4xQPvAas\"]},\"contracts/utils/InsuranceVault.sol\":{\"keccak256\":\"0xd6ba55d73f4d10601c8a80c9de92154a2b0be98cc6c93a6146a9aea6e8ffb5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a99626984a220c68a6e19592536581477b445caae18158c0e733f75ccb862c97\",\"dweb:/ipfs/QmXLqCxfrLYvLd6hzUxCtnU2FmeP3ge52KskSJP9gH9oUG\"]}},\"version\":1}"}},"contracts/utils/InsuranceVault.sol":{"InsuranceVault":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ClaimPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PremiumPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundIssued","type":"event"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approveClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getVaultBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sendRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_9112":{"entryPoint":null,"id":9112,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":110,"id":525,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:514:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:18","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:18"},"nodeType":"YulFunctionCall","src":"143:12:18"},"nodeType":"YulExpressionStatement","src":"143:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:18"},"nodeType":"YulFunctionCall","src":"112:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:18"},"nodeType":"YulFunctionCall","src":"108:32:18"},"nodeType":"YulIf","src":"105:52:18"},{"nodeType":"YulVariableDeclaration","src":"166:29:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:18"},"nodeType":"YulFunctionCall","src":"179:16:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:18"},"nodeType":"YulFunctionCall","src":"260:12:18"},"nodeType":"YulExpressionStatement","src":"260:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:18"},"nodeType":"YulFunctionCall","src":"239:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:18"},"nodeType":"YulFunctionCall","src":"235:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:18"},"nodeType":"YulFunctionCall","src":"224:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:18"},"nodeType":"YulFunctionCall","src":"214:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:18"},"nodeType":"YulFunctionCall","src":"207:50:18"},"nodeType":"YulIf","src":"204:70:18"},{"nodeType":"YulAssignment","src":"283:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:18"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:18","type":""}],"src":"14:290:18"},{"body":{"nodeType":"YulBlock","src":"410:102:18","statements":[{"nodeType":"YulAssignment","src":"420:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"443:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:18"},"nodeType":"YulFunctionCall","src":"428:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"420:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"493:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"489:3:18"},"nodeType":"YulFunctionCall","src":"489:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"502:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"485:3:18"},"nodeType":"YulFunctionCall","src":"485:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"473:3:18"},"nodeType":"YulFunctionCall","src":"473:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"455:6:18"},"nodeType":"YulFunctionCall","src":"455:51:18"},"nodeType":"YulExpressionStatement","src":"455:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"379:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"390:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"401:4:18","type":""}],"src":"309:203:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516108c23803806108c283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b6107c5806100fd6000396000f3fe6080604052600436106100745760003560e01c8063c10753291161004e578063c107532914610178578063ed12e8ef14610198578063f2ad7908146101b3578063f2fde38b146101d357600080fd5b8063715018a6146101145780637e72ad1c1461012b5780638da5cb5b1461014b57600080fd5b3661010f57600034116100d85760405162461bcd60e51b815260206004820152602160248201527f5072656d69756d206d7573742062652067726561746572207468616e207a65726044820152606f60f81b60648201526084015b60405180910390fd5b60405134815233907fa21795436a9f6a3b412fd6780f01a49907f2181e76e938496b0a41991d99b61c9060200160405180910390a2005b600080fd5b34801561012057600080fd5b506101296101f3565b005b34801561013757600080fd5b50610129610146366004610708565b610207565b34801561015757600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561018457600080fd5b50610129610193366004610708565b610373565b3480156101a457600080fd5b5060405147815260200161016f565b3480156101bf57600080fd5b506101296101ce366004610708565b6104db565b3480156101df57600080fd5b506101296101ee366004610734565b610638565b6101fb610676565b61020560006106a3565b565b61020f610676565b8047101561022f5760405162461bcd60e51b81526004016100cf90610758565b6000811161028f5760405162461bcd60e51b815260206004820152602760248201527f526566756e6420616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b60648201526084016100cf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146102dc576040519150601f19603f3d011682016040523d82523d6000602084013e6102e1565b606091505b505090508061032b5760405162461bcd60e51b81526020600482015260166024820152751499599d5b99081d1c985b9cd9995c8819985a5b195960521b60448201526064016100cf565b826001600160a01b03167fa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d768360405161036691815260200190565b60405180910390a2505050565b61037b610676565b8047101561039b5760405162461bcd60e51b81526004016100cf90610758565b600081116103fd5760405162461bcd60e51b815260206004820152602960248201527f576974686472617720616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016100cf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461044a576040519150601f19603f3d011682016040523d82523d6000602084013e61044f565b606091505b50509050806104a05760405162461bcd60e51b815260206004820152601860248201527f5769746864726177207472616e73666572206661696c6564000000000000000060448201526064016100cf565b826001600160a01b03167fa692503bc54c9f1d1483729b6058a24987097ff492084b1a8adf8cae08e4fb438360405161036691815260200190565b6104e3610676565b804710156105035760405162461bcd60e51b81526004016100cf90610758565b600081116105625760405162461bcd60e51b815260206004820152602660248201527f436c61696d20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b60648201526084016100cf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146105af576040519150601f19603f3d011682016040523d82523d6000602084013e6105b4565b606091505b50509050806105fd5760405162461bcd60e51b815260206004820152601560248201527410db185a5b481d1c985b9cd9995c8819985a5b1959605a1b60448201526064016100cf565b826001600160a01b03167ff42cf8c29487b42c009006cba2a2a0ca0388229f3183e6e957e0a0b163585cb48360405161036691815260200190565b610640610676565b6001600160a01b03811661066a57604051631e4fbdf760e01b8152600060048201526024016100cf565b610673816106a3565b50565b6000546001600160a01b031633146102055760405163118cdaa760e01b81523360048201526024016100cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461067357600080fd5b6000806040838503121561071b57600080fd5b8235610726816106f3565b946020939093013593505050565b60006020828403121561074657600080fd5b8135610751816106f3565b9392505050565b6020808252601d908201527f496e73756666696369656e742062616c616e636520696e207661756c7400000060408201526060019056fea264697066735822122037efd27e40b93c5def32411f72f3e37dba4eb4bc92aedb8de07edd356e947b5664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8C2 CODESIZE SUB DUP1 PUSH2 0x8C2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x6E JUMP JUMPDEST POP POP PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7C5 DUP1 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1075329 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC1075329 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xED12E8EF EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xF2AD7908 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x7E72AD1C EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x10F JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D7573742062652067726561746572207468616E207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xA21795436A9F6A3B412FD6780F01A49907F2181E76E938496B0A41991D99B61C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x676 JUMP JUMPDEST PUSH2 0x205 PUSH1 0x0 PUSH2 0x6A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x20F PUSH2 0x676 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526566756E6420616D6F756E74206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1499599D5B99081D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76 DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x37B PUSH2 0x676 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177207472616E73666572206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA692503BC54C9F1D1483729B6058A24987097FF492084B1A8ADF8CAE08E4FB43 DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x676 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF42CF8C29487B42C009006CBA2A2A0CA0388229F3183E6E957E0A0B163585CB4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x640 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x673 DUP2 PUSH2 0x6A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x726 DUP2 PUSH2 0x6F3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x751 DUP2 PUSH2 0x6F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520696E207661756C74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xEF 0xD2 PUSH31 0x40B93C5DEF32411F72F3E37DBA4EB4BC92AEDB8DE07EDD356E947B5664736F PUSH13 0x63430008140033000000000000 ","sourceMap":"477:2403:17:-:0;;;764:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;806:12;-1:-1:-1;;;;;1273:26:2;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:2;;1350:1;1322:31;;;455:51:18;428:18;;1322:31:2;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;764:58:17;477:2403;;2912:187:2;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:18:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:18;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:18:o;309:203::-;477:2403:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_9132":{"entryPoint":null,"id":9132,"parameterSlots":0,"returnSlots":0},"@_checkOwner_463":{"entryPoint":1654,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_538":{"entryPoint":null,"id":538,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_525":{"entryPoint":1699,"id":525,"parameterSlots":1,"returnSlots":0},"@approveClaim_9180":{"entryPoint":1243,"id":9180,"parameterSlots":2,"returnSlots":0},"@getVaultBalance_9289":{"entryPoint":null,"id":9289,"parameterSlots":0,"returnSlots":1},"@owner_446":{"entryPoint":null,"id":446,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":499,"id":477,"parameterSlots":0,"returnSlots":0},"@sendRefund_9228":{"entryPoint":519,"id":9228,"parameterSlots":2,"returnSlots":0},"@transferOwnership_505":{"entryPoint":1592,"id":505,"parameterSlots":1,"returnSlots":0},"@withdrawFunds_9276":{"entryPoint":883,"id":9276,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":1844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":1800,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_41ad1fd7a377c65128ff91ef311367a52ddb89bdfb5e7f26ae1cf32863ee3f28__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5775e57055cbb5cfe0fc8e9bd3bda256090136749d4c3c86da222459ad4b40c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b11095aafbe99943afbbb6f068d05109a1c5eba4809c60c5650aede961689b9f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c4854df01cd43fa4f3764362141a44c4127f5146495ae05638f85c0291c151c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd015e898359de13ed0b79597164e03bcb74e39fc3ea668dcea861d13fc2f0e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"validator_revert_address_payable":{"entryPoint":1779,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4390:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:223:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:18"},"nodeType":"YulFunctionCall","src":"198:21:18"},"nodeType":"YulExpressionStatement","src":"198:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:18"},"nodeType":"YulFunctionCall","src":"235:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:18","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:18"},"nodeType":"YulFunctionCall","src":"228:30:18"},"nodeType":"YulExpressionStatement","src":"228:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:18"},"nodeType":"YulFunctionCall","src":"274:18:18"},{"hexValue":"5072656d69756d206d7573742062652067726561746572207468616e207a6572","kind":"string","nodeType":"YulLiteral","src":"294:34:18","type":"","value":"Premium must be greater than zer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:18"},"nodeType":"YulFunctionCall","src":"267:62:18"},"nodeType":"YulExpressionStatement","src":"267:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"349:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"360:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"345:3:18"},"nodeType":"YulFunctionCall","src":"345:18:18"},{"hexValue":"6f","kind":"string","nodeType":"YulLiteral","src":"365:3:18","type":"","value":"o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"338:6:18"},"nodeType":"YulFunctionCall","src":"338:31:18"},"nodeType":"YulExpressionStatement","src":"338:31:18"},{"nodeType":"YulAssignment","src":"378:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"390:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"401:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"386:3:18"},"nodeType":"YulFunctionCall","src":"386:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"378:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_41ad1fd7a377c65128ff91ef311367a52ddb89bdfb5e7f26ae1cf32863ee3f28__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:18","type":""}],"src":"14:397:18"},{"body":{"nodeType":"YulBlock","src":"517:76:18","statements":[{"nodeType":"YulAssignment","src":"527:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"539:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"535:3:18"},"nodeType":"YulFunctionCall","src":"535:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"527:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"569:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"580:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:18"},"nodeType":"YulFunctionCall","src":"562:25:18"},"nodeType":"YulExpressionStatement","src":"562:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"486:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"497:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"508:4:18","type":""}],"src":"416:177:18"},{"body":{"nodeType":"YulBlock","src":"651:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"715:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"724:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"727:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"717:6:18"},"nodeType":"YulFunctionCall","src":"717:12:18"},"nodeType":"YulExpressionStatement","src":"717:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"674:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"685:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"700:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"705:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"696:3:18"},"nodeType":"YulFunctionCall","src":"696:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"709:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"692:3:18"},"nodeType":"YulFunctionCall","src":"692:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"681:3:18"},"nodeType":"YulFunctionCall","src":"681:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"671:2:18"},"nodeType":"YulFunctionCall","src":"671:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"664:6:18"},"nodeType":"YulFunctionCall","src":"664:50:18"},"nodeType":"YulIf","src":"661:70:18"}]},"name":"validator_revert_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"640:5:18","type":""}],"src":"598:139:18"},{"body":{"nodeType":"YulBlock","src":"837:236:18","statements":[{"body":{"nodeType":"YulBlock","src":"883:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"892:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"895:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"885:6:18"},"nodeType":"YulFunctionCall","src":"885:12:18"},"nodeType":"YulExpressionStatement","src":"885:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"858:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"867:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"854:3:18"},"nodeType":"YulFunctionCall","src":"854:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"850:3:18"},"nodeType":"YulFunctionCall","src":"850:32:18"},"nodeType":"YulIf","src":"847:52:18"},{"nodeType":"YulVariableDeclaration","src":"908:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"921:12:18"},"nodeType":"YulFunctionCall","src":"921:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"912:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:18"}],"functionName":{"name":"validator_revert_address_payable","nodeType":"YulIdentifier","src":"953:32:18"},"nodeType":"YulFunctionCall","src":"953:39:18"},"nodeType":"YulExpressionStatement","src":"953:39:18"},{"nodeType":"YulAssignment","src":"1001:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1011:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1001:6:18"}]},{"nodeType":"YulAssignment","src":"1025:42:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1063:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:18"},"nodeType":"YulFunctionCall","src":"1048:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1035:12:18"},"nodeType":"YulFunctionCall","src":"1035:32:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1025:6:18"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"795:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"806:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"818:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"826:6:18","type":""}],"src":"742:331:18"},{"body":{"nodeType":"YulBlock","src":"1179:102:18","statements":[{"nodeType":"YulAssignment","src":"1189:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1201:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1212:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1197:3:18"},"nodeType":"YulFunctionCall","src":"1197:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1189:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1231:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1246:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1262:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1267:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1258:3:18"},"nodeType":"YulFunctionCall","src":"1258:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1271:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1254:3:18"},"nodeType":"YulFunctionCall","src":"1254:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1242:3:18"},"nodeType":"YulFunctionCall","src":"1242:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1224:6:18"},"nodeType":"YulFunctionCall","src":"1224:51:18"},"nodeType":"YulExpressionStatement","src":"1224:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1148:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1159:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1170:4:18","type":""}],"src":"1078:203:18"},{"body":{"nodeType":"YulBlock","src":"1356:185:18","statements":[{"body":{"nodeType":"YulBlock","src":"1402:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1411:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1414:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1404:6:18"},"nodeType":"YulFunctionCall","src":"1404:12:18"},"nodeType":"YulExpressionStatement","src":"1404:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1377:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1386:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1373:3:18"},"nodeType":"YulFunctionCall","src":"1373:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1398:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1369:3:18"},"nodeType":"YulFunctionCall","src":"1369:32:18"},"nodeType":"YulIf","src":"1366:52:18"},{"nodeType":"YulVariableDeclaration","src":"1427:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1453:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1440:12:18"},"nodeType":"YulFunctionCall","src":"1440:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1431:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1505:5:18"}],"functionName":{"name":"validator_revert_address_payable","nodeType":"YulIdentifier","src":"1472:32:18"},"nodeType":"YulFunctionCall","src":"1472:39:18"},"nodeType":"YulExpressionStatement","src":"1472:39:18"},{"nodeType":"YulAssignment","src":"1520:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1530:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1520:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1322:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1333:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1345:6:18","type":""}],"src":"1286:255:18"},{"body":{"nodeType":"YulBlock","src":"1720:179:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1737:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1748:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1730:6:18"},"nodeType":"YulFunctionCall","src":"1730:21:18"},"nodeType":"YulExpressionStatement","src":"1730:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1771:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1767:3:18"},"nodeType":"YulFunctionCall","src":"1767:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"1787:2:18","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1760:6:18"},"nodeType":"YulFunctionCall","src":"1760:30:18"},"nodeType":"YulExpressionStatement","src":"1760:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1810:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1821:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1806:3:18"},"nodeType":"YulFunctionCall","src":"1806:18:18"},{"hexValue":"496e73756666696369656e742062616c616e636520696e207661756c74","kind":"string","nodeType":"YulLiteral","src":"1826:31:18","type":"","value":"Insufficient balance in vault"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1799:6:18"},"nodeType":"YulFunctionCall","src":"1799:59:18"},"nodeType":"YulExpressionStatement","src":"1799:59:18"},{"nodeType":"YulAssignment","src":"1867:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:18"},"nodeType":"YulFunctionCall","src":"1875:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1697:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1711:4:18","type":""}],"src":"1546:353:18"},{"body":{"nodeType":"YulBlock","src":"2078:229:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2095:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2106:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2088:6:18"},"nodeType":"YulFunctionCall","src":"2088:21:18"},"nodeType":"YulExpressionStatement","src":"2088:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2129:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2140:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2125:3:18"},"nodeType":"YulFunctionCall","src":"2125:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"2145:2:18","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2118:6:18"},"nodeType":"YulFunctionCall","src":"2118:30:18"},"nodeType":"YulExpressionStatement","src":"2118:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2179:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:18"},"nodeType":"YulFunctionCall","src":"2164:18:18"},{"hexValue":"526566756e6420616d6f756e74206d7573742062652067726561746572207468","kind":"string","nodeType":"YulLiteral","src":"2184:34:18","type":"","value":"Refund amount must be greater th"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2157:6:18"},"nodeType":"YulFunctionCall","src":"2157:62:18"},"nodeType":"YulExpressionStatement","src":"2157:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2250:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:18"},"nodeType":"YulFunctionCall","src":"2235:18:18"},{"hexValue":"616e207a65726f","kind":"string","nodeType":"YulLiteral","src":"2255:9:18","type":"","value":"an zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2228:6:18"},"nodeType":"YulFunctionCall","src":"2228:37:18"},"nodeType":"YulExpressionStatement","src":"2228:37:18"},{"nodeType":"YulAssignment","src":"2274:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2286:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2297:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2282:3:18"},"nodeType":"YulFunctionCall","src":"2282:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2274:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c4854df01cd43fa4f3764362141a44c4127f5146495ae05638f85c0291c151c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2055:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2069:4:18","type":""}],"src":"1904:403:18"},{"body":{"nodeType":"YulBlock","src":"2503:14:18","statements":[{"nodeType":"YulAssignment","src":"2505:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"2512:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2505:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2487:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2495:3:18","type":""}],"src":"2312:205:18"},{"body":{"nodeType":"YulBlock","src":"2696:172:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2713:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2724:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2706:6:18"},"nodeType":"YulFunctionCall","src":"2706:21:18"},"nodeType":"YulExpressionStatement","src":"2706:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2747:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2758:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2743:3:18"},"nodeType":"YulFunctionCall","src":"2743:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"2763:2:18","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2736:6:18"},"nodeType":"YulFunctionCall","src":"2736:30:18"},"nodeType":"YulExpressionStatement","src":"2736:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2786:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2797:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2782:3:18"},"nodeType":"YulFunctionCall","src":"2782:18:18"},{"hexValue":"526566756e64207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"2802:24:18","type":"","value":"Refund transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2775:6:18"},"nodeType":"YulFunctionCall","src":"2775:52:18"},"nodeType":"YulExpressionStatement","src":"2775:52:18"},{"nodeType":"YulAssignment","src":"2836:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2848:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2859:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2844:3:18"},"nodeType":"YulFunctionCall","src":"2844:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2836:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd015e898359de13ed0b79597164e03bcb74e39fc3ea668dcea861d13fc2f0e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2673:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2687:4:18","type":""}],"src":"2522:346:18"},{"body":{"nodeType":"YulBlock","src":"3047:231:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3064:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3075:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3057:6:18"},"nodeType":"YulFunctionCall","src":"3057:21:18"},"nodeType":"YulExpressionStatement","src":"3057:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3109:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:18"},"nodeType":"YulFunctionCall","src":"3094:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3114:2:18","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3087:6:18"},"nodeType":"YulFunctionCall","src":"3087:30:18"},"nodeType":"YulExpressionStatement","src":"3087:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3137:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3148:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3133:3:18"},"nodeType":"YulFunctionCall","src":"3133:18:18"},{"hexValue":"576974686472617720616d6f756e74206d757374206265206772656174657220","kind":"string","nodeType":"YulLiteral","src":"3153:34:18","type":"","value":"Withdraw amount must be greater "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3126:6:18"},"nodeType":"YulFunctionCall","src":"3126:62:18"},"nodeType":"YulExpressionStatement","src":"3126:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3208:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3219:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:18"},"nodeType":"YulFunctionCall","src":"3204:18:18"},{"hexValue":"7468616e207a65726f","kind":"string","nodeType":"YulLiteral","src":"3224:11:18","type":"","value":"than zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3197:6:18"},"nodeType":"YulFunctionCall","src":"3197:39:18"},"nodeType":"YulExpressionStatement","src":"3197:39:18"},{"nodeType":"YulAssignment","src":"3245:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3257:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3268:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3253:3:18"},"nodeType":"YulFunctionCall","src":"3253:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3245:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b11095aafbe99943afbbb6f068d05109a1c5eba4809c60c5650aede961689b9f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3024:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3038:4:18","type":""}],"src":"2873:405:18"},{"body":{"nodeType":"YulBlock","src":"3457:174:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3474:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3485:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3467:6:18"},"nodeType":"YulFunctionCall","src":"3467:21:18"},"nodeType":"YulExpressionStatement","src":"3467:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3508:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3519:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3504:3:18"},"nodeType":"YulFunctionCall","src":"3504:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3524:2:18","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3497:6:18"},"nodeType":"YulFunctionCall","src":"3497:30:18"},"nodeType":"YulExpressionStatement","src":"3497:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3547:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3558:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3543:3:18"},"nodeType":"YulFunctionCall","src":"3543:18:18"},{"hexValue":"5769746864726177207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"3563:26:18","type":"","value":"Withdraw transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3536:6:18"},"nodeType":"YulFunctionCall","src":"3536:54:18"},"nodeType":"YulExpressionStatement","src":"3536:54:18"},{"nodeType":"YulAssignment","src":"3599:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3611:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3622:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3607:3:18"},"nodeType":"YulFunctionCall","src":"3607:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3599:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3434:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3448:4:18","type":""}],"src":"3283:348:18"},{"body":{"nodeType":"YulBlock","src":"3810:228:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3827:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3838:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3820:6:18"},"nodeType":"YulFunctionCall","src":"3820:21:18"},"nodeType":"YulExpressionStatement","src":"3820:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3861:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3872:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3857:3:18"},"nodeType":"YulFunctionCall","src":"3857:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"3877:2:18","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3850:6:18"},"nodeType":"YulFunctionCall","src":"3850:30:18"},"nodeType":"YulExpressionStatement","src":"3850:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3911:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:18"},"nodeType":"YulFunctionCall","src":"3896:18:18"},{"hexValue":"436c61696d20616d6f756e74206d757374206265206772656174657220746861","kind":"string","nodeType":"YulLiteral","src":"3916:34:18","type":"","value":"Claim amount must be greater tha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:18"},"nodeType":"YulFunctionCall","src":"3889:62:18"},"nodeType":"YulExpressionStatement","src":"3889:62:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3971:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:18"},"nodeType":"YulFunctionCall","src":"3967:18:18"},{"hexValue":"6e207a65726f","kind":"string","nodeType":"YulLiteral","src":"3987:8:18","type":"","value":"n zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3960:6:18"},"nodeType":"YulFunctionCall","src":"3960:36:18"},"nodeType":"YulExpressionStatement","src":"3960:36:18"},{"nodeType":"YulAssignment","src":"4005:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4017:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4028:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4013:3:18"},"nodeType":"YulFunctionCall","src":"4013:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4005:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3787:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3801:4:18","type":""}],"src":"3636:402:18"},{"body":{"nodeType":"YulBlock","src":"4217:171:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4234:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4245:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4227:6:18"},"nodeType":"YulFunctionCall","src":"4227:21:18"},"nodeType":"YulExpressionStatement","src":"4227:21:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4268:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4279:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4264:3:18"},"nodeType":"YulFunctionCall","src":"4264:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"4284:2:18","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4257:6:18"},"nodeType":"YulFunctionCall","src":"4257:30:18"},"nodeType":"YulExpressionStatement","src":"4257:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4307:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4318:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4303:3:18"},"nodeType":"YulFunctionCall","src":"4303:18:18"},{"hexValue":"436c61696d207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"4323:23:18","type":"","value":"Claim transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4296:6:18"},"nodeType":"YulFunctionCall","src":"4296:51:18"},"nodeType":"YulExpressionStatement","src":"4296:51:18"},{"nodeType":"YulAssignment","src":"4356:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4368:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4364:3:18"},"nodeType":"YulFunctionCall","src":"4364:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4356:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5775e57055cbb5cfe0fc8e9bd3bda256090136749d4c3c86da222459ad4b40c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4194:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4208:4:18","type":""}],"src":"4043:345:18"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_41ad1fd7a377c65128ff91ef311367a52ddb89bdfb5e7f26ae1cf32863ee3f28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Premium must be greater than zer\")\n        mstore(add(headStart, 96), \"o\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f517fc859e4a1cb45cea3aeacd8567c4227dc979ac6d3b417bce1d5b2f6e3807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient balance in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c4854df01cd43fa4f3764362141a44c4127f5146495ae05638f85c0291c151c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Refund amount must be greater th\")\n        mstore(add(headStart, 96), \"an zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_dd015e898359de13ed0b79597164e03bcb74e39fc3ea668dcea861d13fc2f0e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Refund transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b11095aafbe99943afbbb6f068d05109a1c5eba4809c60c5650aede961689b9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Withdraw amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_718af1fb337594ef8ce96c809dc966c89781a99c8248d472a4af6ee23c2cc56a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Withdraw transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8beb85dc5b1986bc23b2153f29a9770c54f9a894af717f01c2a245df409dbe7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Claim amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5775e57055cbb5cfe0fc8e9bd3bda256090136749d4c3c86da222459ad4b40c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Claim transfer failed\")\n        tail := add(headStart, 96)\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100745760003560e01c8063c10753291161004e578063c107532914610178578063ed12e8ef14610198578063f2ad7908146101b3578063f2fde38b146101d357600080fd5b8063715018a6146101145780637e72ad1c1461012b5780638da5cb5b1461014b57600080fd5b3661010f57600034116100d85760405162461bcd60e51b815260206004820152602160248201527f5072656d69756d206d7573742062652067726561746572207468616e207a65726044820152606f60f81b60648201526084015b60405180910390fd5b60405134815233907fa21795436a9f6a3b412fd6780f01a49907f2181e76e938496b0a41991d99b61c9060200160405180910390a2005b600080fd5b34801561012057600080fd5b506101296101f3565b005b34801561013757600080fd5b50610129610146366004610708565b610207565b34801561015757600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561018457600080fd5b50610129610193366004610708565b610373565b3480156101a457600080fd5b5060405147815260200161016f565b3480156101bf57600080fd5b506101296101ce366004610708565b6104db565b3480156101df57600080fd5b506101296101ee366004610734565b610638565b6101fb610676565b61020560006106a3565b565b61020f610676565b8047101561022f5760405162461bcd60e51b81526004016100cf90610758565b6000811161028f5760405162461bcd60e51b815260206004820152602760248201527f526566756e6420616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b60648201526084016100cf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146102dc576040519150601f19603f3d011682016040523d82523d6000602084013e6102e1565b606091505b505090508061032b5760405162461bcd60e51b81526020600482015260166024820152751499599d5b99081d1c985b9cd9995c8819985a5b195960521b60448201526064016100cf565b826001600160a01b03167fa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d768360405161036691815260200190565b60405180910390a2505050565b61037b610676565b8047101561039b5760405162461bcd60e51b81526004016100cf90610758565b600081116103fd5760405162461bcd60e51b815260206004820152602960248201527f576974686472617720616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016100cf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461044a576040519150601f19603f3d011682016040523d82523d6000602084013e61044f565b606091505b50509050806104a05760405162461bcd60e51b815260206004820152601860248201527f5769746864726177207472616e73666572206661696c6564000000000000000060448201526064016100cf565b826001600160a01b03167fa692503bc54c9f1d1483729b6058a24987097ff492084b1a8adf8cae08e4fb438360405161036691815260200190565b6104e3610676565b804710156105035760405162461bcd60e51b81526004016100cf90610758565b600081116105625760405162461bcd60e51b815260206004820152602660248201527f436c61696d20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b60648201526084016100cf565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146105af576040519150601f19603f3d011682016040523d82523d6000602084013e6105b4565b606091505b50509050806105fd5760405162461bcd60e51b815260206004820152601560248201527410db185a5b481d1c985b9cd9995c8819985a5b1959605a1b60448201526064016100cf565b826001600160a01b03167ff42cf8c29487b42c009006cba2a2a0ca0388229f3183e6e957e0a0b163585cb48360405161036691815260200190565b610640610676565b6001600160a01b03811661066a57604051631e4fbdf760e01b8152600060048201526024016100cf565b610673816106a3565b50565b6000546001600160a01b031633146102055760405163118cdaa760e01b81523360048201526024016100cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461067357600080fd5b6000806040838503121561071b57600080fd5b8235610726816106f3565b946020939093013593505050565b60006020828403121561074657600080fd5b8135610751816106f3565b9392505050565b6020808252601d908201527f496e73756666696369656e742062616c616e636520696e207661756c7400000060408201526060019056fea264697066735822122037efd27e40b93c5def32411f72f3e37dba4eb4bc92aedb8de07edd356e947b5664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1075329 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC1075329 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xED12E8EF EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xF2AD7908 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x7E72AD1C EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x10F JUMPI PUSH1 0x0 CALLVALUE GT PUSH2 0xD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072656D69756D206D7573742062652067726561746572207468616E207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xA21795436A9F6A3B412FD6780F01A49907F2181E76E938496B0A41991D99B61C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x734 JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST PUSH2 0x1FB PUSH2 0x676 JUMP JUMPDEST PUSH2 0x205 PUSH1 0x0 PUSH2 0x6A3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x20F PUSH2 0x676 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526566756E6420616D6F756E74206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1499599D5B99081D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76 DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x37B PUSH2 0x676 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177207472616E73666572206661696C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA692503BC54C9F1D1483729B6058A24987097FF492084B1A8ADF8CAE08E4FB43 DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x4E3 PUSH2 0x676 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10DB185A5B481D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF42CF8C29487B42C009006CBA2A2A0CA0388229F3183E6E957E0A0B163585CB4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x640 PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x66A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x673 DUP2 PUSH2 0x6A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x726 DUP2 PUSH2 0x6F3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x751 DUP2 PUSH2 0x6F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520696E207661756C74000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xEF 0xD2 PUSH31 0x40B93C5DEF32411F72F3E37DBA4EB4BC92AEDB8DE07EDD356E947B5664736F PUSH13 0x63430008140033000000000000 ","sourceMap":"477:2403:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:1;923:9;:13;915:59;;;;-1:-1:-1;;;915:59:17;;216:2:18;915:59:17;;;198:21:18;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:18;;;338:31;386:19;;915:59:17;;;;;;;;;989:34;;1013:9;562:25:18;;1001:10:17;;989:34;;550:2:18;535:18;989:34:17;;;;;;;477:2403;;;;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;1735:377:17;;;;;;;;;;-1:-1:-1;1735:377:17;;;;;:::i;:::-;;:::i;1638:85:2:-;;;;;;;;;;-1:-1:-1;1684:7:2;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:2;;;1224:51:18;;1212:2;1197:18;1638:85:2;;;;;;;;2277:385:17;;;;;;;;;;-1:-1:-1;2277:385:17;;;;;:::i;:::-;;:::i;2774:104::-;;;;;;;;;;-1:-1:-1;2774:104:17;;2850:21;562:25:18;;550:2;535:18;2774:104:17;416:177:18;1204:374:17;;;;;;;;;;-1:-1:-1;1204:374:17;;;;;:::i;:::-;;:::i;2543:215:2:-;;;;;;;;;;-1:-1:-1;2543:215:2;;;;;:::i;:::-;;:::i;2293:101::-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1735:377:17:-;1531:13:2;:11;:13::i;:::-;1853:6:17::1;1828:21;:31;;1820:73;;;;-1:-1:-1::0;;;1820:73:17::1;;;;;;;:::i;:::-;1920:1;1911:6;:10;1903:62;;;::::0;-1:-1:-1;;;1903:62:17;;2106:2:18;1903:62:17::1;::::0;::::1;2088:21:18::0;2145:2;2125:18;;;2118:30;2184:34;2164:18;;;2157:62;-1:-1:-1;;;2235:18:18;;;2228:37;2282:19;;1903:62:17::1;1904:403:18::0;1903:62:17::1;1976:9;1991:2;-1:-1:-1::0;;;;;1991:7:17::1;2006:6;1991:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:42;;;2035:4;2027:39;;;::::0;-1:-1:-1;;;2027:39:17;;2724:2:18;2027:39:17::1;::::0;::::1;2706:21:18::0;2763:2;2743:18;;;2736:30;-1:-1:-1;;;2782:18:18;;;2775:52;2844:18;;2027:39:17::1;2522:346:18::0;2027:39:17::1;2094:2;-1:-1:-1::0;;;;;2081:24:17::1;;2098:6;2081:24;;;;562:25:18::0;;550:2;535:18;;416:177;2081:24:17::1;;;;;;;;1810:302;1735:377:::0;;:::o;2277:385::-;1531:13:2;:11;:13::i;:::-;2398:6:17::1;2373:21;:31;;2365:73;;;;-1:-1:-1::0;;;2365:73:17::1;;;;;;;:::i;:::-;2465:1;2456:6;:10;2448:64;;;::::0;-1:-1:-1;;;2448:64:17;;3075:2:18;2448:64:17::1;::::0;::::1;3057:21:18::0;3114:2;3094:18;;;3087:30;3153:34;3133:18;;;3126:62;-1:-1:-1;;;3204:18:18;;;3197:39;3253:19;;2448:64:17::1;2873:405:18::0;2448:64:17::1;2523:9;2538:2;-1:-1:-1::0;;;;;2538:7:17::1;2553:6;2538:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2522:42;;;2582:4;2574:41;;;::::0;-1:-1:-1;;;2574:41:17;;3485:2:18;2574:41:17::1;::::0;::::1;3467:21:18::0;3524:2;3504:18;;;3497:30;3563:26;3543:18;;;3536:54;3607:18;;2574:41:17::1;3283:348:18::0;2574:41:17::1;2644:2;-1:-1:-1::0;;;;;2630:25:17::1;;2648:6;2630:25;;;;562::18::0;;550:2;535:18;;416:177;1204:374:17;1531:13:2;:11;:13::i;:::-;1324:6:17::1;1299:21;:31;;1291:73;;;;-1:-1:-1::0;;;1291:73:17::1;;;;;;;:::i;:::-;1391:1;1382:6;:10;1374:61;;;::::0;-1:-1:-1;;;1374:61:17;;3838:2:18;1374:61:17::1;::::0;::::1;3820:21:18::0;3877:2;3857:18;;;3850:30;3916:34;3896:18;;;3889:62;-1:-1:-1;;;3967:18:18;;;3960:36;4013:19;;1374:61:17::1;3636:402:18::0;1374:61:17::1;1446:9;1461:2;-1:-1:-1::0;;;;;1461:7:17::1;1476:6;1461:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1445:42;;;1505:4;1497:38;;;::::0;-1:-1:-1;;;1497:38:17;;4245:2:18;1497:38:17::1;::::0;::::1;4227:21:18::0;4284:2;4264:18;;;4257:30;-1:-1:-1;;;4303:18:18;;;4296:51;4364:18;;1497:38:17::1;4043:345:18::0;1497:38:17::1;1560:2;-1:-1:-1::0;;;;;1550:21:17::1;;1564:6;1550:21;;;;562:25:18::0;;550:2;535:18;;416:177;2543:215:2;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:2;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:2;;2700:1:::1;2672:31;::::0;::::1;1224:51:18::0;1197:18;;2672:31:2::1;1078:203:18::0;2623:91:2::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:2;735:10:3;1855:23:2;1851:101;;1901:40;;-1:-1:-1;;;1901:40:2;;735:10:3;1901:40:2;;;1224:51:18;1197:18;;1901:40:2;1078:203:18;2912:187:2;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;598:139:18:-;-1:-1:-1;;;;;681:31:18;;671:42;;661:70;;727:1;724;717:12;742:331;818:6;826;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;934:9;921:23;953:39;986:5;953:39;:::i;:::-;1011:5;1063:2;1048:18;;;;1035:32;;-1:-1:-1;;;742:331:18:o;1286:255::-;1345:6;1398:2;1386:9;1377:7;1373:23;1369:32;1366:52;;;1414:1;1411;1404:12;1366:52;1453:9;1440:23;1472:39;1505:5;1472:39;:::i;:::-;1530:5;1286:255;-1:-1:-1;;;1286:255:18:o;1546:353::-;1748:2;1730:21;;;1787:2;1767:18;;;1760:30;1826:31;1821:2;1806:18;;1799:59;1890:2;1875:18;;1546:353::o"},"methodIdentifiers":{"approveClaim(address,uint256)":"f2ad7908","getVaultBalance()":"ed12e8ef","owner()":"8da5cb5b","renounceOwnership()":"715018a6","sendRefund(address,uint256)":"7e72ad1c","transferOwnership(address)":"f2fde38b","withdrawFunds(address,uint256)":"c1075329"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PremiumPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Acts as the central treasury for all insurance plans. Only the contract owner can approve payouts or issue refunds. Incoming ETH (premiums) are logged via events. Does not implement business logic\\u2014only handles secure fund transfers.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"approveClaim(address,uint256)\":{\"params\":{\"amount\":\"The amount to be paid out\",\"to\":\"The address of the policyholder\"}},\"getVaultBalance()\":{\"returns\":{\"_0\":\"The current balance of the vault\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"sendRefund(address,uint256)\":{\"params\":{\"amount\":\"The amount to be refunded\",\"to\":\"The address of the policyholder\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw\",\"to\":\"The address to withdraw funds to\"}}},\"title\":\"InsuranceVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveClaim(address,uint256)\":{\"notice\":\"Approve and send a claim payout to a policyholder\"},\"getVaultBalance()\":{\"notice\":\"Get the current balance of the vault\"},\"sendRefund(address,uint256)\":{\"notice\":\"Issue a refund to a policyholder\"},\"withdrawFunds(address,uint256)\":{\"notice\":\"Withdraw funds from the vault (Admin Only)\"}},\"notice\":\"Holds and manages ETH funds for insurance premiums, claims, and refunds\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/InsuranceVault.sol\":\"InsuranceVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/utils/InsuranceVault.sol\":{\"keccak256\":\"0xd6ba55d73f4d10601c8a80c9de92154a2b0be98cc6c93a6146a9aea6e8ffb5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a99626984a220c68a6e19592536581477b445caae18158c0e733f75ccb862c97\",\"dweb:/ipfs/QmXLqCxfrLYvLd6hzUxCtnU2FmeP3ge52KskSJP9gH9oUG\"]}},\"version\":1}"}}}}}
// fixedSignatureGenerator.js
// ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á signature.utils.ts
const { ethers } = require('ethers');
require('dotenv').config({ path: '../.env' });

async function generateCorrectSignature() {
  // 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
  const age = 35;
  const gender = "male";
  const occupation = "software engineer";
  const sumAssured = 1000000;
  const premiumInThb = 7500;

  try {
    // 2. ‡πÇ‡∏´‡∏•‡∏î private key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö admin
    const adminKey = process.env.ADMIN_PRIVATE_KEY || 'daee72147f7914d7337682fc9c7fc305ebe92d6bae467d5f07de4765d830e8d6';
    if (!adminKey) {
      throw new Error("ADMIN_PRIVATE_KEY not set in the environment");
    }

    const wallet = new ethers.Wallet(adminKey);
    console.log("üë§ Admin address:", wallet.address);

    // 3. ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö premium ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 6 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
    const formattedPremium = Number(premiumInThb).toFixed(6);
    
    // 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (message)
    const message = `${age},${gender},${occupation},${sumAssured},${formattedPremium}`;
    console.log("\nüìù Message string:", message);
    
    // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á message hash ‡∏î‡πâ‡∏ß‡∏¢ keccak256 (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å: ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö hashMessage ‡πÉ‡∏ô backend)
    const messageHash = ethers.utils.keccak256(ethers.utils.toUtf8Bytes(message));
    console.log("üîë Message hash:", messageHash);

    // 6. ‡∏™‡∏£‡πâ‡∏≤‡∏á signature ‡πÇ‡∏î‡∏¢‡πÄ‡∏ã‡πá‡∏ô messageHash (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà message ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤)
    // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ô generateSignature ‡∏Ç‡∏≠‡∏á backend
    const signature = await wallet.signMessage(ethers.utils.arrayify(messageHash));
    console.log("‚úÖ Generated signature:", signature);

    // 7. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö signature ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö backend
    console.log("\nüîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö backend:");
    try {
      const recoveredAddress = ethers.utils.verifyMessage(
        ethers.utils.arrayify(messageHash),
        signature
      );
      console.log("Recovered address:", recoveredAddress);
      console.log("Admin address:", wallet.address);
      console.log("Valid signature:", recoveredAddress.toLowerCase() === wallet.address.toLowerCase());
    } catch (error) {
      console.error("‚ùå Error during verification:", error.message);
    }

    // 8. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° JSON payload ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô Postman ‡∏´‡∏£‡∏∑‡∏≠ cURL
    const payload = {
      age,
      gender,
      occupation,
      sumAssured,
      signature
    };

    console.log("\nüì¶ Ready-to-use JSON for API testing:");
    console.log(JSON.stringify(payload, null, 2));

    // 9. ‡∏™‡∏£‡πâ‡∏≤‡∏á cURL command ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    const curlCommand = `curl -X POST http://localhost:3000/life-care-lite/calculate-premium \\
  -H "Content-Type: application/json" \\
  -d '${JSON.stringify(payload)}'`;

    console.log("\nüöÄ cURL command for testing:");
    console.log(curlCommand);
    
    // 10. ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö ADMIN_PUBLIC_KEY
    console.log("\n‚ö†Ô∏è ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ADMIN_PUBLIC_KEY ‡πÉ‡∏ô backend");
    console.log(`‡∏Ñ‡πà‡∏≤ ADMIN_PUBLIC_KEY ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö address ‡∏Ç‡∏≠‡∏á wallet (${wallet.address})`);
    console.log("‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ env variable ADMIN_PUBLIC_KEY ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤ default ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå signature.utils.ts");
    
  } catch (error) {
    console.error("‚ùå Error generating signature:", error.message);
  }
}

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
generateCorrectSignature().catch(console.error);
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "./generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  USER
  ADMIN
  DEVELOPER
}

model User {
  walletAddress String   @id @unique
  username      String?  @unique
  fullName      String?
  imageUrl      String?
  age           Int
  gender        String
  occupation    String
  contactInfo   String
  role          UserRole @default(USER)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  nonce         String?

  policies Policy[]
  claims   Claim[]
  events   EventLog[]
}

model Policy {
  id            Int      @id @default(autoincrement())
  walletAddress String
  premium       Decimal  @db.Decimal(10, 2)
  sumAssured    Decimal  @db.Decimal(10, 2)
  expiry        DateTime
  isActive      Boolean  @default(true)
  planTypeId    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user     User       @relation(fields: [walletAddress], references: [walletAddress])
  planType PolicyType @relation(fields: [planTypeId], references: [id])
  claims   Claim[]
}

model Claim {
  id            Int       @id @default(autoincrement())
  walletAddress String
  policyId      Int
  amount        Decimal   @db.Decimal(10, 2)
  documentHash  String    @unique
  isPending     Boolean   @default(true)
  status        String    @default("Pending")
  approvedDate  DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  user   User   @relation(fields: [walletAddress], references: [walletAddress])
  policy Policy @relation(fields: [policyId], references: [id])
}

model EventLog {
  id            Int      @id @default(autoincrement())
  walletAddress String
  event_type    String
  amount        Decimal? @db.Decimal(10, 2)
  tx_hash       String?  @unique
  timestamp     DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [walletAddress], references: [walletAddress])
}

model OracleRate {
  id         Int      @id @default(autoincrement())
  timestamp  DateTime @unique
  rate       Decimal  @db.Decimal(18, 8)
  updated_by String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model PolicyType {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  policies Policy[]
}
